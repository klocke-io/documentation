import{_ as o,c as a,o as t,a2 as r}from"./chunks/framework.Bfq10Vlj.js";const g=JSON.parse('{"title":"Shoot Autoscaling","description":"The basics of horizontal Node and vertical Pod auto-scaling","frontmatter":{"aliases":["/docs/gardener/shoot_autoscaling/"],"description":"The basics of horizontal Node and vertical Pod auto-scaling","github_repo":"https://github.com/gardener/gardener","github_subdir":"docs/usage/autoscaling","params":{"github_branch":"master"},"path_base_for_github_subdir":{"from":"content/docs/gardener/autoscaling/shoot_autoscaling.md","to":"shoot_autoscaling.md"},"persona":"Users","title":"Shoot Autoscaling","prev":false,"next":false},"headers":[],"relativePath":"docs/gardener/autoscaling/shoot_autoscaling/index.md","filePath":"docs/gardener/autoscaling/shoot_autoscaling.md","lastUpdated":null}'),s={name:"docs/gardener/autoscaling/shoot_autoscaling/index.md"};function n(c,e,l,i,d,u){return t(),a("div",null,e[0]||(e[0]=[r('<h1 id="auto-scaling-in-shoot-clusters" tabindex="-1">Auto-Scaling in Shoot Clusters <a class="header-anchor" href="#auto-scaling-in-shoot-clusters" aria-label="Permalink to &quot;Auto-Scaling in Shoot Clusters&quot;">​</a></h1><p>There are three auto-scaling scenarios of relevance in Kubernetes clusters in general and Gardener shoot clusters in particular:</p><ul><li>Horizontal node auto-scaling, i.e., dynamically adding and removing worker nodes.</li><li>Horizontal pod auto-scaling, i.e., dynamically adding and removing pod replicas.</li><li>Vertical pod auto-scaling, i.e., dynamically raising or shrinking the resource requests/limits of pods.</li></ul><p>This document provides an overview of these scenarios and how the respective auto-scaling components can be enabled and configured. For more details, please see our <a href="/docs/gardener/autoscaling/shoot_pod_autoscaling_best_practices/">pod auto-scaling best practices</a>.</p><h2 id="horizontal-node-auto-scaling" tabindex="-1">Horizontal Node Auto-Scaling <a class="header-anchor" href="#horizontal-node-auto-scaling" aria-label="Permalink to &quot;Horizontal Node Auto-Scaling&quot;">​</a></h2><p>Every shoot cluster that has at least one worker pool with <code>minimum &lt; maximum</code> nodes configuration will get a <code>cluster-autoscaler</code> deployment. Gardener is leveraging the upstream community Kubernetes <a href="https://github.com/kubernetes/autoscaler/tree/master/cluster-autoscaler" target="_blank" rel="noreferrer"><code>cluster-autoscaler</code> component</a>. We have forked it to <a href="https://github.com/gardener/autoscaler/" target="_blank" rel="noreferrer">gardener/autoscaler</a> so that it supports the way how Gardener manages the worker nodes (leveraging <a href="https://github.com/gardener/machine-controller-manager" target="_blank" rel="noreferrer">gardener/machine-controller-manager</a>). However, we have not touched the logic how it performs auto-scaling decisions. Consequently, please refer to the <a href="https://github.com/kubernetes/autoscaler/tree/master/cluster-autoscaler#faqdocumentation" target="_blank" rel="noreferrer">official documentation</a> for this component.</p><p>The <code>Shoot</code> API allows to configure a few flags of the <code>cluster-autoscaler</code>:</p><p>There are <a href="/docs/gardener/api-reference/core/#core.gardener.cloud/v1beta1.ClusterAutoscaler">general options for <code>cluster-autoscaler</code></a>, and these values will be used for all worker groups except for those overwriting them. Additionally, there are some <a href="/docs/gardener/api-reference/core/#core.gardener.cloud/v1beta1.ClusterAutoscalerOptions"><code>cluster-autoscaler</code> flags to be set per worker pool</a>. They override any general value such as those specified in the general flags above.</p><blockquote><p>Only some <code>cluster-autoscaler</code> flags can be configured per worker pool, and is limited by NodeGroupAutoscalingOptions of the upstream community Kubernetes repository. This list can be found <a href="https://github.com/gardener/autoscaler/blob/machine-controller-manager-provider/cluster-autoscaler/config/autoscaling_options.go#L37-L55" target="_blank" rel="noreferrer">here</a>.</p></blockquote><h2 id="horizontal-pod-auto-scaling" tabindex="-1">Horizontal Pod Auto-Scaling <a class="header-anchor" href="#horizontal-pod-auto-scaling" aria-label="Permalink to &quot;Horizontal Pod Auto-Scaling&quot;">​</a></h2><p>This functionality (HPA) is a standard functionality of any Kubernetes cluster (implemented as part of the <code>kube-controller-manager</code> that all Kubernetes clusters have). It is always enabled.</p><p>The <code>Shoot</code> API allows to configure most of the <a href="/docs/gardener/api-reference/core/#core.gardener.cloud/v1beta1.HorizontalPodAutoscalerConfig">flags of the <code>horizontal-pod-autoscaler</code></a>.</p><h2 id="vertical-pod-auto-scaling" tabindex="-1">Vertical Pod Auto-Scaling <a class="header-anchor" href="#vertical-pod-auto-scaling" aria-label="Permalink to &quot;Vertical Pod Auto-Scaling&quot;">​</a></h2><p>This form of auto-scaling (VPA) is enabled by default, but it can be switched off in the <code>Shoot</code> by setting <code>.spec.kubernetes.verticalPodAutoscaler.enabled=false</code> in case you deploy your own VPA into your cluster (having more than one VPA on the same set of pods will lead to issues, eventually).</p><p>Gardener is leveraging the upstream community Kubernetes <a href="https://github.com/kubernetes/autoscaler/tree/master/vertical-pod-autoscaler" target="_blank" rel="noreferrer"><code>vertical-pod-autoscaler</code></a>. If enabled, Gardener will deploy it as part of the control plane into the seed cluster. It will also be used for the vertical autoscaling of Gardener&#39;s system components deployed into the <code>kube-system</code> namespace of shoot clusters, for example, <code>kube-proxy</code> or <code>metrics-server</code>.</p><p>You might want to refer to the <a href="https://github.com/kubernetes/autoscaler/blob/master/vertical-pod-autoscaler/README.md" target="_blank" rel="noreferrer">official documentation</a> for this component to get more information how to use it.</p><p>The <code>Shoot</code> API allows to configure a few <a href="/docs/gardener/api-reference/core/#core.gardener.cloud/v1beta1.VerticalPodAutoscaler">flags of the <code>vertical-pod-autoscaler</code></a>.</p><p>⚠️ Please note that if you disable VPA, the related <code>CustomResourceDefinition</code>s (ours and yours) will remain in your shoot cluster (whether someone acts on them or not). You can delete these <code>CustomResourceDefinition</code>s yourself using <code>kubectl delete crd</code> if you want to get rid of them (in case you statically size all resources, which we do not recommend).</p><h1 id="pod-auto-scaling-best-practices" tabindex="-1">Pod Auto-Scaling Best Practices <a class="header-anchor" href="#pod-auto-scaling-best-practices" aria-label="Permalink to &quot;Pod Auto-Scaling Best Practices&quot;">​</a></h1><p>Please continue reading our <a href="/docs/gardener/autoscaling/shoot_pod_autoscaling_best_practices/">pod auto-scaling best practices</a> for more details and recommendations.</p>',20)]))}const p=o(s,[["render",n]]);export{g as __pageData,p as default};
