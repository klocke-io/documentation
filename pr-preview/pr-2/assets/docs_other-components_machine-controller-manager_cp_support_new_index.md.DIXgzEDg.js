import{_ as i,c as s,o as a,a2 as t}from"./chunks/framework.B8WFj13S.js";const g=JSON.parse('{"title":"Adding Support for a Cloud Provider","description":"","frontmatter":{"github_repo":"https://github.com/gardener/machine-controller-manager","github_subdir":"docs/development","params":{"github_branch":"master"},"path_base_for_github_subdir":{"from":"content/docs/other-components/machine-controller-manager/cp_support_new.md","to":"cp_support_new.md"},"persona":"Developers","title":"Adding Support for a Cloud Provider","prev":false,"next":false},"headers":[],"relativePath":"docs/other-components/machine-controller-manager/cp_support_new/index.md","filePath":"docs/other-components/machine-controller-manager/cp_support_new.md","lastUpdated":null}'),n={name:"docs/other-components/machine-controller-manager/cp_support_new/index.md"};function o(l,e,r,h,p,d){return a(),s("div",null,e[0]||(e[0]=[t(`<h1 id="adding-support-for-a-new-provider" tabindex="-1">Adding support for a new provider <a class="header-anchor" href="#adding-support-for-a-new-provider" aria-label="Permalink to &quot;Adding support for a new provider&quot;">​</a></h1><p>Steps to be followed while implementing a new (hyperscale) provider are mentioned below. This is the easiest way to add new provider support using a blueprint code.</p><p>However, you may also develop your machine controller from scratch, which would provide you with more flexibility. First, however, make sure that your custom machine controller adheres to the <code>Machine.Status</code> struct defined in the <a href="https://github.com/gardener/machine-controller-manager/blob/master/pkg/apis/machine/types.go" target="_blank" rel="noreferrer">MachineAPIs</a>. This will make sure the MCM can act with higher-level controllers like MachineSet and MachineDeployment controller. The key is the <code>Machine.Status.CurrentStatus.Phase</code> key that indicates the status of the machine object.</p><p>Our strong recommendation would be to follow the steps below. This provides the most flexibility required to support machine management for adding new providers. And if you feel to extend the functionality, feel free to update our <a href="https://github.com/gardener/machine-controller-manager/tree/master/pkg/util/provider" target="_blank" rel="noreferrer">machine controller libraries</a>.</p><h2 id="setting-up-your-repository" tabindex="-1">Setting up your repository <a class="header-anchor" href="#setting-up-your-repository" aria-label="Permalink to &quot;Setting up your repository&quot;">​</a></h2><ol><li>Create a new empty repository named <code>machine-controller-manager-provider-{provider-name}</code> on GitHub username/project. Do not initialize this repository with a README.</li><li>Copy the remote repository <code>URL</code> (HTTPS/SSH) to this repository displayed once you create this repository.</li><li>Now, on your local system, create directories as required. {your-github-username} given below could also be {github-project} depending on where you have created the new repository.<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $GOPATH</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/src/github.com/{your-github-username}</span></span></code></pre></div></li><li>Navigate to this created directory.<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $GOPATH</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/src/github.com/{your-github-username}</span></span></code></pre></div></li><li>Clone <a href="https://github.com/gardener/machine-controller-manager-provider-sampleprovider" target="_blank" rel="noreferrer">this repository</a> on your local machine.<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git@github.com:gardener/machine-controller-manager-provider-sampleprovider.git</span></span></code></pre></div></li><li>Rename the directory from <code>machine-controller-manager-provider-sampleprovider</code> to <code>machine-controller-manager-provider-{provider-name}</code>.<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mv</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> machine-controller-manager-provider-sampleprovider</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> machine-controller-manager-provider-{provider-name}</span></span></code></pre></div></li><li>Navigate into the newly-created directory.<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> machine-controller-manager-provider-{provider-name}</span></span></code></pre></div></li><li>Update the remote <code>origin</code> URL to the newly created repository&#39;s URL you had copied above.<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remote</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set-url</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git@github.com:{your-github-username}/machine-controller-manager-provider-{provider-name}.git</span></span></code></pre></div></li><li>Rename GitHub project from <code>gardener</code> to <code>{github-org/your-github-username}</code> wherever you have cloned the repository above. Also, edit all occurrences of the word <code>sampleprovider</code> to <code>{provider-name}</code> in the code. Then, use the hack script given below to do the same.<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rename-project</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PROJECT_NAME={github-org/your-github-username}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PROVIDER_NAME={provider-name}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">eg:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rename-project</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PROJECT_NAME=gardener</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PROVIDER_NAME=AmazonWebServices</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (or)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rename-project</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PROJECT_NAME=githubusername</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PROVIDER_NAME=AWS</span></span></code></pre></div></li><li>Now, commit your changes and push them upstream.<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -A</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Renamed SampleProvide to {provider-name}&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> master</span></span></code></pre></div></li></ol><h2 id="code-changes-required" tabindex="-1">Code changes required <a class="header-anchor" href="#code-changes-required" aria-label="Permalink to &quot;Code changes required&quot;">​</a></h2><p>The contract between the Machine Controller Manager (MCM) and the Machine Controller (MC) AKA driver has been <a href="/documentation/pr-preview/pr-2/docs/other-components/machine-controller-manager/machine_error_codes/">documented here</a> and the <a href="https://github.com/gardener/machine-controller-manager/blob/master/pkg/util/provider/machinecodes/codes/codes.go" target="_blank" rel="noreferrer">machine error codes can be found here</a>. You may refer to them for any queries.</p><p>⚠️</p><ul><li>Keep in mind that <strong>there should be a unique way to map between machine objects and VMs</strong>. This can be done by mapping machine object names with VM-Name/ tags/ other metadata.</li><li>Optionally, there should also be a unique way to map a VM to its machine class object. This can be done by tagging VM objects with tags/resource groups associated with the machine class.</li></ul><h4 id="steps-to-integrate" tabindex="-1">Steps to integrate <a class="header-anchor" href="#steps-to-integrate" aria-label="Permalink to &quot;Steps to integrate&quot;">​</a></h4><ol><li>Update the <code>pkg/provider/apis/provider_spec.go</code> specification file to reflect the structure of the <code>ProviderSpec</code> blob. It typically contains the machine template details in the <code>MachineClass</code> object. Follow the sample spec provided already in the file. A sample provider specification can be found <a href="https://github.com/gardener/machine-controller-manager-provider-aws/blob/master/pkg/aws/apis/aws_provider_spec.go" target="_blank" rel="noreferrer">here</a>.</li><li>Fill in the methods described at <code>pkg/provider/core.go</code> to manage VMs on your cloud provider. Comments are provided above each method to help you fill them up with desired <code>REQUEST</code> and <code>RESPONSE</code> parameters. <ul><li>A sample provider implementation for these methods can be found <a href="https://github.com/gardener/machine-controller-manager-provider-aws/blob/master/pkg/aws/core.go" target="_blank" rel="noreferrer">here</a>.</li><li>Fill in the required methods <code>CreateMachine()</code>, and <code>DeleteMachine()</code> methods.</li><li>Optionally fill in methods like <code>GetMachineStatus()</code>, <code>InitializeMachine</code>, <code>ListMachines()</code>, and <code>GetVolumeIDs()</code>. You may choose to fill these once the working of the required methods seems to be working.</li><li><code>GetVolumeIDs()</code> expects VolumeIDs to be decoded from the volumeSpec based on the cloud provider.</li><li>There is also an OPTIONAL method <code>GenerateMachineClassForMigration()</code> that helps in migration of <code>{ProviderSpecific}MachineClass</code> to <code>MachineClass</code> CR (custom resource). This only makes sense if you have an existing implementation (in-tree) acting on different CRD types. You would like to migrate this. If not, you MUST return an error (machine error UNIMPLEMENTED) to avoid processing this step.</li></ul></li><li>Perform validation of APIs that you have described and make it a part of your methods as required at each request.</li><li>Write unit tests to make it work with your implementation by running <code>make test</code>.<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test</span></span></code></pre></div></li><li>Tidy the go dependencies.<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tidy</span></span></code></pre></div></li><li>Update the sample YAML files on the <code>kubernetes/</code> directory to provide sample files through which the working of the machine controller can be tested.</li><li>Update <code>README.md</code> to reflect any additional changes</li></ol><h2 id="testing-your-code-changes" tabindex="-1">Testing your code changes <a class="header-anchor" href="#testing-your-code-changes" aria-label="Permalink to &quot;Testing your code changes&quot;">​</a></h2><p>Make sure <code>$TARGET_KUBECONFIG</code> points to the cluster where you wish to manage machines. Likewise, <code>$CONTROL_NAMESPACE</code> represents the namespaces where MCM is looking for machine CR objects, and <code>$CONTROL_KUBECONFIG</code> points to the cluster that holds these machine CRs.</p><ol><li>On the first terminal running at <code>$GOPATH/src/github.com/{github-org/your-github-username}/machine-controller-manager-provider-{provider-name}</code>, <ul><li>Run the machine controller (driver) using the command below.<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span></span></code></pre></div></li></ul></li><li>On the second terminal pointing to <code>$GOPATH/src/github.com/gardener</code>, <ul><li>Clone the <a href="https://github.com/gardener/machine-controller-manager" target="_blank" rel="noreferrer">latest MCM code</a><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git@github.com:gardener/machine-controller-manager.git</span></span></code></pre></div></li><li>Navigate to the newly-created directory.<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> machine-controller-manager</span></span></code></pre></div></li><li>Deploy the required CRDs from the machine-controller-manager repo,<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apply</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kubernetes/crds</span></span></code></pre></div></li><li>Run the machine-controller-manager in the <code>master</code> branch<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span></span></code></pre></div></li></ul></li><li>On the third terminal pointing to <code>$GOPATH/src/github.com/{github-org/your-github-username}/machine-controller-manager-provider-{provider-name}</code><ul><li>Fill in the object files given below and deploy them as described below.</li><li>Deploy the <code>machine-class</code><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apply</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kubernetes/machine-class.yaml</span></span></code></pre></div></li><li>Deploy the <code>kubernetes secret</code> if required.<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apply</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kubernetes/secret.yaml</span></span></code></pre></div></li><li>Deploy the <code>machine</code> object and make sure it joins the cluster successfully.<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apply</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kubernetes/machine.yaml</span></span></code></pre></div></li><li>Once the machine joins, you can test by deploying a machine-deployment.</li><li>Deploy the <code>machine-deployment</code> object and make sure it joins the cluster successfully.<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apply</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kubernetes/machine-deployment.yaml</span></span></code></pre></div></li><li>Make sure to delete both the <code>machine</code> and <code>machine-deployment</code> objects after use.<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> delete</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kubernetes/machine.yaml</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> delete</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kubernetes/machine-deployment.yaml</span></span></code></pre></div></li></ul></li></ol><h2 id="releasing-your-docker-image" tabindex="-1">Releasing your docker image <a class="header-anchor" href="#releasing-your-docker-image" aria-label="Permalink to &quot;Releasing your docker image&quot;">​</a></h2><ol><li>Make sure you have logged into gcloud/docker using the CLI.</li><li>To release your docker image, run the following.</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> release</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> IMAGE_REPOSITORY=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">link-to-image-rep</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">o</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><ol start="3"><li>A sample kubernetes deploy file can be found at <code>kubernetes/deployment.yaml</code>. Update the same (with your desired MCM and MC images) to deploy your MCM pod.</li></ol>`,19)]))}const k=i(n,[["render",o]]);export{g as __pageData,k as default};
