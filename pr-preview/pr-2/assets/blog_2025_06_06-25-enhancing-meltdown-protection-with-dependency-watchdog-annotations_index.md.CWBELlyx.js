import{_ as n,c as t,o,a2 as a}from"./chunks/framework.Bfq10Vlj.js";const g=JSON.parse('{"title":"Enhancing Meltdown Protection with Dependency-Watchdog Annotations","description":"","frontmatter":{"aliases":["/blog/2025/06/25/enhancing-meltdown-protection-with-dependency-watchdog-annotations"],"authors":[{"avatar":"https://avatars.githubusercontent.com/ashwani2k","login":"ashwani2k","name":"Ashwani Kumar"}],"github_repo":"https://github.com/gardener/documentation","github_subdir":"website/blog/2025/06","linkTitle":"Enhancing Meltdown Protection with Dependency-Watchdog Annotations","newsSubtitle":"June 25, 2025","params":{"github_branch":"master"},"path_base_for_github_subdir":{"from":"content/blog/2025/06/06-25-enhancing-meltdown-protection-with-dependency-watchdog-annotations.md","to":"06-25-enhancing-meltdown-protection-with-dependency-watchdog-annotations.md"},"publishdate":"2025-06-25","title":"Enhancing Meltdown Protection with Dependency-Watchdog Annotations"},"headers":[],"relativePath":"blog/2025/06/06-25-enhancing-meltdown-protection-with-dependency-watchdog-annotations/index.md","filePath":"blog/2025/06/06-25-enhancing-meltdown-protection-with-dependency-watchdog-annotations.md","lastUpdated":null}'),i={name:"blog/2025/06/06-25-enhancing-meltdown-protection-with-dependency-watchdog-annotations/index.md"};function c(r,e,d,l,s,h){return o(),t("div",null,e[0]||(e[0]=[a('<h1 id="enhancing-meltdown-protection-with-dependency-watchdog-annotations" tabindex="-1">Enhancing Meltdown Protection with Dependency-Watchdog Annotations <a class="header-anchor" href="#enhancing-meltdown-protection-with-dependency-watchdog-annotations" aria-label="Permalink to &quot;Enhancing Meltdown Protection with Dependency-Watchdog Annotations&quot;">​</a></h1><p>Gardener&#39;s <code>dependency-watchdog</code> is a crucial component for ensuring cluster stability. During infrastructure-level outages where worker nodes cannot communicate with the control plane, it activates a &quot;meltdown protection&quot; mechanism. This involves scaling down key control plane components like the <code>machine-controller-manager</code> (MCM), <code>cluster-autoscaler</code> (CA), and <code>kube-controller-manager</code> (KCM) to prevent them from taking incorrect actions based on stale information, such as deleting healthy nodes that are only temporarily unreachable.</p><h3 id="the-challenge-premature-scale-up-during-reconciliation" tabindex="-1">The Challenge: Premature Scale-Up During Reconciliation <a class="header-anchor" href="#the-challenge-premature-scale-up-during-reconciliation" aria-label="Permalink to &quot;The Challenge: Premature Scale-Up During Reconciliation&quot;">​</a></h3><p>Previously, a potential race condition could undermine this protection. While <code>dependency-watchdog</code> scaled down the necessary components, a concurrent <code>Shoot</code> reconciliation, whether triggered manually by an operator or by other events, could misinterpret the situation. The reconciliation logic, unaware that the scale-down was a deliberate protective measure, would attempt to restore the &quot;desired&quot; state by scaling the <code>machine-controller-manager</code> and <code>cluster-autoscaler</code> back up.</p><p>This premature scale-up could have serious consequences. An active <code>machine-controller-manager</code>, for instance, might see nodes in an <code>Unknown</code> state due to the ongoing outage and incorrectly decide to delete them, defeating the entire purpose of the meltdown protection.</p><h3 id="the-solution-a-new-annotation-for-clearer-signaling" tabindex="-1">The Solution: A New Annotation for Clearer Signaling <a class="header-anchor" href="#the-solution-a-new-annotation-for-clearer-signaling" aria-label="Permalink to &quot;The Solution: A New Annotation for Clearer Signaling&quot;">​</a></h3><p>To address this, Gardener now uses a more explicit signaling mechanism between <code>dependency-watchdog</code> and <code>gardenlet</code>. When <code>dependency-watchdog</code> scales down a deployment as part of its meltdown protection, it now adds the following annotation to the resource:</p><p><code>dependency-watchdog.gardener.cloud/meltdown-protection-active</code></p><p>This annotation serves as a clear, persistent signal that the component has been intentionally scaled down for safety.</p><h3 id="how-it-works" tabindex="-1">How It Works <a class="header-anchor" href="#how-it-works" aria-label="Permalink to &quot;How It Works&quot;">​</a></h3><p>The <code>gardenlet</code> component has been updated to recognize and respect this new annotation. During a <code>Shoot</code> reconciliation, before scaling any deployment, <code>gardenlet</code> now checks for the presence of the <code>dependency-watchdog.gardener.cloud/meltdown-protection-active</code> annotation.</p><p>If the annotation is found, <code>gardenlet</code> will not scale up the deployment. Instead, it preserves the current replica count set by <code>dependency-watchdog</code>, ensuring that the meltdown protection remains effective until the underlying infrastructure issue is resolved and <code>dependency-watchdog</code> itself restores the components. This change makes the meltdown protection mechanism more robust and prevents unintended node deletions during any degradation of connectivity between the nodes and control plane.</p><p>Additionally on a deployment which has <code>dependency-watchdog.gardener.cloud/meltdown-protection-active</code> annotation set, if the operator decides to ignores such a deployment from meltdown consideration by annotating it with <code>dependency-watchdog.gardener.cloud/ignore-scaling</code>, then for such deployments <code>dependency-watchdog</code> shall remove the <code>dependency-watchdog.gardener.cloud/meltdown-protection-active</code> annotation and the deployment shall be considered for scale-up as part of next shoot reconciliation. The operator can also explicitly scale up such a deployment and not wait for the next shoot reconciliation.</p><h3 id="for-more-information" tabindex="-1">For More Information <a class="header-anchor" href="#for-more-information" aria-label="Permalink to &quot;For More Information&quot;">​</a></h3><p>To dive deeper into the implementation details, you can review the changes in the corresponding pull request.</p><ul><li><strong><a href="https://github.com/gardener/gardener/pull/12272" target="_blank" rel="noreferrer">GitHub PR #12272</a></strong></li><li><strong><a href="https://youtu.be/kcXSyloteSs?t=501" target="_blank" rel="noreferrer">Watch the demo</a></strong></li></ul>',16)]))}const u=n(i,[["render",c]]);export{g as __pageData,u as default};
