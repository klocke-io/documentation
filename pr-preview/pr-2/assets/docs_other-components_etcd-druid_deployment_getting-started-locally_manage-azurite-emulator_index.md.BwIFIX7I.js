import{_ as t,c as a,o as s,a2 as i}from"./chunks/framework.B8WFj13S.js";const u=JSON.parse('{"title":"Manage Azurite Emulator","description":"","frontmatter":{"github_repo":"https://github.com/gardener/etcd-druid","github_subdir":"docs/deployment/getting-started-locally","params":{"github_branch":"master"},"path_base_for_github_subdir":{"from":"content/docs/other-components/etcd-druid/deployment/getting-started-locally/manage-azurite-emulator.md","to":"manage-azurite-emulator.md"},"title":"Manage Azurite Emulator","prev":false,"next":false},"headers":[],"relativePath":"docs/other-components/etcd-druid/deployment/getting-started-locally/manage-azurite-emulator/index.md","filePath":"docs/other-components/etcd-druid/deployment/getting-started-locally/manage-azurite-emulator.md","lastUpdated":null}'),n={name:"docs/other-components/etcd-druid/deployment/getting-started-locally/manage-azurite-emulator/index.md"};function r(o,e,l,h,p,d){return s(),a("div",null,e[0]||(e[0]=[i(`<h1 id="manage-azure-blob-storage-emulator" tabindex="-1">Manage Azure Blob Storage Emulator <a class="header-anchor" href="#manage-azure-blob-storage-emulator" aria-label="Permalink to &quot;Manage Azure Blob Storage Emulator&quot;">​</a></h1><p>This document is a step-by-step guide on how to configure, deploy and cleanup <a href="https://github.com/Azure/Azurite#introduction" target="_blank" rel="noreferrer">Azurite</a>, the <code>Azure Blob Storage</code> emulator, within a <a href="https://kind.sigs.k8s.io/" target="_blank" rel="noreferrer">kind</a> cluster. This setup is ideal for local development and testing.</p><h2 id="_00-prerequisites" tabindex="-1">00-Prerequisites <a class="header-anchor" href="#_00-prerequisites" aria-label="Permalink to &quot;00-Prerequisites&quot;">​</a></h2><p>Ensure that you have setup the development environment as per the <a href="/documentation/pr-preview/pr-2/docs/other-components/etcd-druid/prepare-dev-environment/">documentation</a>.</p><blockquote><p><strong>Note:</strong> It is assumed that you have already created kind cluster and the <code>KUBECONFIG</code> is pointing to this Kubernetes cluster.</p></blockquote><h3 id="installing-azure-cli" tabindex="-1">Installing Azure CLI <a class="header-anchor" href="#installing-azure-cli" aria-label="Permalink to &quot;Installing Azure CLI&quot;">​</a></h3><p>To interact with <code>Azurite</code> you must also install the Azure CLI <code>(version &gt;=2.55.0)</code> On macOS run:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> azure-cli</span></span></code></pre></div><p>For other OS, please check the <a href="https://learn.microsoft.com/en-us/cli/azure/install-azure-cli" target="_blank" rel="noreferrer">Azure CLI installation documentation</a>.</p><h2 id="_01-deploy-azurite" tabindex="-1">01-Deploy Azurite <a class="header-anchor" href="#_01-deploy-azurite" aria-label="Permalink to &quot;01-Deploy Azurite&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> deploy-azurite</span></span></code></pre></div><p>The above make target will deploy <code>Azure</code> emulator in the target Kubernetes cluster.</p><h2 id="_02-setup-abs-container" tabindex="-1">02-Setup ABS Container <a class="header-anchor" href="#_02-setup-abs-container" aria-label="Permalink to &quot;02-Setup ABS Container&quot;">​</a></h2><p>We will be using the <code>azure-cli</code> to create an ABS container. Export the connection string to enable <code>azure-cli</code> to connect to <code>Azurite</code> emulator.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AZURE_STORAGE_CONNECTION_STRING</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://127.0.0.1:10000/devstoreaccount1;&quot;</span></span></code></pre></div><p>To create an Azure Blob Storage Container in Azurite, run the following command:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">az</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> storage</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> container</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">container-nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><h2 id="_03-configure-secret" tabindex="-1">03-Configure Secret <a class="header-anchor" href="#_03-configure-secret" aria-label="Permalink to &quot;03-Configure Secret&quot;">​</a></h2><p>Connection details for an Azure Object Store Container are put into a Kubernetes <a href="https://kubernetes.io/docs/concepts/configuration/secret/" target="_blank" rel="noreferrer">Secret</a>. Apply the Kubernetes Secret manifest through:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apply</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> examples/objstore-emulator/etcd-secret-azurite.yaml</span></span></code></pre></div><blockquote><p><strong>Note:</strong> The secret created should be referred to in the <code>Etcd</code> CR in <code>spec.backup.store.secretRef</code>.</p></blockquote><h2 id="_04-cleanup" tabindex="-1">04-Cleanup <a class="header-anchor" href="#_04-cleanup" aria-label="Permalink to &quot;04-Cleanup&quot;">​</a></h2><p>To clean the setup, unset the environment variable set in step-03 above and delete the Azurite deployment:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">unset</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> AZURE_STORAGE_CONNECTION_STRING</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> delete</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./hack/e2e-test/infrastructure/azurite/azurite.yaml</span></span></code></pre></div>`,24)]))}const k=t(n,[["render",r]]);export{u as __pageData,k as default};
