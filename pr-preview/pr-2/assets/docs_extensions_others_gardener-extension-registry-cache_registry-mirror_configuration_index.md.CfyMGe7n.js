import{_ as s,c as e,o as r,a2 as a}from"./chunks/framework.B8WFj13S.js";const g=JSON.parse('{"title":"Configuring the Registry Mirror Extension","description":"Learn what is the use-case for a registry mirror, how to enable and configure it","frontmatter":{"description":"Learn what is the use-case for a registry mirror, how to enable and configure it","github_repo":"https://github.com/gardener/gardener-extension-registry-cache","github_subdir":"docs/usage/registry-mirror","params":{"github_branch":"main"},"path_base_for_github_subdir":{"from":"content/docs/extensions/others/gardener-extension-registry-cache/registry-mirror/configuration.md","to":"configuration.md"},"persona":"Users","title":"Configuring the Registry Mirror Extension","prev":false,"next":false},"headers":[],"relativePath":"docs/extensions/others/gardener-extension-registry-cache/registry-mirror/configuration/index.md","filePath":"docs/extensions/others/gardener-extension-registry-cache/registry-mirror/configuration.md","lastUpdated":null}'),t={name:"docs/extensions/others/gardener-extension-registry-cache/registry-mirror/configuration/index.md"};function n(o,i,h,l,p,d){return r(),e("div",null,i[0]||(i[0]=[a(`<h1 id="configuring-the-registry-mirror-extension" tabindex="-1">Configuring the Registry Mirror Extension <a class="header-anchor" href="#configuring-the-registry-mirror-extension" aria-label="Permalink to &quot;Configuring the Registry Mirror Extension&quot;">​</a></h1><h2 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-label="Permalink to &quot;Introduction&quot;">​</a></h2><h3 id="use-case" tabindex="-1">Use Case <a class="header-anchor" href="#use-case" aria-label="Permalink to &quot;Use Case&quot;">​</a></h3><p>containerd allows registry mirrors to be configured. Use cases are:</p><ul><li>Usage of public mirror(s) - for example, circumvent issues with the upstream registry such as rate limiting, outages, and others.</li><li>Usage of private mirror(s) - for example, reduce network costs by using a private mirror running in the same network.</li></ul><h3 id="solution" tabindex="-1">Solution <a class="header-anchor" href="#solution" aria-label="Permalink to &quot;Solution&quot;">​</a></h3><p>The registry-mirror extension allows the registry mirror configuration to be configured via the Shoot spec directly.</p><h3 id="how-does-it-work" tabindex="-1">How does it work? <a class="header-anchor" href="#how-does-it-work" aria-label="Permalink to &quot;How does it work?&quot;">​</a></h3><p>When the extension is enabled, the containerd daemon on the Shoot cluster Nodes gets configured to use the requested mirrors as a mirror. For example, if for the upstream <code>docker.io</code> the mirror <code>https://mirror.gcr.io</code> is configured in the Shoot spec, then containerd gets configured to first pull the image from the mirror (<code>https://mirror.gcr.io</code> in that case). If this image pull operation fails, containerd falls back to the upstream itself (<code>docker.io</code> in that case).</p><p>The extension is based on the contract described in <a href="documentation/pr-preview/pr-2/docs/gardener/advanced/containerd-registry-configuration/"><code>containerd</code> Registry Configuration</a>. The corresponding upstream documentation in containerd is <a href="https://github.com/containerd/containerd/blob/v1.7.0/docs/hosts.md" target="_blank" rel="noreferrer">Registry Configuration - Introduction</a>.</p><h2 id="shoot-configuration" tabindex="-1">Shoot Configuration <a class="header-anchor" href="#shoot-configuration" aria-label="Permalink to &quot;Shoot Configuration&quot;">​</a></h2><p>The Shoot specification has to be adapted to include the <code>registry-mirror</code> extension configuration.</p><p>Below is an example of <code>registry-mirror</code> extension configuration as part of the Shoot spec:</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">apiVersion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">core.gardener.cloud/v1beta1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">kind</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Shoot</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">metadata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">crazy-botany</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  namespace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">garden-dev</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">spec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  extensions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">registry-mirror</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    providerConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      apiVersion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">mirror.extensions.gardener.cloud/v1alpha1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      kind</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">MirrorConfig</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      mirrors</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">upstream</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">docker.io</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        hosts</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">host</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://mirror.gcr.io&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          capabilities</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;pull&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><p>The <code>providerConfig</code> field is required.</p><p>The <code>providerConfig.mirrors</code> field contains information about the registry mirrors to configure. It is a required field. At least one mirror has to be specified.</p><p>The <code>providerConfig.mirror[].upstream</code> field is the remote registry host to mirror. It is a required field. The value must be a valid DNS subdomain (RFC 1123) and optionally a port (i.e. <code>&lt;host&gt;[:&lt;port&gt;]</code>). It must not include a scheme.</p><p>The <code>providerConfig.mirror[].hosts</code> field represents the mirror hosts to be used for the upstream. At least one mirror host has to be specified.</p><p>The <code>providerConfig.mirror[].hosts[].host</code> field is the mirror host. It is a required field. The value must include a scheme - <code>http://</code> or <code>https://</code>.</p><p>The <code>providerConfig.mirror[].hosts[].capabilities</code> field represents the operations a host is capable of performing. This also represents the set of operations for which the mirror host may be trusted to perform. Defaults to <code>[&quot;pull&quot;]</code>. The supported values are <code>pull</code> and <code>resolve</code>. See the <a href="https://github.com/containerd/containerd/blob/v1.7.0/docs/hosts.md#capabilities-field" target="_blank" rel="noreferrer">capabilities field documentation</a> for more information on which operations are considered trusted ones against public/private mirrors.</p>`,20)]))}const k=s(t,[["render",n]]);export{g as __pageData,k as default};
