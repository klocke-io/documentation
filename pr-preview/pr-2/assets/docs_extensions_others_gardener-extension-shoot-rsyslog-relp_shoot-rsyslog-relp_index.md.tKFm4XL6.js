import{_ as o,c as t,o as r,a2 as s}from"./chunks/framework.Bfq10Vlj.js";const p=JSON.parse('{"title":"Shoot Rsyslog Relp","description":"","frontmatter":{"github_repo":"https://github.com/gardener/gardener-extension-shoot-rsyslog-relp","github_subdir":"docs/development","params":{"github_branch":"main"},"path_base_for_github_subdir":{"from":"content/docs/extensions/others/gardener-extension-shoot-rsyslog-relp/shoot-rsyslog-relp.md","to":"shoot-rsyslog-relp.md"},"persona":"Developers","title":"Shoot Rsyslog Relp","prev":false,"next":false},"headers":[],"relativePath":"docs/extensions/others/gardener-extension-shoot-rsyslog-relp/shoot-rsyslog-relp/index.md","filePath":"docs/extensions/others/gardener-extension-shoot-rsyslog-relp/shoot-rsyslog-relp.md","lastUpdated":null}'),n={name:"docs/extensions/others/gardener-extension-shoot-rsyslog-relp/shoot-rsyslog-relp/index.md"};function i(a,e,l,h,c,d){return r(),t("div",null,e[0]||(e[0]=[s('<h1 id="developer-docs-for-gardener-shoot-rsyslog-relp-extension" tabindex="-1">Developer Docs for Gardener Shoot Rsyslog Relp Extension <a class="header-anchor" href="#developer-docs-for-gardener-shoot-rsyslog-relp-extension" aria-label="Permalink to &quot;Developer Docs for Gardener Shoot Rsyslog Relp Extension&quot;">​</a></h1><p>This document outlines how Shoot reconciliation and deletion works for a Shoot with the shoot-rsyslog-relp extension enabled.</p><h2 id="shoot-reconciliation" tabindex="-1">Shoot Reconciliation <a class="header-anchor" href="#shoot-reconciliation" aria-label="Permalink to &quot;Shoot Reconciliation&quot;">​</a></h2><p>This section outlines how the reconciliation works for a Shoot with the shoot-rsyslog-relp extension enabled.</p><h3 id="extension-enablement-reconciliation" tabindex="-1">Extension Enablement / Reconciliation <a class="header-anchor" href="#extension-enablement-reconciliation" aria-label="Permalink to &quot;Extension Enablement / Reconciliation&quot;">​</a></h3><p>This section outlines how the extension enablement/reconciliation works, e.g., the extension has been added to the Shoot spec.</p><ol><li>As part of the Shoot reconciliation flow, the gardenlet deploys the <a href="https://github.com/gardener/gardener/blob/v1.82.0/docs/extensions/extension.md" target="_blank" rel="noreferrer">Extension</a> resource.</li><li>The shoot-rsyslog-relp extension reconciles the Extension resource. <a href="https://github.com/gardener/gardener-extension-shoot-rsyslog-relp/blob/main/pkg/controller/lifecycle/actuator.go" target="_blank" rel="noreferrer">pkg/controller/lifecycle/actuator.go</a> contains the implementation of the <a href="https://github.com/gardener/gardener/blob/v1.82.0/extensions/pkg/controller/extension/actuator.go" target="_blank" rel="noreferrer">extension.Actuator</a> interface. The reconciliation of an Extension of type <code>shoot-rsyslog-relp</code> only deploys the necessary monitoring configuration - the <code>shoot-rsyslog-relp-dashboards</code> ConfigMap which contains the definitions for: Plutono dashboard for the Rsyslog component, and the <code>shoot-shoot-rsyslog-relp</code> <code>ServiceMonitor</code> and <code>PrometheusRule</code> resources which contains the definitions for: scraping metrics by prometheus, alerting rules.</li><li>As part of the Shoot reconciliation flow, the gardenlet deploys the OperatingSystemConfig resource.</li><li>The shoot-rsyslog-relp extension serves a webhook that mutates the OperatingSystemConfig resource for Shoots having the shoot-rsyslog-relp extension enabled (the corresponding namespace gets labeled by the gardenlet with <code>extensions.gardener.cloud/shoot-rsyslog-relp=true</code>). <a href="https://github.com/gardener/gardener-extension-shoot-rsyslog-relp/blob/main/pkg/webhook/operatingsystemconfig/ensurer.go" target="_blank" rel="noreferrer">pkg/webhook/operatingsystemconfig/ensurer.go</a> contains implementation of the <a href="https://github.com/gardener/gardener/blob/v1.82.0/extensions/pkg/webhook/controlplane/genericmutator/mutator.go" target="_blank" rel="noreferrer">genericmutator.Ensurer</a> interface. <ol><li>The webhook renders the <a href="https://github.com/gardener/gardener-extension-shoot-rsyslog-relp/blob/main/pkg/webhook/operatingsystemconfig/resources/templates/scripts/configure-rsyslog.tpl.sh" target="_blank" rel="noreferrer">60-audit.conf.tpl</a> template script and appends it to the OperatingSystemConfig files. When rendering the template, the configuration of the shoot-rsyslog-relp extension is used to fill in the required template values. The file is installed as <code>/var/lib/rsyslog-relp-configurator/rsyslog.d/60-audit.conf</code> on the host OS.</li><li>The webhook appends the <a href="https://github.com/gardener/gardener-extension-shoot-rsyslog-relp/tree/main/pkg/webhook/operatingsystemconfig/resources/auditrules" target="_blank" rel="noreferrer">audit rules</a> to the OperatingSystemConfig. The files are installed under <code>/var/lib/rsyslog-relp-configurator/rules.d</code> on the host OS.</li><li>If the user has specified alternative audit rules in a config map reference, the webhook fetches the referenced <code>ConfigMap</code> from the Shoot&#39;s control plane namespace and decodes the value of its <code>auditd</code> data key into an object of type <a href="https://github.com/gardener/gardener-extension-shoot-rsyslog-relp/blob/main/pkg/apis/rsyslog/types_auditd.go" target="_blank" rel="noreferrer"><code>Auditd</code></a>. It then takes the <code>auditRules</code> defined in the object and places those under the <code>/var/lib/rsyslog-relp-configurator/rules.d</code> directory in a single file.</li><li>The webhook renders the <a href="https://github.com/gardener/gardener-extension-shoot-rsyslog-relp/blob/main/pkg/webhook/operatingsystemconfig/resources/templates/scripts/configure-rsyslog.tpl.sh" target="_blank" rel="noreferrer">configure-rsyslog.tpl.sh</a> script and appends it to the OperatingSystemConfig files. This script is installed as <code>/var/lib/rsyslog-relp-configurator/configure-rsyslog.sh</code> on the host OS. It keeps the configuration of the <code>rsyslog</code> systemd service up-to-date by copying <code>/var/lib/rsyslog-relp-configurator/rsyslog.d/60-audit.conf</code> to <code>/etc/rsyslog.d/60-audit.conf</code>, if <code>/etc/rsyslog.d/60-audit.conf</code> does not exist or the files differ. The script also takes care of syncing the audit rules in <code>/etc/audit/rules.d</code> with the ones installed in <code>/var/lib/rsyslog-relp-configurator/rules.d</code> and restarts the auditd systemd service if necessary.</li><li>The webhook renders the <a href="https://github.com/gardener/gardener-extension-shoot-rsyslog-relp/blob/main/pkg/webhook/operatingsystemconfig/resources/templates/scripts/process-rsyslog-pstats.tpl.sh" target="_blank" rel="noreferrer">process-rsyslog-pstats.tpl.sh</a> and appends it to the OperatingSystemConfig files. This script receives metrics from the <code>rsyslog</code> process, transforms them, and writes them to <code>/var/lib/node-exporter/textfile-collector/rsyslog_pstats.prom</code> so that they can be collected by the <code>node-exporter</code>.</li><li>As part of the Shoot reconciliation, before the shoot-rsyslog-relp extension is deployed, the gardenlet copies all Secret and ConfigMap resources referenced in <code>.spec.resources[]</code> to the Shoot&#39;s control plane namespace on the Seed. When the <code>.tls.enabled</code> field is <code>true</code> in the shoot-rsyslog-relp extension configuration, a value for <code>.tls.secretReferenceName</code> must also be specified so that it references a <a href="https://github.com/gardener/gardener/blob/v1.82.0/pkg/apis/core/v1beta1/types_shoot.go#L487" target="_blank" rel="noreferrer">named resource reference</a> in the Shoot&#39;s <code>.spec.resources[]</code> array. The webhook appends the data of the referenced Secret in the Shoot&#39;s control plane namespace to the OperatingSystemConfig files.</li><li>The webhook appends the <code>rsyslog-configurator.service</code> unit to the OperatingSystemConfig units. The unit invokes the <code>configure-rsyslog.sh</code> script every 15 seconds.</li></ol></li></ol><h3 id="extension-disablement" tabindex="-1">Extension Disablement <a class="header-anchor" href="#extension-disablement" aria-label="Permalink to &quot;Extension Disablement&quot;">​</a></h3><p>This section outlines how the extension disablement works, i.e., the extension has to be removed from the Shoot spec.</p><ol><li>As part of the Shoot reconciliation flow, the gardenlet destroys the <a href="https://github.com/gardener/gardener/blob/v1.82.0/docs/extensions/extension.md" target="_blank" rel="noreferrer">Extension</a> resource because it is no longer needed. <ol><li>As part of the deletion flow, the shoot-rsyslog-relp extension deploys the <a href="https://github.com/gardener/gardener-extension-shoot-rsyslog-relp/blob/main/pkg/component/rsyslogrelpconfigcleaner/rsyslog_relp_config_cleaner.go" target="_blank" rel="noreferrer"><code>rsyslog-relp-configuration-cleaner</code> DaemonSet</a> to the Shoot cluster to clean up the existing rsyslog configuration and revert the audit rules.</li></ol></li></ol><h2 id="shoot-deletion" tabindex="-1">Shoot Deletion <a class="header-anchor" href="#shoot-deletion" aria-label="Permalink to &quot;Shoot Deletion&quot;">​</a></h2><p>This section outlines how the deletion works for a Shoot with the shoot-rsyslog-relp extension enabled.</p><ol><li>As part of the Shoot deletion flow, the gardenlet destroys the <a href="https://github.com/gardener/gardener/blob/v1.82.0/docs/extensions/extension.md" target="_blank" rel="noreferrer">Extension</a> resource. <ol><li>In the Shoot deletion flow, the Extension resource is deleted after the Worker resource. Hence, there is no need to deploy the <a href="https://github.com/gardener/gardener-extension-shoot-rsyslog-relp/blob/main/pkg/component/rsyslogrelpconfigcleaner/rsyslog_relp_config_cleaner.go" target="_blank" rel="noreferrer"><code>rsyslog-relp-configuration-cleaner</code> DaemonSet</a> to the Shoot cluster to clean up the existing rsyslog configuration and revert the audit rules.</li></ol></li></ol>',13)]))}const f=o(n,[["render",i]]);export{p as __pageData,f as default};
