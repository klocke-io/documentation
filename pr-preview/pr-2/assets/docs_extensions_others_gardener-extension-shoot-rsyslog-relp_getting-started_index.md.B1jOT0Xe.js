import{_ as s,c as a,o as t,a2 as i}from"./chunks/framework.Bfq10Vlj.js";const g=JSON.parse('{"title":"Getting Started","description":"","frontmatter":{"github_repo":"https://github.com/gardener/gardener-extension-shoot-rsyslog-relp","github_subdir":"docs/development","params":{"github_branch":"main"},"path_base_for_github_subdir":{"from":"content/docs/extensions/others/gardener-extension-shoot-rsyslog-relp/getting-started.md","to":"getting-started.md"},"persona":"Developers","title":"Getting Started","prev":false,"next":false},"headers":[],"relativePath":"docs/extensions/others/gardener-extension-shoot-rsyslog-relp/getting-started/index.md","filePath":"docs/extensions/others/gardener-extension-shoot-rsyslog-relp/getting-started.md","lastUpdated":null}'),n={name:"docs/extensions/others/gardener-extension-shoot-rsyslog-relp/getting-started/index.md"};function o(l,e,r,h,p,d){return t(),a("div",null,e[0]||(e[0]=[i(`<h1 id="deploying-rsyslog-relp-extension-locally" tabindex="-1">Deploying Rsyslog Relp Extension Locally <a class="header-anchor" href="#deploying-rsyslog-relp-extension-locally" aria-label="Permalink to &quot;Deploying Rsyslog Relp Extension Locally&quot;">​</a></h1><p>This document will walk you through running the Rsyslog Relp extension and a fake rsyslog relp service on your local machine for development purposes. This guide uses Gardener&#39;s local development setup and builds on top of it.</p><p>If you encounter difficulties, please open an issue so that we can make this process easier.</p><h2 id="prerequisites" tabindex="-1">Prerequisites <a class="header-anchor" href="#prerequisites" aria-label="Permalink to &quot;Prerequisites&quot;">​</a></h2><ul><li>Make sure that you have a running local Gardener setup. The steps to complete this can be found <a href="/docs/gardener/deployment/getting_started_locally/">here</a>.</li><li>Make sure you are running Gardener version <code>&gt;= 1.74.0</code> or the latest version of the master branch.</li></ul><h2 id="setting-up-the-rsyslog-relp-extension" tabindex="-1">Setting up the Rsyslog Relp Extension <a class="header-anchor" href="#setting-up-the-rsyslog-relp-extension" aria-label="Permalink to &quot;Setting up the Rsyslog Relp Extension&quot;">​</a></h2><p><strong>Important:</strong> Make sure that your <code>KUBECONFIG</code> env variable is targeting the local Gardener cluster!</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> extension-up</span></span></code></pre></div><p>This will build the <code>shoot-rsyslog-relp</code>, <code>shoot-rsyslog-relp-admission</code>, and <code>shoot-rsyslog-relp-echo-server</code> images and deploy the needed resources and configurations in the garden cluster. The <code>shoot-rsyslog-relp-echo-server</code> will act as development replacement of a real rsyslog relp server.</p><h2 id="creating-a-shoot-cluster" tabindex="-1">Creating a Shoot Cluster <a class="header-anchor" href="#creating-a-shoot-cluster" aria-label="Permalink to &quot;Creating a Shoot Cluster&quot;">​</a></h2><p>Once the above step is completed, we can deploy and configure a Shoot cluster with default rsyslog relp settings.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apply</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./example/shoot.yaml</span></span></code></pre></div><p>Once the Shoot&#39;s namespace is created, we can create a <code>networkpolicy</code> that will allow egress traffic from the <code>rsyslog</code> on the Shoot&#39;s nodes to the <code>rsyslog-relp-echo-server</code> that serves as a fake rsyslog target server.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apply</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./example/local/allow-machine-to-rsyslog-relp-echo-server-netpol.yaml</span></span></code></pre></div><p>Currently, the Shoot&#39;s nodes run Ubuntu, which does not have the <code>rsyslog-relp</code> and <code>auditd</code> packages installed, so the configuration done by the extension has no effect. Once the Shoot is created, we have to manually install the <code>rsyslog-relp</code> and <code>auditd</code> packages:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> shoot--local--local</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> exec</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -it</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> shoot--local--local</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> po</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -l</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> app=machine,machine-provider=local</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">--</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bash</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   apt-get update &amp;&amp; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   apt-get install -y rsyslog-relp auditd &amp;&amp; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   systemctl enable rsyslog.service &amp;&amp; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   systemctl start rsyslog.service&quot;</span></span></code></pre></div><p>Once that is done we can verify that log messages are forwarded to the <code>rsyslog-relp-echo-server</code> by checking its logs.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rsyslog-relp-echo-server</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> logs</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> deployment/rsyslog-relp-echo-server</span></span></code></pre></div><h2 id="making-changes-to-the-rsyslog-relp-extension" tabindex="-1">Making Changes to the Rsyslog Relp Extension <a class="header-anchor" href="#making-changes-to-the-rsyslog-relp-extension" aria-label="Permalink to &quot;Making Changes to the Rsyslog Relp Extension&quot;">​</a></h2><p>Changes to the rsyslog relp extension can be applied to the local environment by repeatedly running the <code>make</code> recipe.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> extension-up</span></span></code></pre></div><h2 id="tearing-down-the-development-environment" tabindex="-1">Tearing Down the Development Environment <a class="header-anchor" href="#tearing-down-the-development-environment" aria-label="Permalink to &quot;Tearing Down the Development Environment&quot;">​</a></h2><p>To tear down the development environment, delete the Shoot cluster or disable the <code>shoot-rsyslog-relp</code> extension in the Shoot&#39;s spec. When the extension is not used by the Shoot anymore, you can run:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> extension-down</span></span></code></pre></div><p>This will delete the <code>ControllerRegistration</code> and <code>ControllerDeployment</code> of the extension, the <code>shoot-rsyslog-relp-admission</code> deployment, and the <code>rsyslog-relp-echo-server</code> deployment.</p><h1 id="maintaining-the-publicly-available-image-for-the-rsyslog-relp-echo-server" tabindex="-1">Maintaining the Publicly Available Image for the rsyslog-relp Echo Server <a class="header-anchor" href="#maintaining-the-publicly-available-image-for-the-rsyslog-relp-echo-server" aria-label="Permalink to &quot;Maintaining the Publicly Available Image for the rsyslog-relp Echo Server&quot;">​</a></h1><p>The <a href="https://github.com/gardener/gardener-extension-shoot-rsyslog-relp/tree/main/test/testmachinery/shoot" target="_blank" rel="noreferrer">testmachinery tests</a> use an <code>rsyslog-relp-echo-server</code> image from a publicly available repository. The one which is currently used is <code>eu.gcr.io/gardener-project/gardener/extensions/shoot-rsyslog-relp-echo-server:v0.1.0</code>.</p><p>Sometimes it might be necessary to update the image and publish it, e.g. when updating the <code>alpine</code> base image version specified in the repository&#39;s <a href="https://github.com/gardener/gardener-extension-shoot-rsyslog-relp/blob/main/Dockerfile#L34" target="_blank" rel="noreferrer">Dokerfile</a>.</p><p>To do that:</p><ol><li><p>Bump the version with which the image is built in the <a href="https://github.com/gardener/gardener-extension-shoot-rsyslog-relp/blob/main/Makefile#L17" target="_blank" rel="noreferrer">Makefile</a>.</p></li><li><p>Build the <code>shoot-rsyslog-relp-echo-server</code> image:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> echo-server-docker-image</span></span></code></pre></div></li><li><p>Once the image is built, push it to <code>gcr</code> with:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push-echo-server-image</span></span></code></pre></div></li><li><p>Finally, bump the version of the image used by the <code>testmachinery</code> tests <a href="https://github.com/gardener/gardener-extension-shoot-rsyslog-relp/blob/main/test/testmachinery/shoot/common_test.go" target="_blank" rel="noreferrer">here</a>.</p></li><li><p>Create a PR with the changes.</p></li></ol>`,30)]))}const k=s(n,[["render",o]]);export{g as __pageData,k as default};
