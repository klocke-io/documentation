import{_ as a,c as t,o as s,a2 as r}from"./chunks/framework.Bfq10Vlj.js";const u=JSON.parse('{"title":"BackupBucket","description":"","frontmatter":{"github_repo":"https://github.com/gardener/gardener","github_subdir":"docs/extensions/resources","params":{"github_branch":"master"},"path_base_for_github_subdir":{"from":"content/docs/gardener/extensions/resources/backupbucket.md","to":"backupbucket.md"},"title":"BackupBucket","prev":false,"next":false},"headers":[],"relativePath":"docs/gardener/extensions/resources/backupbucket/index.md","filePath":"docs/gardener/extensions/resources/backupbucket.md","lastUpdated":null}'),i={name:"docs/gardener/extensions/resources/backupbucket/index.md"};function n(o,e,c,d,p,l){return s(),t("div",null,e[0]||(e[0]=[r(`<h1 id="contract-backupbucket-resource" tabindex="-1">Contract: <code>BackupBucket</code> Resource <a class="header-anchor" href="#contract-backupbucket-resource" aria-label="Permalink to &quot;Contract: \`BackupBucket\` Resource&quot;">​</a></h1><p>The Gardener project features a sub-project called <a href="https://github.com/gardener/etcd-backup-restore" target="_blank" rel="noreferrer">etcd-backup-restore</a> to take periodic backups of etcd backing Shoot clusters. It demands the bucket (or its equivalent in different object store providers) to be created and configured externally with appropriate credentials. The <code>BackupBucket</code> resource takes this responsibility in Gardener.</p><p>Before introducing the <code>BackupBucket</code> extension resource, Gardener was using Terraform in order to create and manage these provider-specific resources (e.g., see <a href="https://github.com/gardener/gardener/tree/0.27.0/charts/seed-terraformer/charts/aws-backup" target="_blank" rel="noreferrer">AWS Backup</a>). Now, Gardener commissions an external, provider-specific controller to take over this task. You can also refer to <a href="https://github.com/gardener/gardener/blob/master/docs/proposals/02-backupinfra.md" target="_blank" rel="noreferrer">backupInfra proposal documentation</a> to get an idea about how the transition was done and understand the resource in a broader scope.</p><h2 id="what-is-the-scope-of-a-bucket" tabindex="-1">What Is the Scope of a Bucket? <a class="header-anchor" href="#what-is-the-scope-of-a-bucket" aria-label="Permalink to &quot;What Is the Scope of a Bucket?&quot;">​</a></h2><p>A bucket will be provisioned per <code>Seed</code>. So, a backup of every <code>Shoot</code> created on that <code>Seed</code> will be stored under a different shoot specific prefix under the bucket. For the backup of the <code>Shoot</code> rescheduled on different <code>Seed</code>, it will continue to use the same bucket.</p><h2 id="what-is-the-lifespan-of-a-backupbucket" tabindex="-1">What Is the Lifespan of a <code>BackupBucket</code>? <a class="header-anchor" href="#what-is-the-lifespan-of-a-backupbucket" aria-label="Permalink to &quot;What Is the Lifespan of a \`BackupBucket\`?&quot;">​</a></h2><p>The bucket associated with <code>BackupBucket</code> will be created at the creation of the <code>Seed</code>. And as per current implementation, it will also be deleted on deletion of the <code>Seed</code>, if there isn&#39;t any <code>BackupEntry</code> resource associated with it.</p><p>In the future, we plan to introduce a schedule for <code>BackupBucket</code> - the deletion logic for the <code>BackupBucket</code> resource, which will reschedule it on different available <code>Seed</code>s on deletion or failure of a health check for the currently associated <code>seed</code>. In that case, the <code>BackupBucket</code> will be deleted only if there isn&#39;t any schedulable <code>Seed</code> available and there isn&#39;t any associated <code>BackupEntry</code> resource.</p><h2 id="what-needs-to-be-implemented-to-support-a-new-infrastructure-provider" tabindex="-1">What Needs to Be Implemented to Support a New Infrastructure Provider? <a class="header-anchor" href="#what-needs-to-be-implemented-to-support-a-new-infrastructure-provider" aria-label="Permalink to &quot;What Needs to Be Implemented to Support a New Infrastructure Provider?&quot;">​</a></h2><p>As part of the seed flow, Gardener will create a special CRD in the seed cluster that needs to be reconciled by an extension controller, for example:</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">---</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">apiVersion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">extensions.gardener.cloud/v1alpha1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">kind</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">BackupBucket</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">metadata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">foo</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">spec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">azure</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  providerConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &lt;some-optional-provider-specific-backupbucket-configuration&gt;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  region</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">eu-west-1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  secretRef</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">backupprovider</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    namespace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">shoot--foo--bar</span></span></code></pre></div><p>The <code>.spec.secretRef</code> contains a reference to the provider secret pointing to the account that shall be used to create the needed resources. This provider secret will be configured by the Gardener operator in the <code>Seed</code> resource and propagated over there by the seed controller.</p><p>After your controller has created the required bucket, if required, it generates the secret to access the objects in the bucket and put a reference to it in <code>status.generatedSecretRef</code>. The secret should be created in the namespace specified in the <code>backupbucket.extensions.gardener.cloud/generated-secret-namespace</code> annotation. In case the annotation is not present, the <code>garden</code> namespace should be used. This secret is supposed to be used by Gardener, or eventually a <code>BackupEntry</code> resource and etcd-backup-restore component, for backing up the etcd.</p><p>In order to support a new infrastructure provider, you need to write a controller that watches all <code>BackupBucket</code>s with <code>.spec.type=&lt;my-provider-name&gt;</code>. You can take a look at the below referenced example implementation for the Azure provider.</p><h2 id="references-and-additional-resources" tabindex="-1">References and Additional Resources <a class="header-anchor" href="#references-and-additional-resources" aria-label="Permalink to &quot;References and Additional Resources&quot;">​</a></h2><ul><li><a href="/docs/gardener/api-reference/extensions/#backupbucket"><code>BackupBucket</code> API Reference</a></li><li><a href="https://github.com/gardener/gardener-extension-provider-azure/tree/master/pkg/controller/backupbucket" target="_blank" rel="noreferrer">Exemplary Implementation for the Azure Provider</a></li><li><a href="/docs/gardener/extensions/resources/backupentry/"><code>BackupEntry</code> Resource Documentation</a></li><li><a href="https://github.com/gardener/gardener/blob/master/docs/proposals/02-backupinfra.md" target="_blank" rel="noreferrer">Shared Bucket Proposal</a></li></ul>`,16)]))}const k=a(i,[["render",n]]);export{u as __pageData,k as default};
