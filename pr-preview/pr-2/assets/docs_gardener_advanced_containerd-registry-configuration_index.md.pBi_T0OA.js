import{_ as s,c as a,o as t,a2 as e}from"./chunks/framework.Bfq10Vlj.js";const c=JSON.parse('{"title":"containerd Registry Configuration","description":"","frontmatter":{"aliases":["/docs/gardener/containerd-registry-configuration/"],"github_repo":"https://github.com/gardener/gardener","github_subdir":"docs/usage/advanced","params":{"github_branch":"master"},"path_base_for_github_subdir":{"from":"content/docs/gardener/advanced/containerd-registry-configuration.md","to":"containerd-registry-configuration.md"},"persona":"Users","title":"containerd Registry Configuration","prev":false,"next":false},"headers":[],"relativePath":"docs/gardener/advanced/containerd-registry-configuration/index.md","filePath":"docs/gardener/advanced/containerd-registry-configuration.md","lastUpdated":null}'),n={name:"docs/gardener/advanced/containerd-registry-configuration/index.md"};function r(h,i,o,l,p,d){return t(),a("div",null,i[0]||(i[0]=[e(`<h1 id="containerd-registry-configuration" tabindex="-1"><code>containerd</code> Registry Configuration <a class="header-anchor" href="#containerd-registry-configuration" aria-label="Permalink to &quot;\`containerd\` Registry Configuration&quot;">​</a></h1><p>containerd supports configuring registries and mirrors. Using this native containerd feature, Shoot owners can configure containerd to use public or private mirrors for a given upstream registry. More details about the registry configuration can be found in the <a href="https://github.com/containerd/containerd/blob/main/docs/hosts.md" target="_blank" rel="noreferrer">corresponding upstream documentation</a>.</p><h3 id="containerd-registry-configuration-patterns" tabindex="-1"><code>containerd</code> Registry Configuration Patterns <a class="header-anchor" href="#containerd-registry-configuration-patterns" aria-label="Permalink to &quot;\`containerd\` Registry Configuration Patterns&quot;">​</a></h3><p>At the time of writing this document, containerd support two patterns for configuring registries/mirrors.</p><blockquote><p>Note: Trying to use both of the patterns at the same time is not supported by containerd. Only one of the configuration patterns has to be followed strictly.</p></blockquote><h5 id="old-and-deprecated-pattern" tabindex="-1">Old and Deprecated Pattern <a class="header-anchor" href="#old-and-deprecated-pattern" aria-label="Permalink to &quot;Old and Deprecated Pattern&quot;">​</a></h5><p>The old and deprecated pattern is specifying <code>registry.mirrors</code> and <code>registry.configs</code> in the containerd&#39;s config.toml file. See the <a href="https://github.com/containerd/containerd/blob/main/docs/cri/registry.md" target="_blank" rel="noreferrer">upstream documentation</a>. Example of the old and deprecated pattern:</p><div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">version = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plugins</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;io</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">containerd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">grpc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">v1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cri&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">registry</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  [</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plugins</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;io</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">containerd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">grpc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">v1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cri&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">registry</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mirrors</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    [</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plugins</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;io</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">containerd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">grpc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">v1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cri&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">registry</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mirrors</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;docker</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">io&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      endpoint = [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://public-mirror.example.com&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><p>In the above example, containerd is configured to first try to pull <code>docker.io</code> images from a configured endpoint (<code>https://public-mirror.example.com</code>). If the image is not available in <code>https://public-mirror.example.com</code>, then containerd will fall back to the upstream registry (<code>docker.io</code>) and will pull the image from there.</p><h5 id="hosts-directory-pattern" tabindex="-1">Hosts Directory Pattern <a class="header-anchor" href="#hosts-directory-pattern" aria-label="Permalink to &quot;Hosts Directory Pattern&quot;">​</a></h5><p>The hosts directory pattern is the new and recommended pattern for configuring registries. It is available starting <code>containerd@v1.5.0</code>. See the <a href="https://github.com/containerd/containerd/blob/main/docs/hosts.md" target="_blank" rel="noreferrer">upstream documentation</a>. The above example in the hosts directory pattern looks as follows. The <code>/etc/containerd/config.toml</code> file has the following section:</p><div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">version = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plugins</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;io</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">containerd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">grpc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">v1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cri&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">registry</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   config_path = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/etc/containerd/certs.d&quot;</span></span></code></pre></div><p>The following hosts directory structure has to be created:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ tree /etc/containerd/certs.d</span></span>
<span class="line"><span>/etc/containerd/certs.d</span></span>
<span class="line"><span>└── docker.io</span></span>
<span class="line"><span>    └── hosts.toml</span></span></code></pre></div><p>Finally, for the <code>docker.io</code> upstream registry, we configure a <code>hosts.toml</code> file as follows:</p><div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">server = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://registry-1.docker.io&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">host</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;http://public-mirror</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">example</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">com&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  capabilities = [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;pull&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;resolve&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><h3 id="configuring-containerd-registries-for-a-shoot" tabindex="-1">Configuring <code>containerd</code> Registries for a Shoot <a class="header-anchor" href="#configuring-containerd-registries-for-a-shoot" aria-label="Permalink to &quot;Configuring \`containerd\` Registries for a Shoot&quot;">​</a></h3><p>Gardener supports configuring <code>containerd</code> registries on a Shoot using the new <a href="https://github.com/containerd/containerd/blob/main/docs/hosts.md" target="_blank" rel="noreferrer">hosts directory pattern</a>. For each Shoot Node, Gardener creates the <code>/etc/containerd/certs.d</code> directory and adds the following section to the containerd&#39;s <code>/etc/containerd/config.toml</code> file:</p><div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plugins</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;io</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">containerd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">grpc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">v1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cri&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">registry</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># gardener-managed</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   config_path = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/etc/containerd/certs.d&quot;</span></span></code></pre></div><p>This allows Shoot owners to use the <a href="https://github.com/containerd/containerd/blob/main/docs/hosts.md" target="_blank" rel="noreferrer">hosts directory pattern</a> to configure registries for containerd. To do this, the Shoot owners need to create a directory under <code>/etc/containerd/certs.d</code> that is named with the upstream registry host name. In the newly created directory, a <code>hosts.toml</code> file needs to be created. For more details, see the <a href="/docs/gardener/advanced/containerd-registry-configuration/#hosts-directory-pattern">hosts directory pattern section</a> and the <a href="https://github.com/containerd/containerd/blob/main/docs/hosts.md" target="_blank" rel="noreferrer">upstream documentation</a>.</p><h3 id="the-registry-cache-extension" tabindex="-1">The registry-cache Extension <a class="header-anchor" href="#the-registry-cache-extension" aria-label="Permalink to &quot;The registry-cache Extension&quot;">​</a></h3><p>There is a Gardener-native extension named <a href="https://github.com/gardener/gardener-extension-registry-cache" target="_blank" rel="noreferrer">registry-cache</a> that supports:</p><ul><li>Configuring containerd registry mirrors based on the above-described contract. The feature is added in <a href="https://github.com/gardener/gardener-extension-registry-cache/releases/tag/v0.6.0" target="_blank" rel="noreferrer">registry-cache@v0.6.0</a>.</li><li>Running pull through cache(s) in the Shoot.</li></ul><p>For more details, see the <a href="/docs/extensions/others/gardener-extension-registry-cache/">registry-cache documentation</a>.</p>`,24)]))}const g=s(n,[["render",r]]);export{c as __pageData,g as default};
