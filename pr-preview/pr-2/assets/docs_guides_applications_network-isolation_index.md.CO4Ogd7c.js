import{_ as i,c as a,o as e,a2 as t}from"./chunks/framework.Bfq10Vlj.js";const n="/assets/blog-namespaceisolation.DpVNR1vS.png",l="/assets/howto-namespaceisolation-without.BBz-CPA_.png",p="/assets/howto-namespaceisolation-with.BtjyIInA.png",u=JSON.parse('{"title":"Namespace Isolation","description":"Deny all traffic from other namespaces","frontmatter":{"category":"Networking","description":"Deny all traffic from other namespaces","github_repo":"https://github.com/gardener/documentation","github_subdir":"website/documentation/guides/applications","level":"advanced","params":{"github_branch":"master"},"path_base_for_github_subdir":{"from":"content/docs/guides/applications/network-isolation.md","to":"network-isolation.md"},"scope":"app-developer","title":"Namespace Isolation","prev":false,"next":false},"headers":[],"relativePath":"docs/guides/applications/network-isolation/index.md","filePath":"docs/guides/applications/network-isolation.md","lastUpdated":null}'),h={name:"docs/guides/applications/network-isolation/index.md"};function o(r,s,k,c,d,g){return e(),a("div",null,s[0]||(s[0]=[t('<h1 id="namespace-isolation" tabindex="-1">Namespace Isolation <a class="header-anchor" href="#namespace-isolation" aria-label="Permalink to &quot;Namespace Isolation&quot;">​</a></h1><h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">​</a></h2><p>You can configure a <strong>NetworkPolicy</strong> to deny all the traffic from other namespaces while allowing all the traffic coming from the same namespace the pod was deployed into.</p><img src="'+n+`" alt="howto-namespaceisolation" width="100%"><p><strong>There are many reasons why you may chose to employ Kubernetes network policies:</strong></p><ul><li>Isolate multi-tenant deployments</li><li>Regulatory compliance</li><li>Ensure containers assigned to different environments (e.g. dev/staging/prod) cannot interfere with each other</li></ul><p>Kubernetes <strong>network policies</strong> are application centric compared to infrastructure/network centric standard firewalls. <strong>There are no explicit CIDRs or IP addresses used</strong> for matching source or destination IP’s. <strong>Network policies build up on labels and selectors</strong> which are key concepts of Kubernetes that are used to organize (for example, all DB tier pods of an app) and select subsets of objects.</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><p>We create two nginx HTTP-Servers in two namespaces and block all traffic between the two namespaces. E.g. you are unable to get content from <em>namespace1</em> if you are sitting in <em>namespace2</em>.</p><h2 id="setup-the-namespaces" tabindex="-1">Setup the Namespaces <a class="header-anchor" href="#setup-the-namespaces" aria-label="Permalink to &quot;Setup the Namespaces&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># create two namespaces for test purpose</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ns</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> customer1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ns</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> customer2</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># create a standard HTTP web server</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nginx</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --image=nginx</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --replicas=1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --port=80</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n=customer1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nginx</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --image=nginx</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --replicas=1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --port=80</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n=customer2</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># expose the port 80 for external access</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> expose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> deployment</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nginx</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --port=80</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --type=NodePort</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n=customer1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> expose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> deployment</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nginx</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --port=80</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --type=NodePort</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n=customer2</span></span></code></pre></div><hr><h2 id="test-without-np" tabindex="-1">Test Without NP <a class="header-anchor" href="#test-without-np" aria-label="Permalink to &quot;Test Without NP&quot;">​</a></h2><img src="`+l+`" alt="howto-namespaceisolation-without" width="80%"><p>Create a pod with <em>curl</em> preinstalled inside the namespace <em>customer1</em>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># create a &quot;bash&quot; pod in one namespace</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --tty</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> client</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --image=tutum/curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n=customer1</span></span></code></pre></div><p>Try to <em>curl</em> the exposed nginx server to get the default index.html page. <strong>Execute this in the bash prompt of the pod created above.</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># get the index.html from the nginx of the namespace &quot;customer1&quot; =&gt; success</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://nginx.customer1</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># get the index.html from the nginx of the namespace &quot;customer2&quot; =&gt; success</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://nginx.customer2</span></span></code></pre></div><p>Both calls are done in a pod within the namespace <em>customer1</em> and both nginx servers are always reachable, no matter in what namespace.</p><hr><h2 id="test-with-np" tabindex="-1">Test with NP <a class="header-anchor" href="#test-with-np" aria-label="Permalink to &quot;Test with NP&quot;">​</a></h2><img src="`+p+`" alt="howto-namespaceisolation-with" width="80%"><p>Install the <strong>NetworkPolicy</strong> from your shell:</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">apiVersion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">networking.k8s.io/v1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">kind</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">NetworkPolicy</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">metadata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">deny-from-other-namespaces</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">spec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  podSelector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    matchLabels</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  ingress</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">podSelector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {}</span></span></code></pre></div><ul><li>it applies the policy to ALL pods in the named namespace as the <code>spec.podSelector.matchLabels</code> is empty and therefore selects all pods.</li><li>it allows traffic from ALL pods in the named namespace, as <code>spec.ingress.from.podSelector</code> is empty and therefore selects all pods.</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apply</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./network-policy.yaml</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n=customer1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apply</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./network-policy.yaml</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n=customer2</span></span></code></pre></div><p>After this, <code>curl http://nginx.customer2</code> shouldn&#39;t work anymore if you are a service inside the namespace <em>customer1</em> and vice versa.</p><div class="note custom-block github-alert"><p class="custom-block-title">NOTE</p><p>This policy, once applied, will also disable all external traffic to these pods. For example, you can create a service of type <code>LoadBalancer</code> in namespace <code>customer1</code> that match the nginx pod. When you request the service by its <code>&lt;EXTERNAL_IP&gt;:&lt;PORT&gt;</code>, then the network policy that will deny the ingress traffic from the service and the request will time out.</p></div><h2 id="related-links" tabindex="-1">Related Links <a class="header-anchor" href="#related-links" aria-label="Permalink to &quot;Related Links&quot;">​</a></h2><p>You can get more information on how to configure the <strong>NetworkPolicies</strong> at:</p><ul><li><a href="https://docs.projectcalico.org/v3.0/getting-started/kubernetes/tutorials/advanced-policy" target="_blank" rel="noreferrer">Calico WebSite</a></li><li><a href="https://github.com/ahmetb/kubernetes-network-policy-recipes" target="_blank" rel="noreferrer">Kubernetes NP Recipes</a></li></ul>`,31)]))}const y=i(h,[["render",o]]);export{u as __pageData,y as default};
