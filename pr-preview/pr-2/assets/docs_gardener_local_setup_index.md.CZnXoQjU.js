import{_ as a,c as e,o as i,a2 as t}from"./chunks/framework.B8WFj13S.js";const k=JSON.parse('{"title":"Local Setup","description":"","frontmatter":{"github_repo":"https://github.com/gardener/gardener","github_subdir":"docs/development","params":{"github_branch":"master"},"path_base_for_github_subdir":{"from":"content/docs/gardener/local_setup.md","to":"local_setup.md"},"persona":"Developers","title":"Local Setup","prev":false,"next":false},"headers":[],"relativePath":"docs/gardener/local_setup/index.md","filePath":"docs/gardener/local_setup.md","lastUpdated":null}'),n={name:"docs/gardener/local_setup/index.md"};function l(r,s,h,o,p,d){return i(),e("div",null,s[0]||(s[0]=[t(`<h1 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">​</a></h1><p>Conceptually, all Gardener components are designed to run as a Pod inside a Kubernetes cluster. The Gardener API server extends the Kubernetes API via the user-aggregated API server concepts. However, if you want to develop it, you may want to work locally with the Gardener without building a Docker image and deploying it to a cluster each and every time. That means that the Gardener runs outside a Kubernetes cluster which requires providing a <a href="https://kubernetes.io/docs/tasks/access-application-cluster/authenticate-across-clusters-kubeconfig/" target="_blank" rel="noreferrer">Kubeconfig</a> in your local filesystem and point the Gardener to it when starting it (see below).</p><p>Further details can be found in</p><ol><li><a href="https://kubernetes.io/docs/concepts/" target="_blank" rel="noreferrer">Principles of Kubernetes</a>, and its <a href="https://kubernetes.io/docs/concepts/overview/components/" target="_blank" rel="noreferrer">components</a></li><li><a href="https://github.com/kubernetes/community/tree/master/contributors/devel" target="_blank" rel="noreferrer">Kubernetes Development Guide</a></li><li><a href="https://github.com/gardener/documentation/wiki/Architecture" target="_blank" rel="noreferrer">Architecture of Gardener</a></li></ol><p>This guide is split into two main parts:</p><ul><li><a href="documentation/pr-preview/pr-2/docs/gardener/local_setup/#preparing-the-setup">Preparing your setup by installing all dependencies and tools</a></li><li><a href="documentation/pr-preview/pr-2/docs/gardener/local_setup/#get-the-sources">Getting the Gardener source code locally</a></li></ul><h1 id="preparing-the-setup" tabindex="-1">Preparing the Setup <a class="header-anchor" href="#preparing-the-setup" aria-label="Permalink to &quot;Preparing the Setup&quot;">​</a></h1><h2 id="macos-only-installing-homebrew" tabindex="-1">[macOS only] Installing homebrew <a class="header-anchor" href="#macos-only-installing-homebrew" aria-label="Permalink to &quot;[macOS only] Installing homebrew&quot;">​</a></h2><p>The copy-paste instructions in this guide are designed for macOS and use the package manager <a href="https://brew.sh/" target="_blank" rel="noreferrer">Homebrew</a>.</p><p>On macOS run</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/bin/bash</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -fsSL</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)&quot;</span></span></code></pre></div><h2 id="macos-only-installing-gnu-bash" tabindex="-1">[macOS only] Installing GNU bash <a class="header-anchor" href="#macos-only-installing-gnu-bash" aria-label="Permalink to &quot;[macOS only] Installing GNU bash&quot;">​</a></h2><p>Built-in apple-darwin bash is missing some features that could cause shell scripts to fail locally.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bash</span></span></code></pre></div><h2 id="installing-git" tabindex="-1">Installing git <a class="header-anchor" href="#installing-git" aria-label="Permalink to &quot;Installing git&quot;">​</a></h2><p>We use <code>git</code> as VCS which you need to install. On macOS run</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git</span></span></code></pre></div><p>For other OS, please check the <a href="https://git-scm.com/book/en/v2/Getting-Started-Installing-Git" target="_blank" rel="noreferrer">Git installation documentation</a>.</p><h2 id="installing-go" tabindex="-1">Installing Go <a class="header-anchor" href="#installing-go" aria-label="Permalink to &quot;Installing Go&quot;">​</a></h2><p>Install the latest version of Go. On macOS run</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> go</span></span></code></pre></div><p>For other OS, please check <a href="https://golang.org/doc/install" target="_blank" rel="noreferrer">Go installation documentation</a>.</p><h2 id="installing-kubectl" tabindex="-1">Installing kubectl <a class="header-anchor" href="#installing-kubectl" aria-label="Permalink to &quot;Installing kubectl&quot;">​</a></h2><p>Install <code>kubectl</code>. Please make sure that the version of <code>kubectl</code> is at least <code>v1.29.x</code>. On macOS run</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kubernetes-cli</span></span></code></pre></div><p>For other OS, please check the <a href="https://kubernetes.io/docs/tasks/tools/install-kubectl/" target="_blank" rel="noreferrer">kubectl installation documentation</a>.</p><h2 id="installing-docker" tabindex="-1">Installing Docker <a class="header-anchor" href="#installing-docker" aria-label="Permalink to &quot;Installing Docker&quot;">​</a></h2><p>You need to have docker installed and running. On macOS run</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --cask</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker</span></span></code></pre></div><p>For other OS please check the <a href="https://docs.docker.com/get-docker/" target="_blank" rel="noreferrer">docker installation documentation</a>.</p><h2 id="installing-iproute2" tabindex="-1">Installing iproute2 <a class="header-anchor" href="#installing-iproute2" aria-label="Permalink to &quot;Installing iproute2&quot;">​</a></h2><p><code>iproute2</code> provides a collection of utilities for network administration and configuration. On macOS run</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> iproute2mac</span></span></code></pre></div><h2 id="installing-jq" tabindex="-1">Installing jq <a class="header-anchor" href="#installing-jq" aria-label="Permalink to &quot;Installing jq&quot;">​</a></h2><p><a href="https://jqlang.github.io/jq/" target="_blank" rel="noreferrer">jq</a> is a lightweight and flexible command-line JSON processor. On macOS run</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> jq</span></span></code></pre></div><h2 id="installing-yq" tabindex="-1">Installing yq <a class="header-anchor" href="#installing-yq" aria-label="Permalink to &quot;Installing yq&quot;">​</a></h2><p><a href="https://mikefarah.gitbook.io/yq" target="_blank" rel="noreferrer">yq</a> is a lightweight and portable command-line YAML processor. On macOS run</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yq</span></span></code></pre></div><h2 id="installing-gnu-parallel" tabindex="-1">Installing GNU Parallel <a class="header-anchor" href="#installing-gnu-parallel" aria-label="Permalink to &quot;Installing GNU Parallel&quot;">​</a></h2><p><a href="https://www.gnu.org/software/parallel/" target="_blank" rel="noreferrer">GNU Parallel</a> is a shell tool for executing jobs in parallel, used by the code generation scripts (<code>make generate</code>). On macOS run</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> parallel</span></span></code></pre></div><h2 id="macos-only-install-gnu-core-utilities" tabindex="-1">[macOS only] Install GNU Core Utilities <a class="header-anchor" href="#macos-only-install-gnu-core-utilities" aria-label="Permalink to &quot;[macOS only] Install GNU Core Utilities&quot;">​</a></h2><p>When running on macOS, install the GNU core utilities and friends:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> coreutils</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gnu-sed</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gnu-tar</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gzip</span></span></code></pre></div><p>This will create symbolic links for the GNU utilities with <code>g</code> prefix on your <code>PATH</code>, e.g., <code>gsed</code> or <code>gbase64</code>. To allow using them without the <code>g</code> prefix, add the <code>gnubin</code> directories to the beginning of your <code>PATH</code> environment variable (<code>brew install</code> and <code>brew info</code> will print out instructions for each formula):</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --prefix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)/opt/coreutils/libexec/gnubin:$PATH</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --prefix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)/opt/gnu-sed/libexec/gnubin:$PATH</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --prefix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)/opt/gnu-tar/libexec/gnubin:$PATH</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --prefix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)/opt/grep/libexec/gnubin:$PATH</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --prefix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)/opt/gzip/bin:$PATH</span></span></code></pre></div><h2 id="windows-only-wsl2" tabindex="-1">[Windows Only] WSL2 <a class="header-anchor" href="#windows-only-wsl2" aria-label="Permalink to &quot;[Windows Only] WSL2&quot;">​</a></h2><p>Apart from Linux distributions and macOS, the local gardener setup can also run on the Windows Subsystem for Linux 2.</p><p>While WSL1, plain docker for Windows and various Linux distributions and local Kubernetes environments may be supported, this setup was verified with:</p><ul><li><a href="https://docs.microsoft.com/en-us/windows/wsl/wsl2-index" target="_blank" rel="noreferrer">WSL2</a></li><li><a href="https://docs.docker.com/docker-for-windows/wsl/" target="_blank" rel="noreferrer">Docker Desktop WSL2 Engine</a></li><li><a href="https://ubuntu.com/blog/ubuntu-on-wsl-2-is-generally-available" target="_blank" rel="noreferrer">Ubuntu 18.04 LTS on WSL2</a></li><li>Nodeless local garden (see below)</li></ul><p>The Gardener repository and all the above-mentioned tools (git, golang, kubectl, ...) should be installed in your WSL2 distro, according to the distribution-specific Linux installation instructions.</p><h1 id="get-the-sources" tabindex="-1">Get the Sources <a class="header-anchor" href="#get-the-sources" aria-label="Permalink to &quot;Get the Sources&quot;">​</a></h1><p>Clone the repository from GitHub into your <code>$GOPATH</code>.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> env</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GOPATH</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/src/github.com/gardener</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> env</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GOPATH</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/src/github.com/gardener</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git@github.com:gardener/gardener.git</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gardener</span></span></code></pre></div><blockquote><p>Note: Gardener is using Go modules and cloning the repository into <code>$GOPATH</code> is not a hard requirement. However it is still recommended to clone into <code>$GOPATH</code> because <code>k8s.io/code-generator</code> does not work yet outside of <code>$GOPATH</code> - <a href="https://github.com/kubernetes/kubernetes/issues/86753" target="_blank" rel="noreferrer">kubernetes/kubernetes#86753</a>.</p></blockquote><h1 id="start-the-gardener" tabindex="-1">Start the Gardener <a class="header-anchor" href="#start-the-gardener" aria-label="Permalink to &quot;Start the Gardener&quot;">​</a></h1><p>Please see <a href="documentation/pr-preview/pr-2/docs/gardener/deployment/getting_started_locally/">getting_started_locally.md</a> how to build and deploy Gardener from your local sources.</p>`,58)]))}const g=a(n,[["render",l]]);export{k as __pageData,g as default};
