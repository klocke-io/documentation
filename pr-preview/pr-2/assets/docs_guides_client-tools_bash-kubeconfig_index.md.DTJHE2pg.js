import{_ as i,c as a,o as e,a2 as t}from"./chunks/framework.B8WFj13S.js";const n="/documentation/pr-preview/pr-2/assets/howto-kubeconfig-bash.o-MmQDRl.gif",h="/documentation/pr-preview/pr-2/assets/howto-bash_kubeconfig_powershell.BJxWmyrS.png",u=JSON.parse('{"title":"Kubeconfig Context as bash Prompt","description":"Expose the active kubeconfig into bash","frontmatter":{"category":"kubectl","description":"Expose the active kubeconfig into bash","github_repo":"https://github.com/gardener/documentation","github_subdir":"website/documentation/guides/client-tools","last_reviewed":"29.05.2018","level":"beginner","params":{"github_branch":"master"},"path_base_for_github_subdir":{"from":"content/docs/guides/client-tools/bash-kubeconfig.md","to":"bash-kubeconfig.md"},"reviewer":"Tieyan Fu","scope":"app-developer","status":"Reviewed","title":"Kubeconfig Context as bash Prompt","prev":false,"next":false},"headers":[],"relativePath":"docs/guides/client-tools/bash-kubeconfig/index.md","filePath":"docs/guides/client-tools/bash-kubeconfig.md","lastUpdated":null}'),l={name:"docs/guides/client-tools/bash-kubeconfig/index.md"};function p(k,s,r,o,d,c){return e(),a("div",null,s[0]||(s[0]=[t('<h1 id="kubeconfig-context-as-bash-prompt" tabindex="-1">Kubeconfig Context as bash Prompt <a class="header-anchor" href="#kubeconfig-context-as-bash-prompt" aria-label="Permalink to &quot;Kubeconfig Context as bash Prompt&quot;">​</a></h1><h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">​</a></h2><p>Use the Kubernetes command-line tool, <strong>kubectl</strong>, to deploy and manage applications on Kubernetes. Using kubectl, you can inspect cluster resources, as well as create, delete, and update components.</p><p><img src="'+n+`" alt="port-forward"></p><p>By default, the kubectl configuration is located at <code>~/.kube/config</code>.</p><p>Let us suppose that you have two clusters, one for development work and one for scratch work.</p><p>How to handle this easily without copying the used configuration always to the right place?</p><h2 id="export-the-kubeconfig-environment-variable" tabindex="-1">Export the KUBECONFIG Environment Variable <a class="header-anchor" href="#export-the-kubeconfig-environment-variable" aria-label="Permalink to &quot;Export the KUBECONFIG Environment Variable&quot;">​</a></h2><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bash$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> export</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> KUBECONFIG=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">PATH-TO-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">M</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">-CONFI</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">G</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/kubeconfig-dev.yaml</span></span></code></pre></div><p>How to determine which cluster is used by the kubectl command?</p><h2 id="determine-active-cluster" tabindex="-1">Determine Active Cluster <a class="header-anchor" href="#determine-active-cluster" aria-label="Permalink to &quot;Determine Active Cluster&quot;">​</a></h2><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bash$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cluster-info</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Kubernetes</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> master</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> running</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> at</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://api.dev.garden.shoot.canary.k8s-hana.ondemand.com</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">KubeDNS</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> running</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> at</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://api.dev.garden.shoot.canary.k8s-hana.ondemand.com/api/v1/proxy/namespaces/kube-system/services/kube-dns</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">To</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> further</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> debug</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> and</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> diagnose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cluster</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> problems,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> use</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;kubectl cluster-info dump&#39;.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bash$</span></span></code></pre></div><h2 id="display-cluster-in-the-bash-linux-and-alike" tabindex="-1">Display Cluster in the bash - Linux and Alike <a class="header-anchor" href="#display-cluster-in-the-bash-linux-and-alike" aria-label="Permalink to &quot;Display Cluster in the bash - Linux and Alike&quot;">​</a></h2><p>I found this tip on Stackoverflow and find it worth to be added here.</p><p>Edit your <code>~/.bash_profile</code> and add the following code snippet to show the current K8s context in the shell&#39;s prompt:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">prompt_k8s</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(){</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  k8s_current_context</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> current-context</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> 2&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [[ </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$?</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -eq</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ]] ; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">then</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> echo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;(\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">k8s_current_context</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}) &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fi</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PS1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;$(prompt_k8s)&#39;</span></span></code></pre></div><p>After this, your bash command prompt contains the active KUBECONFIG context and you always know which cluster is active - <em>develop</em> or <em>production</em>.</p><p>For example:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bash$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> export</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> KUBECONFIG=/Users/d023280/Documents/workspace/gardener-ui/kubeconfig_gardendev.yaml</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bash</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (garden_dev)$</span></span></code></pre></div><p>Note the <strong>(garden_dev)</strong> prefix in the bash command prompt.</p><p><strong>This helps immensely to avoid thoughtless mistakes.</strong></p><h2 id="display-cluster-in-the-powershell-windows" tabindex="-1">Display Cluster in the PowerShell - Windows <a class="header-anchor" href="#display-cluster-in-the-powershell-windows" aria-label="Permalink to &quot;Display Cluster in the PowerShell - Windows&quot;">​</a></h2><p>Display the current K8s cluster in the title of PowerShell window.</p><p>Create a <a href="https://superuser.com/a/1045659" target="_blank" rel="noreferrer">profile</a> file for your shell under <code>%UserProfile%\\Documents\\Windows­PowerShell\\Microsoft.PowerShell_profile.ps1</code></p><p>Copy following code to <code>Microsoft.PowerShell_profile.ps1</code></p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> prompt_k8s</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     $k8s_current_context </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (kubectl </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> current-context</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Out-String</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     if(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">         return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $k8s_current_context</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     }else {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">         return</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;No K8S contenxt found&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $host</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.ui.rawui.WindowTitle</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> prompt_k8s</span></span></code></pre></div><p><img src="`+h+'" alt="port-forward"></p><p>If you want to switch to different cluster, you can set <code>KUBECONFIG</code> to new value, and re-run the file <code>Microsoft.PowerShell_profile.ps1</code></p>',28)]))}const F=i(l,[["render",p]]);export{u as __pageData,F as default};
