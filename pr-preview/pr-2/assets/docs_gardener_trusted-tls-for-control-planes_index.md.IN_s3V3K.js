import{_ as s,c as a,o as t,a2 as i}from"./chunks/framework.Bfq10Vlj.js";const k=JSON.parse('{"title":"Trusted Tls For Control Planes","description":"","frontmatter":{"github_repo":"https://github.com/gardener/gardener","github_subdir":"docs/operations","params":{"github_branch":"master"},"path_base_for_github_subdir":{"from":"content/docs/gardener/trusted-tls-for-control-planes.md","to":"trusted-tls-for-control-planes.md"},"persona":"Operators","title":"Trusted Tls For Control Planes","prev":false,"next":false},"headers":[],"relativePath":"docs/gardener/trusted-tls-for-control-planes/index.md","filePath":"docs/gardener/trusted-tls-for-control-planes.md","lastUpdated":null}'),r={name:"docs/gardener/trusted-tls-for-control-planes/index.md"};function n(l,e,o,d,c,p){return t(),a("div",null,e[0]||(e[0]=[i(`<h1 id="trusted-tls-certificate-for-shoot-control-planes" tabindex="-1">Trusted TLS Certificate for Shoot Control Planes <a class="header-anchor" href="#trusted-tls-certificate-for-shoot-control-planes" aria-label="Permalink to &quot;Trusted TLS Certificate for Shoot Control Planes&quot;">​</a></h1><p>Shoot clusters are composed of several control plane components deployed by Gardener and its corresponding extensions.</p><p>Some components are exposed via <code>Ingress</code> resources, which make them addressable under the HTTPS protocol.</p><p>Examples:</p><ul><li>Alertmanager</li><li>Plutono</li><li>Prometheus</li></ul><p>Gardener generates the backing TLS certificates, which are signed by the shoot cluster&#39;s CA by default (self-signed).</p><p>Unlike with a self-contained Kubeconfig file, common internet browsers or operating systems don&#39;t trust a shoot&#39;s cluster CA and adding it as a trusted root is often undesired in enterprise environments.</p><p>Therefore, Gardener operators can predefine trusted wildcard certificates under which the mentioned endpoints will be served instead.</p><h2 id="register-a-trusted-wildcard-certificate" tabindex="-1">Register a trusted wildcard certificate <a class="header-anchor" href="#register-a-trusted-wildcard-certificate" aria-label="Permalink to &quot;Register a trusted wildcard certificate&quot;">​</a></h2><p>Since control plane components are published under the ingress domain (<code>core.gardener.cloud/v1beta1.Seed.spec.ingress.domain</code>) a wildcard certificate is required.</p><p>For example:</p><ul><li>Seed ingress domain: <code>dev.my-seed.example.com</code></li><li><code>CN</code> or <code>SAN</code> for a certificate: <code>*.dev.my-seed.example.com</code></li></ul><p>A wildcard certificate matches exactly one seed. It must be deployed as part of your landscape setup as a Kubernetes <code>Secret</code> inside the <code>garden</code> namespace of the corresponding seed cluster.</p><p>Please ensure that the secret has the <code>gardener.cloud/role</code> label shown below:</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">apiVersion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">v1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  ca.crt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">base64-encoded-ca.crt</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  tls.crt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">base64-encoded-tls.crt</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  tls.key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">base64-encoded-tls.key</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">kind</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Secret</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">metadata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  labels</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    gardener.cloud/role</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">controlplane-cert</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">seed-ingress-certificate</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  namespace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">garden</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Opaque</span></span></code></pre></div><p>Gardener copies the secret during the reconciliation of shoot clusters to the shoot namespace in the seed. Afterwards, the <code>Ingress</code> resources in that namespace for the mentioned components will refer to the wildcard certificate.</p><h2 id="best-practice" tabindex="-1">Best Practice <a class="header-anchor" href="#best-practice" aria-label="Permalink to &quot;Best Practice&quot;">​</a></h2><p>While it is possible to create the wildcard certificates manually and deploy them to seed clusters, it is recommended to let certificate management components do this job. Often, a seed cluster is also a shoot cluster at the same time (ManagedSeed) and might already provide a certificate service extension. Otherwise, a Gardener operator may use solutions like <a href="https://github.com/gardener/cert-management" target="_blank" rel="noreferrer">Cert-Management</a> or <a href="https://github.com/jetstack/cert-manager" target="_blank" rel="noreferrer">Cert-Manager</a>.</p>`,18)]))}const g=s(r,[["render",n]]);export{k as __pageData,g as default};
