import{_ as e,c as a,o as i,a2 as n}from"./chunks/framework.Bfq10Vlj.js";const c=JSON.parse('{"title":"Shoot Extension","description":"","frontmatter":{"github_repo":"https://github.com/gardener/gardener-extension-shoot-lakom-service","github_subdir":"docs/usage","params":{"github_branch":"main"},"path_base_for_github_subdir":{"from":"content/docs/extensions/others/gardener-extension-shoot-lakom-service/shoot-extension.md","to":"shoot-extension.md"},"persona":"Users","title":"Shoot Extension","prev":false,"next":false},"headers":[],"relativePath":"docs/extensions/others/gardener-extension-shoot-lakom-service/shoot-extension/index.md","filePath":"docs/extensions/others/gardener-extension-shoot-lakom-service/shoot-extension.md","lastUpdated":null}'),t={name:"docs/extensions/others/gardener-extension-shoot-lakom-service/shoot-extension/index.md"};function l(o,s,p,h,r,d){return i(),a("div",null,s[0]||(s[0]=[n(`<h1 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-label="Permalink to &quot;Introduction&quot;">​</a></h1><p>This extension implements <a href="https://github.com/sigstore/cosign" target="_blank" rel="noreferrer">cosign</a> image verification. It is strictly limited only to the kubernetes system components deployed by Gardener and other Gardener Extensions in the <code>kube-system</code> namespace of a shoot cluster.</p><h2 id="shoot-feature-gate" tabindex="-1">Shoot Feature Gate <a class="header-anchor" href="#shoot-feature-gate" aria-label="Permalink to &quot;Shoot Feature Gate&quot;">​</a></h2><p>In most of the Gardener setups the <code>shoot-lakom-service</code> extension is enabled globally and thus can be configured per shoot cluster. Please adapt the shoot specification by the configuration shown below to disable the extension individually.</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">kind</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Shoot</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">...</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">spec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  resources</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">lakom-ref</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    resourceRef</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      apiVersion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">v1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      kind</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Secret</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">lakom-secret</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  extensions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">shoot-lakom-service</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    disabled</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    providerConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      apiVersion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">lakom.extensions.gardener.cloud/v1alpha1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      kind</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">LakomConfig</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      scope</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">KubeSystem</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      trustedKeysResourceName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">lakom-ref</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">...</span></span></code></pre></div><h3 id="scope" tabindex="-1">Scope <a class="header-anchor" href="#scope" aria-label="Permalink to &quot;Scope&quot;">​</a></h3><p>The <code>scope</code> field instruct lakom which pods to validate. The possible values are:</p><ul><li><code>KubeSystem</code> Lakom will validate all pods in the <code>kube-system</code> namespace.</li><li><code>KubeSystemManagedByGardener</code> Lakom will validate all pods in the <code>kube-system</code> namespace that are annotated with &quot;managed-by/gardener&quot;. This is the default value.</li><li><code>Cluster</code> Lakom will validate all pods in all namespaces.</li></ul><h3 id="trustedkeysresourcename" tabindex="-1">TrustedKeysResourceName <a class="header-anchor" href="#trustedkeysresourcename" aria-label="Permalink to &quot;TrustedKeysResourceName&quot;">​</a></h3><p>Lakom, by default, tries to verify only workloads that belong to Gardener. Because of this, the only public keys that it uses to do its job are the ones for the Gardener workload.</p><p>If you&#39;d like to use Lakom as a tool for verifying your own workload, you&#39;ll need to add your own public keys to the ones that Lakom is already using. This can be achieved using Gardener <a href="/docs/gardener/extensions/referenced-resources/">referenced resources</a>. More information about the keys and their format can be found <a href="/docs/extensions/others/gardener-extension-shoot-lakom-service/lakom/#lakom-cosign-public-keys-configuration-file">here</a>.</p><p>Simply:</p><ol><li>Create a secret in your project namespace that contains a field <code>keys</code> with your keys as a value. Example keys:</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>- name: example-client-key1</span></span>
<span class="line"><span>  algorithm: RSASSA-PSS-SHA256</span></span>
<span class="line"><span>  key: |-</span></span>
<span class="line"><span>    -----BEGIN PUBLIC KEY-----</span></span>
<span class="line"><span>    MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAPeQXbIWMMXYV+9+j9b4jXTflnpfwn4E</span></span>
<span class="line"><span>    GMrmqYVhm0sclXb2FPP5aV/NFH6SZdHDZcT8LCNsNgxzxV4N+UE/JIsCAwEAAQ==</span></span>
<span class="line"><span>    -----END PUBLIC KEY-----</span></span>
<span class="line"><span>- name: example-client-key2</span></span>
<span class="line"><span>  algorithm: RSASSA-PSS-SHA256</span></span>
<span class="line"><span>  key: |-</span></span>
<span class="line"><span>    -----BEGIN PUBLIC KEY-----</span></span>
<span class="line"><span>    MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAPeQXbIWMMXYV+9+j9b4jXTflnpfwn4E</span></span>
<span class="line"><span>    GMrmqYVhm0sclXb2FPP5aV/NFH6SZdHDZcT8LCNsNgxzxV4N+UE/JIsCAwEAAQ==</span></span>
<span class="line"><span>    -----END PUBLIC KEY-----</span></span></code></pre></div><ol start="2"><li>Add a reference to your secret via the <code>resources</code> field in the shoot spec as shown above.</li><li>Add the name of your referenece in <code>trustedKeysResourceName </code> in the provider config as shown above.</li></ol><p>Now, whenever Lakom tries to verify a Pod, it will make sure to use your public keys as well.</p>`,16)]))}const E=e(t,[["render",l]]);export{c as __pageData,E as default};
