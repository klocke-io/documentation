import{_ as t,c as a,o as s,a2 as i}from"./chunks/framework.B8WFj13S.js";const u=JSON.parse('{"title":"Manage Gcs Emulator","description":"","frontmatter":{"github_repo":"https://github.com/gardener/etcd-druid","github_subdir":"docs/deployment/getting-started-locally","params":{"github_branch":"master"},"path_base_for_github_subdir":{"from":"content/docs/other-components/etcd-druid/deployment/getting-started-locally/manage-gcs-emulator.md","to":"manage-gcs-emulator.md"},"title":"Manage Gcs Emulator","prev":false,"next":false},"headers":[],"relativePath":"docs/other-components/etcd-druid/deployment/getting-started-locally/manage-gcs-emulator/index.md","filePath":"docs/other-components/etcd-druid/deployment/getting-started-locally/manage-gcs-emulator.md","lastUpdated":null}'),o={name:"docs/other-components/etcd-druid/deployment/getting-started-locally/manage-gcs-emulator/index.md"};function l(r,e,n,c,h,d){return s(),a("div",null,e[0]||(e[0]=[i('<h1 id="manage-gcs-emulator" tabindex="-1">Manage GCS Emulator <a class="header-anchor" href="#manage-gcs-emulator" aria-label="Permalink to &quot;Manage GCS Emulator&quot;">​</a></h1><p>This document is a step-by-step guide on how to configure, deploy and cleanup <a href="https://github.com/fsouza/fake-gcs-server" target="_blank" rel="noreferrer">GCS Emulator</a>, within a <a href="https://kind.sigs.k8s.io/" target="_blank" rel="noreferrer">kind</a> cluster. GCS Emulator emulates Google Cloud Storage locally, which allows the <code>Etcd</code> cluster to interact with GCS. This setup is ideal for local development and testing.</p><h2 id="_00-prerequisites" tabindex="-1">00-Prerequisites <a class="header-anchor" href="#_00-prerequisites" aria-label="Permalink to &quot;00-Prerequisites&quot;">​</a></h2><p>Ensure that you have setup the development environment as per the <a href="/documentation/pr-preview/pr-2/docs/other-components/etcd-druid/prepare-dev-environment/">documentation</a>.</p><blockquote><p><strong>Note:</strong> It is assumed that you have already created kind cluster and the <code>KUBECONFIG</code> is pointing to this Kubernetes cluster.</p></blockquote><h3 id="installing-gsutil" tabindex="-1">Installing gsutil <a class="header-anchor" href="#installing-gsutil" aria-label="Permalink to &quot;Installing gsutil&quot;">​</a></h3><p>To interact with <code>GCS Emulator</code> you must also install the <a href="https://cloud.google.com/storage/docs/gsutil" target="_blank" rel="noreferrer">gsutil</a> utility. Follow the instructions <a href="https://cloud.google.com/storage/docs/gsutil_install" target="_blank" rel="noreferrer">here</a> to install <code>gsutil</code>.</p><h2 id="_01-deploy-fakegcs" tabindex="-1">01-Deploy FakeGCS <a class="header-anchor" href="#_01-deploy-fakegcs" aria-label="Permalink to &quot;01-Deploy FakeGCS&quot;">​</a></h2><p>Deploy FakeGCS onto the Kubernetes cluster using the command below:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> deploy-fakegcs</span></span></code></pre></div><h2 id="_02-setup-gcs-bucket" tabindex="-1">02-Setup GCS Bucket <a class="header-anchor" href="#_02-setup-gcs-bucket" aria-label="Permalink to &quot;02-Setup GCS Bucket&quot;">​</a></h2><p>To create a GCS bucket for <code>Etcd</code> backup purposes, execute the following command:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gsutil</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Credentials:gs_json_host=127.0.0.1&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Credentials:gs_json_port=4443&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Boto:https_validate_certificates=False&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mb</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;gs://etcd-bucket&quot;</span></span></code></pre></div><h2 id="_03-configure-secret" tabindex="-1">03-Configure Secret <a class="header-anchor" href="#_03-configure-secret" aria-label="Permalink to &quot;03-Configure Secret&quot;">​</a></h2><p>Connection details for a GCS Object Store are put into a Kubernetes <a href="https://kubernetes.io/docs/concepts/configuration/secret/" target="_blank" rel="noreferrer">Secret</a>. Apply the Kubernetes Secret manifest through:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apply</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> examples/objstore-emulator/etcd-secret-fakegcs.yaml</span></span></code></pre></div><blockquote><p><strong>Note:</strong> The secret created should be referred to in the <code>Etcd</code> CR in <code>spec.backup.store.secretRef</code>.</p></blockquote><h2 id="_04-cleanup" tabindex="-1">04-Cleanup <a class="header-anchor" href="#_04-cleanup" aria-label="Permalink to &quot;04-Cleanup&quot;">​</a></h2><p>To clean the setup, delete the FakeGCS deployment:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> delete</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./hack/e2e-test/infrastructure/fake-gcs-server/fake-gcs-server.yaml</span></span></code></pre></div>',20)]))}const g=t(o,[["render",l]]);export{u as __pageData,g as default};
