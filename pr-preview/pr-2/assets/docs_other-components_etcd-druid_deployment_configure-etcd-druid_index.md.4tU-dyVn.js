import{_ as t,c as o,o as r,a2 as d}from"./chunks/framework.Bfq10Vlj.js";const p=JSON.parse('{"title":"Configure Etcd Druid","description":"","frontmatter":{"github_repo":"https://github.com/gardener/etcd-druid","github_subdir":"docs/deployment","params":{"github_branch":"master"},"path_base_for_github_subdir":{"from":"content/docs/other-components/etcd-druid/deployment/configure-etcd-druid.md","to":"configure-etcd-druid.md"},"title":"Configure Etcd Druid","prev":false,"next":false},"headers":[],"relativePath":"docs/other-components/etcd-druid/deployment/configure-etcd-druid/index.md","filePath":"docs/other-components/etcd-druid/deployment/configure-etcd-druid.md","lastUpdated":null}'),a={name:"docs/other-components/etcd-druid/deployment/configure-etcd-druid/index.md"};function c(n,e,i,s,l,h){return r(),o("div",null,e[0]||(e[0]=[d('<h1 id="etcd-druid-cli-flags" tabindex="-1">etcd-druid CLI Flags <a class="header-anchor" href="#etcd-druid-cli-flags" aria-label="Permalink to &quot;etcd-druid CLI Flags&quot;">​</a></h1><p><code>etcd-druid</code> process can be started with the following command line flags.</p><h2 id="command-line-flags" tabindex="-1">Command line flags <a class="header-anchor" href="#command-line-flags" aria-label="Permalink to &quot;Command line flags&quot;">​</a></h2><p>!!! note &quot;Deprecation Notice&quot;</p><p>​ All existing command line flags have been marked as deprecated. To configure <code>etcd-druid</code> the recommended way is to define a single <code>--config</code> CLI flag which points to a configuration YAML file containing <code>etcd-druid</code> <a href="https://github.com/gardener/etcd-druid/blob/master/api/config/v1alpha1/types.go#L14" target="_blank" rel="noreferrer">OperatorConfiguration</a>. For backward compatibility both new <code>--config</code> CLI flag and now deprecated existing <code>CLI flags</code> are supported.</p><h3 id="operator-configuration" tabindex="-1">Operator Configuration <a class="header-anchor" href="#operator-configuration" aria-label="Permalink to &quot;Operator Configuration&quot;">​</a></h3><p>The recommended way to configure <code>etcd-druid</code> is via <a href="https://github.com/gardener/etcd-druid/blob/master/api/config/v1alpha1/types.go#L14" target="_blank" rel="noreferrer">OperatorConfiguration</a>.</p><table tabindex="0"><thead><tr><th>Flag</th><th>Description</th><th>Default</th></tr></thead><tbody><tr><td>config</td><td>Path to the mounted operator configuration.</td><td>NA</td></tr></tbody></table><p>You can see the default values for <code>OperatorConfiguration</code> at <a href="https://github.com/gardener/etcd-druid/blob/master/api/config/v1alpha1/defaults.go" target="_blank" rel="noreferrer">api/config/v1alpha1/defaults.go</a>.</p><p>!!! note</p><p>​ It is required to define the <code>--config</code> CLI flag and point to the configuration YAML file path.</p><p>If you are deploying <code>etcd-druid</code> in a kubernetes cluster, then it is assumed that you have done the following:</p><ul><li>Created a <code>ConfigMap</code> which contains the serialized operator configuration.</li><li>Mount the <code>ConfigMap</code> to etcd-druid <code>Deployment</code>.</li></ul><h3 id="leader-election-deprecated" tabindex="-1">Leader election <em>(Deprecated)</em> <a class="header-anchor" href="#leader-election-deprecated" aria-label="Permalink to &quot;Leader election *(Deprecated)*&quot;">​</a></h3><p>If you wish to setup <code>etcd-druid</code> in high-availability mode then leader election needs to be enabled to ensure that at a time only one replica services the incoming events and does the reconciliation.</p><table tabindex="0"><thead><tr><th>Flag</th><th>Description</th><th>Default</th></tr></thead><tbody><tr><td>enable-leader-election</td><td>Leader election provides the capability to select one replica as a leader where active reconciliation will happen. The other replicas will keep waiting for leadership change and not do active reconciliations.</td><td>false</td></tr><tr><td>leader-election-id</td><td>Name of the k8s lease object that leader election will use for holding the leader lock. By default etcd-druid will use lease resource lock for leader election which is also a <a href="https://kubernetes.io/docs/concepts/architecture/leases/#leader-election" target="_blank" rel="noreferrer">natural usecase</a> for leases and is also recommended by k8s.</td><td>&quot;druid-leader-election&quot;</td></tr><tr><td>leader-election-resource-lock</td><td><em><strong>Deprecated</strong></em>: This flag will be removed in later version of druid. By default <code>lease.coordination.k8s.io</code> resources will be used for leader election resource locking for the controller manager.</td><td>&quot;leases&quot;</td></tr></tbody></table><h3 id="metrics-deprecated" tabindex="-1">Metrics <em>(Deprecated)</em> <a class="header-anchor" href="#metrics-deprecated" aria-label="Permalink to &quot;Metrics *(Deprecated)*&quot;">​</a></h3><p><code>etcd-druid</code> exposes a <code>/metrics</code> endpoint which can be scrapped by tools like <a href="https://prometheus.io/" target="_blank" rel="noreferrer">Prometheus</a>. If the default metrics endpoint configuration is not suitable then consumers can change it via the following options.</p><table tabindex="0"><thead><tr><th>Flag</th><th>Description</th><th>Default</th></tr></thead><tbody><tr><td>metrics-bind-address</td><td>The IP address that the metrics endpoint binds to</td><td>&quot;&quot;</td></tr><tr><td>metrics-port</td><td>The port used for the metrics endpoint</td><td>8080</td></tr><tr><td>metrics-addr</td><td>Duration to wait for after compaction job is completed, to allow Prometheus metrics to be scraped.<br><strong>Deprecated:</strong> Please use <code>--metrics-bind-address</code> and <code>--metrics-port</code> instead</td><td>&quot;:8080&quot;</td></tr></tbody></table><p>Metrics bind-address is computed by joining the host and port. By default its value is computed as <code>:8080</code>.</p><p>!!! tip Ensure that the <code>metrics-port</code> is also reflected in the <code>etcd-druid</code> deployment specification.</p><h3 id="webhook-server-deprecated" tabindex="-1">Webhook Server <em>(Deprecated)</em> <a class="header-anchor" href="#webhook-server-deprecated" aria-label="Permalink to &quot;Webhook Server *(Deprecated)*&quot;">​</a></h3><p>etcd-druid provides the following CLI flags to configure webhook server. These CLI flags are used to construct a new <a href="https://pkg.go.dev/sigs.k8s.io/controller-runtime/pkg/webhook#Server" target="_blank" rel="noreferrer">webhook.Server</a> by configuring <a href="https://pkg.go.dev/sigs.k8s.io/controller-runtime/pkg/webhook#Options" target="_blank" rel="noreferrer">Options</a>.</p><table tabindex="0"><thead><tr><th>Flag</th><th>Description</th><th>Default</th></tr></thead><tbody><tr><td>webhook-server-bind-address</td><td>It is the address that the webhook server will listen on.</td><td>&quot;&quot;</td></tr><tr><td>webhook-server-port</td><td>Port is the port number that the webhook server will serve.</td><td>9443</td></tr><tr><td>webhook-server-tls-server-cert-dir</td><td>The path to a directory containing the server&#39;s TLS certificate and key (the files must be named tls.crt and tls.key respectively).</td><td>/etc/webhook-server-tls</td></tr></tbody></table><h3 id="etcd-components-webhook-deprecated" tabindex="-1">Etcd-Components Webhook <em>(Deprecated)</em> <a class="header-anchor" href="#etcd-components-webhook-deprecated" aria-label="Permalink to &quot;Etcd-Components Webhook *(Deprecated)*&quot;">​</a></h3><p>etcd-druid provisions and manages several Kubernetes resources which we call <a href="/docs/other-components/etcd-druid/concepts/etcd-cluster-components/"><code>Etcd</code>cluster components</a>. To ensure that there is no accidental changes done to these managed resources, a webhook is put in place to check manual changes done to any managed etcd-cluster Kubernetes resource. It rejects most of these changes except a few. The details on how to enable the <code>etcd-components</code> webhook, which resources are protected and in which scenarios is the change allowed is documented <a href="/docs/other-components/etcd-druid/concepts/etcd-cluster-resource-protection/">here</a>.</p><p>Following CLI flags are provided to configure the <code>etcd-components</code> webhook:</p><table tabindex="0"><thead><tr><th>Flag</th><th>Description</th><th>Default</th></tr></thead><tbody><tr><td>enable-etcd-components-webhook</td><td>Enable EtcdComponents Webhook to prevent unintended changes to resources managed by etcd-druid.</td><td>false</td></tr><tr><td>reconciler-service-account</td><td>The fully qualified name of the service account used by etcd-druid for reconciling etcd resources. If unspecified, the default service account mounted for etcd-druid will be used</td><td>etcd-druid-service-account</td></tr><tr><td>etcd-components-exempt-service-accounts</td><td>In case there is a need to allow changes to <code>Etcd</code> resources from external controllers like <code>vertical-pod-autoscaler</code> then one must list the <code>ServiceAaccount</code> that is used by each such controller.</td><td>&quot;&quot;</td></tr></tbody></table><h3 id="reconcilers-deprecated" tabindex="-1">Reconcilers <em>(Deprecated)</em> <a class="header-anchor" href="#reconcilers-deprecated" aria-label="Permalink to &quot;Reconcilers *(Deprecated)*&quot;">​</a></h3><p>Following set of flags configures the reconcilers running within etcd-druid. To know more about different reconcilers read <a href="/docs/other-components/etcd-druid/controllers/">this</a> document.</p><h4 id="etcd-reconciler-deprecated" tabindex="-1">Etcd Reconciler <em>(Deprecated)</em> <a class="header-anchor" href="#etcd-reconciler-deprecated" aria-label="Permalink to &quot;Etcd Reconciler *(Deprecated)*&quot;">​</a></h4><table tabindex="0"><thead><tr><th>Flag</th><th>Description</th><th>Default</th></tr></thead><tbody><tr><td>etcd-workers</td><td>Number of workers spawned for concurrent reconciles of <code>Etcd</code> resources.</td><td>3</td></tr><tr><td>enable-etcd-spec-auto-reconcile</td><td>If true then automatically reconciles Etcd Spec. If false, waits for explicit annotation <code>gardener.cloud/operation: reconcile</code> to be placed on the Etcd resource to trigger reconcile.</td><td>false</td></tr><tr><td>disable-etcd-serviceaccount-automount</td><td>For each <code>Etcd</code> cluster a <code>ServiceAccount</code> is created which is used by the <code>StatefulSet</code> pods and tied to <code>Role</code> via <code>RoleBinding</code>. If <code>false</code> then pods running as this <code>ServiceAccount</code> will have the API token automatically mounted. You can consider disabling it if you wish to use <a href="https://kubernetes.io/docs/concepts/storage/projected-volumes/#serviceaccounttoken" target="_blank" rel="noreferrer">Projected Volumes</a> allowing one to set an <code>expirationSeconds</code> on the mounted token for better security. To use projected volumes ensure that you have set relevant <a href="https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#serviceaccount-token-volume-projection" target="_blank" rel="noreferrer">kube-apiserver flags</a>.<br><strong>Note:</strong> With Kubernetes version &gt;=1.24 projected service account token is the default. This means that we no longer need this flag. <a href="https://github.com/gardener/etcd-druid/issues/872" target="_blank" rel="noreferrer">Issue #872</a> has been raised to address this.</td><td>false</td></tr><tr><td>etcd-status-sync-period</td><td><code>Etcd.Status</code> is periodically updated. This interval defines the status sync frequency.</td><td>15s</td></tr><tr><td>etcd-member-notready-threshold</td><td>Threshold after which an etcd member is considered not ready if the status was unknown before. This is currently used to update <a href="https://github.com/gardener/etcd-druid/blob/55efca1c8f6c852b0a4e97f08488ffec2eed0e68/api/v1alpha1/etcd.go#L360" target="_blank" rel="noreferrer">EtcdMemberConditionStatus</a>.</td><td>5m</td></tr><tr><td>etcd-member-unknown-threshold</td><td>Threshold after which an etcd member is considered unknown. This is currently used to update <a href="https://github.com/gardener/etcd-druid/blob/55efca1c8f6c852b0a4e97f08488ffec2eed0e68/api/v1alpha1/etcd.go#L360" target="_blank" rel="noreferrer">EtcdMemberConditionStatus</a>.</td><td>1m</td></tr></tbody></table><h4 id="compaction-reconciler-deprecated" tabindex="-1">Compaction Reconciler <em>(Deprecated)</em> <a class="header-anchor" href="#compaction-reconciler-deprecated" aria-label="Permalink to &quot;Compaction Reconciler *(Deprecated)*&quot;">​</a></h4><table tabindex="0"><thead><tr><th>Flag</th><th>Description</th><th>Default</th></tr></thead><tbody><tr><td>enable-backup-compaction</td><td>Enable automatic compaction of etcd backups</td><td>false</td></tr><tr><td>compaction-workers</td><td>Number of workers that can be spawned for concurrent reconciles for compaction Jobs. The controller creates a backup compaction job if a certain etcd event threshold is reached. If compaction is enabled, the value for this flag must be greater than zero.</td><td>3</td></tr><tr><td>etcd-events-threshold</td><td>Defines the threshold in terms of total number of etcd events before a backup compaction job is triggered.</td><td>1000000</td></tr><tr><td>active-deadline-duration</td><td>Duration after which a running backup compaction job will be terminated.</td><td>3h</td></tr><tr><td>metrics-scrape-wait-duration</td><td>Duration to wait for after compaction job is completed, to allow Prometheus metrics to be scraped.</td><td>0s</td></tr></tbody></table><h4 id="etcd-copy-backup-task-secret-reconcilers-deprecated" tabindex="-1">Etcd Copy-Backup Task &amp; Secret Reconcilers <em>(Deprecated)</em> <a class="header-anchor" href="#etcd-copy-backup-task-secret-reconcilers-deprecated" aria-label="Permalink to &quot;Etcd Copy-Backup Task &amp; Secret Reconcilers *(Deprecated)*&quot;">​</a></h4><table tabindex="0"><thead><tr><th>Flag</th><th>Description</th><th>Default</th></tr></thead><tbody><tr><td>etcd-copy-backups-task-workers</td><td>Number of workers spawned for concurrent reconciles for <code>EtcdCopyBackupTask</code> resources.</td><td>3</td></tr><tr><td>secret-workers</td><td>Number of workers spawned for concurrent reconciles for secrets.</td><td>10</td></tr></tbody></table><h4 id="miscellaneous-deprecated" tabindex="-1">Miscellaneous <em>(Deprecated)</em> <a class="header-anchor" href="#miscellaneous-deprecated" aria-label="Permalink to &quot;Miscellaneous *(Deprecated)*&quot;">​</a></h4><table tabindex="0"><thead><tr><th>Flag</th><th>Description</th><th>Default</th></tr></thead><tbody><tr><td>feature-gates</td><td>A set of key=value pairs that describe feature gates for alpha/experimental features. Please check <a href="/docs/other-components/etcd-druid/deployment/feature-gates/">feature-gates</a> for more information.</td><td>&quot;&quot;</td></tr><tr><td>disable-lease-cache</td><td>Disable cache for lease.coordination.k8s.io resources.</td><td>false</td></tr></tbody></table>',38)]))}const f=t(a,[["render",c]]);export{p as __pageData,f as default};
