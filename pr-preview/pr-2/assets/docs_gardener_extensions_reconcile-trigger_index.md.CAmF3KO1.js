import{_ as t,c as r,o,a2 as n}from"./chunks/framework.B8WFj13S.js";const p=JSON.parse('{"title":"Reconcile Trigger","description":"","frontmatter":{"github_repo":"https://github.com/gardener/gardener","github_subdir":"docs/extensions","params":{"github_branch":"master"},"path_base_for_github_subdir":{"from":"content/docs/gardener/extensions/reconcile-trigger.md","to":"reconcile-trigger.md"},"title":"Reconcile Trigger","prev":false,"next":false},"headers":[],"relativePath":"docs/gardener/extensions/reconcile-trigger/index.md","filePath":"docs/gardener/extensions/reconcile-trigger.md","lastUpdated":null}'),i={name:"docs/gardener/extensions/reconcile-trigger/index.md"};function a(s,e,c,d,l,h){return o(),r("div",null,e[0]||(e[0]=[n('<h1 id="reconcile-trigger" tabindex="-1">Reconcile Trigger <a class="header-anchor" href="#reconcile-trigger" aria-label="Permalink to &quot;Reconcile Trigger&quot;">â€‹</a></h1><p>Gardener dictates the time of reconciliation for resources of the API group <code>extensions.gardener.cloud</code>. It does that by annotating the respected resource with <code>gardener.cloud/operation=reconcile</code>. Extension controllers shall react to this annotation and start reconciling the resource. They have to remove this annotation as soon as they begin with their reconcile operation and maintain the <code>status</code> of the extension resource accordingly.</p><p>The reason for this behaviour is that it is possible to configure Gardener to reconcile only in the shoots&#39; maintenance time windows. In order to avoid that, extension controllers reconcile outside of the shoot&#39;s maintenance time window we have introduced this contract. This way extension controllers don&#39;t need to care about when the shoot maintenance time window happens. Gardener keeps control and decides when the shoot shall be reconciled/updated.</p><p>Our <a href="https://github.com/gardener/gardener/tree/master/extensions" target="_blank" rel="noreferrer">extension controller library</a> provides all the required utilities to conveniently implement this behaviour.</p>',4)]))}const u=t(i,[["render",a]]);export{p as __pageData,u as default};
