import{_ as s,c as a,o as t,a2 as i}from"./chunks/framework.Bfq10Vlj.js";const k=JSON.parse('{"title":"Taints and Tolerations for Seeds and Shoots","description":"","frontmatter":{"aliases":["/docs/gardener/tolerations/"],"github_repo":"https://github.com/gardener/gardener","github_subdir":"docs/usage/advanced","params":{"github_branch":"master"},"path_base_for_github_subdir":{"from":"content/docs/gardener/advanced/tolerations.md","to":"tolerations.md"},"persona":"Users","title":"Taints and Tolerations for Seeds and Shoots","prev":false,"next":false},"headers":[],"relativePath":"docs/gardener/advanced/tolerations/index.md","filePath":"docs/gardener/advanced/tolerations.md","lastUpdated":null}'),n={name:"docs/gardener/advanced/tolerations/index.md"};function o(r,e,l,d,h,c){return t(),a("div",null,e[0]||(e[0]=[i(`<h1 id="taints-and-tolerations-for-seeds-and-shoots" tabindex="-1">Taints and Tolerations for <code>Seed</code>s and <code>Shoot</code>s <a class="header-anchor" href="#taints-and-tolerations-for-seeds-and-shoots" aria-label="Permalink to &quot;Taints and Tolerations for \`Seed\`s and \`Shoot\`s&quot;">​</a></h1><p>Similar to <a href="https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/" target="_blank" rel="noreferrer">taints and tolerations</a> for <code>Node</code>s and <code>Pod</code>s in Kubernetes, the <code>Seed</code> resource supports specifying taints (<code>.spec.taints</code>, see <a href="https://github.com/gardener/gardener/blob/master/example/50-seed.yaml#L48-L55" target="_blank" rel="noreferrer">this example</a>) while the <code>Shoot</code> resource supports specifying tolerations (<code>.spec.tolerations</code>, see <a href="https://github.com/gardener/gardener/blob/master/example/90-shoot.yaml#L268-L269" target="_blank" rel="noreferrer">this example</a>). The feature is used to control scheduling to seeds as well as decisions whether a shoot can use a certain seed.</p><p>Compared to Kubernetes, Gardener&#39;s taints and tolerations are very much down-stripped right now and have some behavioral differences. Please read the following explanations carefully if you plan to use them.</p><h2 id="scheduling" tabindex="-1">Scheduling <a class="header-anchor" href="#scheduling" aria-label="Permalink to &quot;Scheduling&quot;">​</a></h2><p>When scheduling a new shoot, the gardener-scheduler will filter all seed candidates whose taints are not tolerated by the shoot. As Gardener&#39;s taints/tolerations don&#39;t support <code>effect</code>s yet, you can compare this behaviour with using a <code>NoSchedule</code> effect taint in Kubernetes.</p><p>Be reminded that taints/tolerations are no means to define any affinity or selection for seeds - please use <code>.spec.seedSelector</code> in the <code>Shoot</code> to state such desires.</p><p>⚠️ Please note that - unlike how it&#39;s implemented in Kubernetes - a certain seed cluster <strong>may</strong> only be used when the shoot tolerates <strong>all</strong> the seed&#39;s taints. This means that specifying <code>.spec.seedName</code> for a seed whose taints are not tolerated will make the gardener-apiserver reject the request.</p><p>Consequently, the taints/tolerations feature can be used as means to restrict usage of certain seeds.</p><h2 id="toleration-defaults-and-whitelist" tabindex="-1">Toleration Defaults and Whitelist <a class="header-anchor" href="#toleration-defaults-and-whitelist" aria-label="Permalink to &quot;Toleration Defaults and Whitelist&quot;">​</a></h2><p>The <code>Project</code> resource features a <code>.spec.tolerations</code> object that may carry <code>defaults</code> and a <code>whitelist</code> (see <a href="https://github.com/gardener/gardener/blob/master/example/05-project-dev.yaml#L33-L37" target="_blank" rel="noreferrer">this example</a>). The corresponding <code>ShootTolerationRestriction</code> admission plugin (cf. Kubernetes&#39; <code>PodTolerationRestriction</code> admission plugin) is responsible for evaluating these settings during creation/update of <code>Shoot</code>s.</p><h3 id="whitelist" tabindex="-1">Whitelist <a class="header-anchor" href="#whitelist" aria-label="Permalink to &quot;Whitelist&quot;">​</a></h3><p>If a shoot gets created or updated with tolerations, then it is validated that only those tolerations may be used that were added to either a) the <code>Project</code>&#39;s <code>.spec.tolerations.whitelist</code>, or b) to the global whitelist in the <code>ShootTolerationRestriction</code>&#39;s admission config (see <a href="https://github.com/gardener/gardener/blob/master/example/20-admissionconfig.yaml#L7-L14" target="_blank" rel="noreferrer">this example</a>).</p><p>⚠️ Please note that the tolerations whitelist of <code>Project</code>s can only be changed if the user trying to change it is bound to the <code>modify-spec-tolerations-whitelist</code> custom RBAC role, e.g., via the following <code>ClusterRole</code>:</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">apiVersion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">rbac.authorization.k8s.io/v1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">kind</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ClusterRole</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">metadata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">full-project-modification-access</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">rules</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">- </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">apiGroups</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">core.gardener.cloud</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  resources</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">projects</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  verbs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">create</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">patch</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">update</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">modify-spec-tolerations-whitelist</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">delete</span></span></code></pre></div><h3 id="defaults" tabindex="-1">Defaults <a class="header-anchor" href="#defaults" aria-label="Permalink to &quot;Defaults&quot;">​</a></h3><p>If a shoot gets created, then the default tolerations specified in both the <code>Project</code>&#39;s <code>.spec.tolerations.defaults</code> and the global default list in the <code>ShootTolerationRestriction</code> admission plugin&#39;s configuration will be added to the <code>.spec.tolerations</code> of the <code>Shoot</code> (unless it already specifies a certain key).</p>`,16)]))}const g=s(n,[["render",o]]);export{k as __pageData,g as default};
