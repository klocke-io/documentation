import{_ as t,c as s,o as r,a2 as i}from"./chunks/framework.B8WFj13S.js";const a="/documentation/pr-preview/pr-2/assets/01-open-terminal.CCpJ_emq.png",o="/documentation/pr-preview/pr-2/assets/02-terminal.ox7yYLqv.png",n="/documentation/pr-preview/pr-2/assets/03-list-ns.O4H_M0Z1.png",b=JSON.parse('{"title":"Using Terminal","description":"","frontmatter":{"github_repo":"https://github.com/gardener/dashboard","github_subdir":"docs/usage","params":{"github_branch":"master"},"path_base_for_github_subdir":{"from":"content/docs/dashboard/using-terminal.md","to":"using-terminal.md"},"persona":"Users","title":"Using Terminal","prev":false,"next":false},"headers":[],"relativePath":"docs/dashboard/using-terminal/index.md","filePath":"docs/dashboard/using-terminal.md","lastUpdated":null}'),l={name:"docs/dashboard/using-terminal/index.md"};function d(h,e,c,p,u,m){return r(),s("div",null,e[0]||(e[0]=[i('<h1 id="using-the-dashboard-terminal" tabindex="-1">Using the Dashboard Terminal <a class="header-anchor" href="#using-the-dashboard-terminal" aria-label="Permalink to &quot;Using the Dashboard Terminal&quot;">​</a></h1><p>The dashboard features an integrated web-based terminal to your clusters. It allows you to use <code>kubectl</code> without the need to supply <code>kubeconfig</code>. There are several ways to access it and they&#39;re described on this page.</p><h3 id="prerequisites" tabindex="-1">Prerequisites <a class="header-anchor" href="#prerequisites" aria-label="Permalink to &quot;Prerequisites&quot;">​</a></h3><ul><li>You are logged on to the Gardener Dashboard.</li><li>You have created a cluster and its status is operational.</li><li>The landscape administrator has enabled the terminal feature</li><li>The cluster you want to connect to is reachable from the dashboard</li></ul><p>On this page:</p><ul><li><a href="/documentation/pr-preview/pr-2/docs/dashboard/using-terminal/#open-from-cluster-list">Open from cluster list</a></li><li><a href="/documentation/pr-preview/pr-2/docs/dashboard/using-terminal/#open-from-cluster-details-page">Open from cluster details page</a></li><li><a href="/documentation/pr-preview/pr-2/docs/dashboard/using-terminal/#terminal">Terminal</a></li></ul><br><h3 id="open-from-cluster-list" tabindex="-1">Open from cluster list <a class="header-anchor" href="#open-from-cluster-list" aria-label="Permalink to &quot;Open from cluster list&quot;">​</a></h3><ol><li><p>Choose your project from the menu on the left and choose CLUSTERS.</p></li><li><p>Locate a cluster for which you want to open a Terminal and choose the <em>key</em> icon.</p></li><li><p>In the dialog, choose the icon on the right of the Terminal label.</p><img style="max-width:40%;" src="'+a+'"></li></ol><h3 id="open-from-cluster-details-page" tabindex="-1">Open from cluster details page <a class="header-anchor" href="#open-from-cluster-details-page" aria-label="Permalink to &quot;Open from cluster details page&quot;">​</a></h3><ol><li><p>Choose your project from the menu on the left and choose CLUSTERS.</p></li><li><p>Locate a cluster for which you want to open a Terminal and choose to display its details.</p></li><li><p>In the Access section, choose the icon on the right of the Terminal label.</p><img style="max-width:40%;" src="'+a+'"></li></ol><h3 id="terminal" tabindex="-1">Terminal <a class="header-anchor" href="#terminal" aria-label="Permalink to &quot;Terminal&quot;">​</a></h3><p>Opening up the terminal in either of the ways discussed here results in the following screen:</p><img src="'+o+'"><p>It provides a <code>bash</code> environment and range of useful tools and an installed and configured <code>kubectl</code> (with alias <code>k</code>) to use right away with your cluster.</p><p>Try to list the namespaces in the cluster.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ k get ns</span></span></code></pre></div><p>You get a result like this: <img src="'+n+'"></p>',18)]))}const f=t(l,[["render",d]]);export{b as __pageData,f as default};
