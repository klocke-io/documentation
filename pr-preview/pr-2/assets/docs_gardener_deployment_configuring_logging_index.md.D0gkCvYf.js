import{_ as i,c as s,o as a,a2 as n}from"./chunks/framework.Bfq10Vlj.js";const c=JSON.parse('{"title":"Configuring Logging","description":"","frontmatter":{"github_repo":"https://github.com/gardener/gardener","github_subdir":"docs/deployment","params":{"github_branch":"master"},"path_base_for_github_subdir":{"from":"content/docs/gardener/deployment/configuring_logging.md","to":"configuring_logging.md"},"title":"Configuring Logging","prev":false,"next":false},"headers":[],"relativePath":"docs/gardener/deployment/configuring_logging/index.md","filePath":"docs/gardener/deployment/configuring_logging.md","lastUpdated":null}'),t={name:"docs/gardener/deployment/configuring_logging/index.md"};function o(l,e,g,h,r,d){return a(),s("div",null,e[0]||(e[0]=[n(`<h1 id="configuring-the-logging-stack-via-gardenlet-configurations" tabindex="-1">Configuring the Logging Stack via gardenlet Configurations <a class="header-anchor" href="#configuring-the-logging-stack-via-gardenlet-configurations" aria-label="Permalink to &quot;Configuring the Logging Stack via gardenlet Configurations&quot;">​</a></h1><h2 id="enable-the-logging" tabindex="-1">Enable the Logging <a class="header-anchor" href="#enable-the-logging" aria-label="Permalink to &quot;Enable the Logging&quot;">​</a></h2><p>In order to install the Gardener logging stack, the <code>logging.enabled</code> configuration option has to be enabled in the Gardenlet configuration:</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">logging</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  enabled</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span></code></pre></div><p>From now on, each Seed is going to have a logging stack which will collect logs from all pods and some systemd services. Logs related to Shoots with <code>testing</code> purpose are dropped in the <code>fluent-bit</code> output plugin. Shoots with a purpose different than <code>testing</code> have the same type of log aggregator (but different instance) as the Seed. The logs can be viewed in the Plutono in the <code>garden</code> namespace for the Seed components and in the respective shoot control plane namespaces.</p><h2 id="enable-logs-from-the-shoot-s-node-systemd-services" tabindex="-1">Enable Logs from the Shoot&#39;s Node systemd Services <a class="header-anchor" href="#enable-logs-from-the-shoot-s-node-systemd-services" aria-label="Permalink to &quot;Enable Logs from the Shoot&#39;s Node systemd Services&quot;">​</a></h2><p>The logs from the systemd services on each node can be retrieved by enabling the <code>logging.shootNodeLogging</code> option in the gardenlet configuration:</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">logging</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  enabled</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  shootNodeLogging</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    shootPurposes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;evaluation&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;deployment&quot;</span></span></code></pre></div><p>Under the <code>shootPurpose</code> section, just list all the shoot purposes for which the Shoot node logging feature will be enabled. Specifying the <code>testing</code> purpose has no effect because this purpose prevents the logging stack installation. Logs can be viewed in the operator Plutono! The dedicated labels are <code>unit</code>, <code>syslog_identifier</code>, and <code>nodename</code> in the <code>Explore</code> menu.</p><h2 id="configuring-central-vali-storage-capacity" tabindex="-1">Configuring Central Vali Storage Capacity <a class="header-anchor" href="#configuring-central-vali-storage-capacity" aria-label="Permalink to &quot;Configuring Central Vali Storage Capacity&quot;">​</a></h2><p>By default, the central Vali has <code>100Gi</code> of storage capacity. To overwrite the current central Vali storage capacity, the <code>logging.vali.garden.storage</code> setting in the gardenlet&#39;s component configuration should be altered. If you need to increase it, you can do so without losing the current data by specifying a higher capacity. By doing so, the Vali&#39;s <code>PersistentVolume</code> capacity will be increased instead of deleting the current PV. However, if you specify less capacity, then the <code>PersistentVolume</code> will be deleted and with it the logs, too.</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">logging</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  enabled</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  vali</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    garden</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      storage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;200Gi&quot;</span></span></code></pre></div>`,12)]))}const k=i(t,[["render",o]]);export{c as __pageData,k as default};
