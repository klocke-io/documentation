import{_ as e,c as i,o as a,a2 as n}from"./chunks/framework.B8WFj13S.js";const c=JSON.parse('{"title":"Resource Admission in the Garden Cluster","description":"","frontmatter":{"github_repo":"https://github.com/gardener/gardener","github_subdir":"docs/extensions","params":{"github_branch":"master"},"path_base_for_github_subdir":{"from":"content/docs/gardener/extensions/admission.md","to":"admission.md"},"title":"Resource Admission in the Garden Cluster","prev":false,"next":false},"headers":[],"relativePath":"docs/gardener/extensions/admission/index.md","filePath":"docs/gardener/extensions/admission.md","lastUpdated":null}'),t={name:"docs/gardener/extensions/admission/index.md"};function r(l,s,o,p,d,h){return a(),i("div",null,s[0]||(s[0]=[n(`<h1 id="resource-admission-in-the-garden-cluster" tabindex="-1">Resource Admission in the Garden Cluster <a class="header-anchor" href="#resource-admission-in-the-garden-cluster" aria-label="Permalink to &quot;Resource Admission in the Garden Cluster&quot;">​</a></h1><p>The <code>Shoot</code> resource itself can contain some extension-specific data blobs (see <code>providerConfig</code>):</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">apiVersion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">core.gardener.cloud/v1beta1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">kind</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Shoot</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">metadata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">johndoe-aws</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  namespace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">garden-dev</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">spec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  ...</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  region</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">eu-west-1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  provider</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">aws</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    providerConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      apiVersion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">aws.cloud.gardener.cloud/v1alpha1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      kind</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">InfrastructureConfig</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      networks</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        vpc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># specify either &#39;id&#39; or &#39;cidr&#39;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        # id: vpc-123456</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          cidr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">10.250.0.0/16</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        internal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">10.250.112.0/22</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        public</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">10.250.96.0/22</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        workers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">10.250.0.0/19</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      zones</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">eu-west-1a</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">...</span></span></code></pre></div><p>In the above example, Gardener itself does not understand the AWS-specific provider configuration for the infrastructure. However, if this part of the <code>Shoot</code> resource should be validated, then you should run an AWS-specific component in the garden cluster that registers a webhook. The same is true for values defaulting via <code>MutatingWebhookConfiguration</code>. Similarly to how Gardener is deployed to the garden cluster, these components must be deployed and managed by the Gardener administrator.</p><p>Examples of extensions performing validation:</p><ul><li><a href="documentation/pr-preview/pr-2/docs/extensions/#infrastructure-provider">provider extensions</a> would validate <code>spec.provider.infrastructureConfig</code> and <code>spec.provider.controlPlaneConfig</code> in the <code>Shoot</code> resource and <code>spec.providerConfig</code> in the <code>CloudProfile</code> resource.</li><li><a href="documentation/pr-preview/pr-2/docs/extensions/#network-plugin">networking extensions</a> would validate <code>spec.networking.providerConfig</code> in the <code>Shoot</code> resource.</li></ul><p>As a best practice, the validation should be performed only if there is a change in the <code>spec</code> of the resource. Please find an exemplary implementation in the <a href="https://github.com/gardener/gardener-extension-provider-aws/tree/master/pkg/admission/validator" target="_blank" rel="noreferrer">gardener/gardener-extension-provider-aws</a> repository.</p><h2 id="extensions-gardener-cloud-labeling" tabindex="-1"><code>extensions.gardener.cloud</code> Labeling <a class="header-anchor" href="#extensions-gardener-cloud-labeling" aria-label="Permalink to &quot;\`extensions.gardener.cloud\` Labeling&quot;">​</a></h2><p>When an admission relevant resource (e.g., <code>BackupEntry</code>s, <code>BackupBucket</code>s, <code>CloudProfile</code>s, <code>Seed</code>s, <code>SecretBinding</code>s, and <code>Shoot</code>s) is newly created or updated in the garden cluster, Gardener adds an extension label to it. This label is of the form <code>&lt;extension-type&gt;.extensions.gardener.cloud/&lt;extension-name&gt; : &quot;true&quot;</code>. For example, an extension label for a provider extension type <code>aws</code> looks like <code>provider.extensions.gardener.cloud/aws : &quot;true&quot;</code>. The extensions should add object selectors in their admission webhooks for these labels to filter out the objects they are responsible for. Please see the <a href="https://github.com/gardener/gardener/blob/master/pkg/apis/core/v1beta1/constants/types_constants.go" target="_blank" rel="noreferrer">types_constants.go</a> file for the full list of extension labels.</p>`,9)]))}const g=e(t,[["render",r]]);export{c as __pageData,g as default};
