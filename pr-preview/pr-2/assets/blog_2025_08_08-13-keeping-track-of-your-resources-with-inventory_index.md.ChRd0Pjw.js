import{_ as i,c as a,o as e,a2 as n}from"./chunks/framework.Bfq10Vlj.js";const t="/assets/data-model.BRSbl5i-.svg",h="/assets/collection-flow.Dmr8136S.svg",l="/assets/inventory-sa.DRXxMbor.png",r="/assets/aws-schema.kQHYxg7i.png",p="/assets/gardener-stats.wjlZjWf5.png",k="/assets/aws-leaked-map.BtVCv8Nc.png",o="/assets/worker-metrics.BXiZ3pqP.png",d="/assets/slack-alert.BQUvwQvh.png",c="/assets/lbs-ips.BcG2u5Ra.png",f=JSON.parse('{"title":"Keeping Track of Your Cloud Resources with Gardener Inventory","description":"","frontmatter":{"aliases":["/blog/2025/08/13/getting-started-with-gardener-inventory"],"authors":[{"avatar":"https://avatars.githubusercontent.com/dnaeon","email":"dnaeon@gmail.com","login":"dnaeon","name":"Marin Atanasov Nikolov"}],"github_repo":"https://github.com/gardener/documentation","github_subdir":"website/blog/2025/08","linkTitle":"Keeping Track of Your Cloud Resources with Gardener Inventory","newsSubtitle":"Aug 13, 2025","params":{"github_branch":"master"},"path_base_for_github_subdir":{"from":"content/blog/2025/08/08-13-keeping-track-of-your-resources-with-inventory.md","to":"08-13-keeping-track-of-your-resources-with-inventory.md"},"publishdate":"2025-08-13","title":"Keeping Track of Your Cloud Resources with Gardener Inventory"},"headers":[],"relativePath":"blog/2025/08/08-13-keeping-track-of-your-resources-with-inventory/index.md","filePath":"blog/2025/08/08-13-keeping-track-of-your-resources-with-inventory.md","lastUpdated":null}'),g={name:"blog/2025/08/08-13-keeping-track-of-your-resources-with-inventory/index.md"};function y(F,s,E,u,m,b){return e(),a("div",null,s[0]||(s[0]=[n('<h1 id="keeping-track-of-your-cloud-resources-with-gardener-inventory" tabindex="-1">Keeping Track of Your Cloud Resources with Gardener Inventory <a class="header-anchor" href="#keeping-track-of-your-cloud-resources-with-gardener-inventory" aria-label="Permalink to &quot;Keeping Track of Your Cloud Resources with Gardener Inventory&quot;">​</a></h1><p>Running Kubernetes clusters at scale comes with its own challenges.</p><p>How do you keep track of the resources under your control? How can you tell if a resource has become orphaned and has started adding up to your monthly cloud cost?</p><p>This post introduces <a href="https://github.com/gardener/inventory" target="_blank" rel="noreferrer">gardener/inventory</a> and shows how the Gardener project keeps track of the cloud resources it manages in the various cloud providers such as GCP, AWS, Azure, and OpenStack.</p><p>It will also show how we can identify orphaned resources through a simple, yet effective mechanism, by collecting and reporting from the respective cloud providers.</p><h2 id="what-is-gardener-inventory" tabindex="-1">What is Gardener Inventory? <a class="header-anchor" href="#what-is-gardener-inventory" aria-label="Permalink to &quot;What is Gardener Inventory?&quot;">​</a></h2><p>The Gardener Inventory is a system that collects resources from various data sources and persists them in a database, establishing relationships between the collected resources.</p><p>The collected data can be later analyzed to show the relationship and dependencies between the various resources.</p><p>The diagram below provides a high-level overview of the data model for the Inventory system.</p><p><img src="'+t+'" alt="Inventory Data Model High Level Overview"></p><p>Each Gardener resource tracked by Inventory is mapped to its corresponding hyperscaler resource, e.g., a <code>Machine</code> resource on the Gardener side maps to a virtual machine instance in GCP, AWS, Azure or OpenStack.</p><p>This allows us to ask different questions to the system:</p><ul><li>Do all my hyperscaler virtual machines map to a Gardener Machine?</li><li>Do I have any unknown hyperscaler virtual machines?</li><li>etc.</li></ul><p>For more details about the design, please refer to the <a href="https://github.com/gardener/inventory/blob/main/docs/design.md" target="_blank" rel="noreferrer">Design Goals</a> document.</p><h2 id="how-does-resource-collection-work" tabindex="-1">How does resource collection work? <a class="header-anchor" href="#how-does-resource-collection-work" aria-label="Permalink to &quot;How does resource collection work?&quot;">​</a></h2><p>This diagram shows a high-level overview of the collection mechanism implemented by Inventory.</p><p><img src="'+h+'" alt="Inventory Collection Flow"></p><p>The Inventory <code>scheduler</code> is responsible for enqueuing tasks on regular basis to a message queue. These tasks are then consumed and processed by the Inventory <code>workers</code>. Each task is self-contained and independent from the rest of the tasks in the system.</p><p>With this approach, that means that a single task failure does not affect any of the other tasks in the system. That also means that we can run collection of different resources at the same time (e.g., EC2 instances, VPCs, buckets, etc.) and let the system take care of the automatic retry and recovery for us.</p><p>This is a typical <a href="https://en.wikipedia.org/wiki/Event-driven_architecture" target="_blank" rel="noreferrer">Event-driven architecture</a>.</p><p>Another benefit of this architecture is that we can assign priorities for our tasks, e.g., we may want to prioritize collection of virtual machines over anything else.</p><h2 id="requirements" tabindex="-1">Requirements <a class="header-anchor" href="#requirements" aria-label="Permalink to &quot;Requirements&quot;">​</a></h2><p>In order to build and start using Inventory locally, you would need:</p><ul><li>Go 1.24.x</li><li>Docker</li></ul><p>When running Inventory locally, it is recommended that you use the provided <a href="https://github.com/gardener/inventory/blob/main/docker-compose.yaml" target="_blank" rel="noreferrer">docker-compose.yaml</a> manifest, which will start up all services for you. In order to start the services locally, first clone the <code>gardener/inventory</code> repo and then run the following command:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker-compose-up</span></span></code></pre></div><p>Alternatively, you can build the <code>inventory</code> CLI locally by using the <code>build</code> makefile target:</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">make build</span></span></code></pre></div><p>For running Inventory in a Kubernetes cluster, please refer to the provided <a href="https://github.com/gardener/inventory/tree/main/deployment/kustomize" target="_blank" rel="noreferrer">kustomize manifests</a>.</p><p>When using the kustomize manifests, make sure that you also create a separate <code>config</code> overlay, which will provide your specific configuration for <code>scheduler</code>, <code>worker</code>, <code>database</code>, etc. For more details, please check the <a href="https://github.com/gardener/inventory/tree/main/deployment/kustomize/config" target="_blank" rel="noreferrer">deployment/kustomize/config</a> overlay, which provides an example config file that you can customize.</p><p>When running Inventory in production environments, it is recommended that you deploy Inventory in a Kubernetes cluster and configure <a href="https://en.wikipedia.org/wiki/OpenID" target="_blank" rel="noreferrer">OIDC trust</a> between your Kubernetes workload and the respective hyperscaler. With OIDC federation configured, the Inventory workers will use short-lived credentials, so you don&#39;t need to worry about maintaining any static long-lived credentials.</p><p>For more details on how to setup OIDC trust between your Inventory cluster and the respective hyperscalers, please refer to the following documents:</p><ul><li><a href="https://github.com/gardener/inventory/blob/main/docs/oidc-aws.md" target="_blank" rel="noreferrer">OIDC trust between Inventory and AWS</a></li><li><a href="https://github.com/gardener/inventory/blob/main/docs/oidc-gcp.md" target="_blank" rel="noreferrer">OIDC trust between Inventory and GCP</a></li><li><a href="https://github.com/gardener/inventory/blob/main/docs/oidc-azure.md" target="_blank" rel="noreferrer">OIDC trust between Inventory and Azure</a></li></ul><p>Please make sure that you also check the following documents, which provide additional details on how to get started with the developing Inventory and operating it:</p><ul><li><a href="https://github.com/gardener/inventory/blob/main/docs/development.md" target="_blank" rel="noreferrer">Inventory Development Guide</a></li><li><a href="https://github.com/gardener/inventory/blob/main/docs/ops-guide.md" target="_blank" rel="noreferrer">Inventory Operations Guide</a></li></ul><h2 id="configuration" tabindex="-1">Configuration <a class="header-anchor" href="#configuration" aria-label="Permalink to &quot;Configuration&quot;">​</a></h2><p>Inventory is flexible enough and you can configure it to collect from specific datasources only. For example, if you are running your workloads in AWS only, then you would configure Inventory to collect from AWS, and leave the rest of the datasources deactivated.</p><p>Before we start collecting and mapping resources with Inventory, we would need a Gardener Project and a hyperscaler account from which resources will be collected.</p><p>While Gardener resources collection can be deactivated as well, it is not recommended to do so, since we want to map hyperscaler resources with Gardener resources. This way, Inventory can map resources together and detect when orphan resources (e.g., virtual machines, disks, etc.) exist in the hyperscaler.</p><p>If your source-of-truth system is different from Gardener, then Inventory can be extended to support other data sources, which provide additional resources.</p><p>An example of such an extension is the <a href="https://github.com/gardener/inventory-extension-odg" target="_blank" rel="noreferrer">gardener/inventory-extension-odg</a>, which plugs into an existing Inventory deployment in order to integrate with <a href="https://github.com/open-component-model" target="_blank" rel="noreferrer">Open Component Model</a> for reporting compliance issues caused by leaked resources.</p><p>It is also recommended that you check the <a href="https://github.com/gardener/inventory/blob/main/examples/config.yaml" target="_blank" rel="noreferrer">example config file</a>, which is well documented and provides details about each config section. In this post we will focus on specific config sections only, but please make sure to refer to the sample config for more details on each setting.</p><p>In order to keep things simple and easier to follow, we will be configuring Inventory to collect from Gardener and AWS only. For configuring Inventory with other datasources (e.g., GCP, Azure, OpenStack, etc.), please refer to the documentation provided in the <a href="https://github.com/gardener/inventory" target="_blank" rel="noreferrer">gardener/inventory</a> repository.</p><div class="note custom-block github-alert"><p class="custom-block-title">NOTE</p><p>When configuring Inventory for collection against remote systems, bear in mind that Inventory itself requires read-only permissions. Keep that in mind when configuring your RBAC roles for Inventory in the respective system and grant it read-only access.</p></div><p>First, we will configure Inventory and grant it access to our Gardener Project. In order to do that, navigate to the Gardener Dashboard, select your project and go to the <code>Members</code> section. Then add a new service account.</p><p><img src="'+l+`" alt="Inventory Service Account"></p><p>After the service account has been created, you should download its <code>kubeconfig</code>, which we will configure in the next step. This snippet represents the <code>gardener</code> config section of our configuration file.</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Gardener specific configuration</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">gardener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  is_enabled</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Specifies the endpoint of the Gardener APIs.</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  endpoint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">https://api.dev.gardener.cloud.sap</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # User-Agent to set for the API clients</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  user_agent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">gardener-inventory/0.1.0</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Authentication mechanism to use when communicating with the Gardener APIs.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Supported mechanisms are \`in_cluster&#39;, \`token_path&#39; and \`kubeconfig&#39;.</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  authentication</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">kubeconfig</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Path to kubeconfig file to use. Should be used with \`kubeconfig&#39;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # authentication only.</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  kubeconfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/path/to/inventory-sa-kubeconfig.yaml</span></span></code></pre></div><div class="note custom-block github-alert"><p class="custom-block-title">NOTE</p><p>Other authentication mechanisms exist as well. For example, instead of using a static kubeconfig when accessing your Gardener Project, you could configure Inventory to leverage OIDC trust instead and use a token signed by a trusted IdP. For more details and examples, please refer to the examples/config.yaml file.</p></div><p>Next, we will configure Inventory for collecting resources from AWS. Here is a sample configuration file for AWS, which configures the <code>worker</code> to use the shared AWS credentials file (<code>~/.aws/credentials</code>) when authenticating against the AWS APIs.</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># AWS specific configuration</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">aws</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Setting \`is_enabled&#39; to false would not create API clients for AWS, and as a</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # result Inventory will not process any of the AWS collection tasks.</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  is_enabled</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  region</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">eu-central-1</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Frankfurt</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  default_region</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">eu-central-1</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Frankfurt</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  app_id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">gardener-inventory</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Optional application specific identifier</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # This section provides configuration specific to each AWS service and which</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # named credentials are used for each service. This allows Inventory to</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # connect to multiple AWS accounts based on the named credentials which are</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # used. Inventory will connect to all configured named credentials (accounts)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # during collection from the respective AWS service.</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  services</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    ec2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      use_credentials</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">my-aws-account</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    elb</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      use_credentials</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">my-aws-account</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    elbv2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      use_credentials</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">my-aws-account</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    s3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      use_credentials</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">my-aws-account</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # The \`credentials&#39; section provides named credentials, which are used by the</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # various AWS services. The currently supported token retrievers are \`none&#39;,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # \`kube_sa_token&#39;, and \`token_file&#39;. See docs/oidc-aws.md for more details.</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  credentials</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    my-aws-account</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      # When using \`none&#39; as the token retriever, only the shared AWS</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      # credentials file (~/.aws/credentials) is used.</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      token_retriever</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">none</span></span></code></pre></div><div class="note custom-block github-alert"><p class="custom-block-title">NOTE</p><p>The example AWS config file above uses a named credential, which authenticates against AWS using the shared credentials file ~/.aws/credentials. This approach is good enough for local testing during development, but when running in production environments it is recommended that you leverage OIDC trust and use short-lived access tokens instead. Make sure that you check the examples/config.yaml file for additional examples on how to configure OIDC trust between an Inventory cluster and AWS.</p></div><p>Collection may be configured for multiple AWS accounts as well. In case you need to collect from multiple AWS accounts, make sure to configure them in the <code>aws.credentials</code> section, and enable these accounts in the respective <code>aws.services</code> section.</p><p>If you are using the provided <a href="https://github.com/gardener/inventory/blob/main/docker-compose.yaml" target="_blank" rel="noreferrer">docker-compose.yaml</a> file for local development, then all required services will be started up for you. This includes the PostgreSQL database, Valkey, <code>scheduler</code>, <code>worker</code>, etc. In case you need to connect Inventory to an external PostgreSQL database or a Redis/Valkey instance, then make sure to configure them in their respective configuration sections. This would be the <code>database</code> and <code>redis</code> config sections.</p><p>Also, make sure that you check the <a href="https://github.com/gardener/inventory/blob/main/docs/ops-guide.md" target="_blank" rel="noreferrer">Inventory Operations Guide</a>, which provides additional details on how to configure Inventory to use multiple config files, use environment variables, and how to interface with the <code>inventory</code> CLI.</p><h2 id="getting-started" tabindex="-1">Getting Started <a class="header-anchor" href="#getting-started" aria-label="Permalink to &quot;Getting Started&quot;">​</a></h2><p>Before we start collecting data, we need to initialize the database. The commands below assume that you already have everything configured and your config file is exposed via the <code>INVENTORY_CONFIG</code> environment variable.</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> INVENTORY_CONFIG</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/path/to/inventory/config.yaml</span></span></code></pre></div><p>Initialize and migrate the database.</p><div class="note custom-block github-alert"><p class="custom-block-title">NOTE</p><p>Database initialization and migration is handled automatically by the provided Docker and Kubernetes manifests. You need to run these commands only if you are running a local environment of Inventory.</p></div><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> inventory</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> db</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> inventory</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> db</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> migrate</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">database</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> migrated</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> group</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> #1 (200 migrations (20240522121536 ... 20250715110847))</span></span></code></pre></div><p>Check the status of the database.</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> inventory</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> db</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> status</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pending</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> migration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">s</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">database</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> version:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> group</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> #1 (200 migrations (20240522121536 ... 20250715110847))</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">database</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> up-to-date</span></span></code></pre></div><p>We can now start up the <code>worker</code>. In order to start the <code>worker</code>, run the following command.</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> inventory</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> worker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span></span></code></pre></div><p>You should see a similar output showing the worker being initialized and ready to process tasks.</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">time</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">2025-08-08T13:20:50.675+03:00</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> level</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">INFO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> msg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;configuring Gardener API client&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> authentication</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">kubeconfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> kubeconfig</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/path/to/inventory-sa-kubeconfig.yaml</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">time</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">2025-08-08T13:20:50.675+03:00</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> level</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">INFO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> msg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;configured Gardener API client&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> host</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">https://api.dev.gardener.cloud.sap</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">time</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">2025-08-08T13:20:50.675+03:00</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> level</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">INFO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> msg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;configuring db client&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">time</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">2025-08-08T13:20:50.675+03:00</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> level</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">INFO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> msg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;configuring asynq client&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">time</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">2025-08-08T13:20:50.675+03:00</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> level</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">INFO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> msg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;configuring asynq inspector&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">time</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">2025-08-08T13:20:50.675+03:00</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> level</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">WARN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> msg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Vault is not enabled, will not create API clients&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">time</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">2025-08-08T13:20:50.675+03:00</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> level</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">WARN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> msg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;GCP is not enabled, will not create API clients&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">time</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">2025-08-08T13:20:50.675+03:00</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> level</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">WARN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> msg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Azure is not enabled, will not create API clients&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">time</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">2025-08-08T13:20:50.675+03:00</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> level</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">WARN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> msg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;OpenStack is not enabled, will not create API clients&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">time</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">2025-08-08T13:20:50.675+03:00</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> level</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">INFO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> msg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;registered task&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">aux:task:delete-archived-tasks</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">time</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">2025-08-08T13:20:50.675+03:00</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> level</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">INFO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> msg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;registered task&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">gcp:task:collect-all</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">time</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">2025-08-08T13:20:50.675+03:00</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> level</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">INFO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> msg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;registered task&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">aws:task:collect-azs</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">time</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">2025-08-08T13:20:50.675+03:00</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> level</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">INFO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> msg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;registered task&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">aws:task:collect-instances</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">...</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">...</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">time</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">2025-08-08T13:20:50.675+03:00</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> level</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">INFO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> msg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;registered task&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">g:task:collect-aws-machine-images</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">time</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">2025-08-08T13:20:50.675+03:00</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> level</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">INFO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> msg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;registered task&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">gcp:task:collect-vpcs</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">time</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">2025-08-08T13:20:50.675+03:00</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> level</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">INFO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> msg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;worker concurrency&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> level</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">100</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">time</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">2025-08-08T13:20:50.675+03:00</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> level</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">INFO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> msg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;queue priority&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> strict</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">time</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">2025-08-08T13:20:50.675+03:00</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> level</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">INFO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> msg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;queue configuration&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> priority</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">asynq:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pid=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">9332</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 2025/08/08</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 10:20:50.675999</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> INFO:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Starting</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> processing</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">asynq:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pid=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">9332</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 2025/08/08</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 10:20:50.676050</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> INFO:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Send</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> signal</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> TSTP</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stop</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> processing</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> new</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tasks</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">asynq:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pid=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">9332</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 2025/08/08</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 10:20:50.676052</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> INFO:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Send</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> signal</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> TERM</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> or</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> INT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> terminate</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> process</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">time</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">2025-08-08T13:20:50.676+03:00</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> level</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">INFO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> msg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;starting metrics server&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> address</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:6080</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> path</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/metrics</span></span></code></pre></div><p>We can list the currently running workers by using the <code>worker list</code> sub-command, e.g.:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> inventory</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> worker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> list</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HOST</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PID</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> CONCURRENCY</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> STATUS</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PROCESSING</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> UPTIME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> QUEUES</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">────────────┼──────┼─────────────┼────────┼────────────┼──────────────┼───────────</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> some.node</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  │</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 9332</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> │</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">         │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> active</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> │</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 4m10.282643s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> default:1</span></span></code></pre></div><p>We can submit tasks to the Inventory workers by using the <code>inventory task submit</code> sub-command. Usually, tasks are enqueued by the <code>scheduler</code> on regular basis, so that collection happens periodically, but here we will show how to trigger an ad-hoc task execution.</p><p>Make sure that you also check the <code>examples/config.yaml</code> file which provides details about the existing tasks and the payloads they expect. The following specifies a task payload, which will collect Gardener resources from a specific project only.</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">---</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">project_name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">my-project-name</span></span></code></pre></div><p>In order to run an ad-hoc task for projects collection, we can run the following command.</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> inventory</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> task</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> submit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --task</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> g:task:collect-projects</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --payload-file</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /path/to/payload.yaml</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">default/0afa4bc2-d8f1-48d3-b7a9-351fc627b168</span></span></code></pre></div><p>Check the <code>worker</code> logs and you should see the project being collected, e.g.:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">time</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">2025-08-08T13:41:20.650+03:00</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> level</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">INFO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> msg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;received task&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> task_id</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">0afa4bc2-d8f1-48d3-b7a9-351fc627b168</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> task_queue</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> task_name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">g:task:collect-projects</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">time</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">2025-08-08T13:41:20.650+03:00</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> level</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">INFO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> msg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;collecting Gardener project&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> task_id</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">0afa4bc2-d8f1-48d3-b7a9-351fc627b168</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> task_queue</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> task_name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">g:task:collect-projects</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> project</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">my-project-name</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">time</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">2025-08-08T13:41:20.858+03:00</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> level</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">INFO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> msg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;populated gardener projects&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> task_id</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">0afa4bc2-d8f1-48d3-b7a9-351fc627b168</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> task_queue</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> task_name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">g:task:collect-projects</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> count</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">time</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">2025-08-08T13:41:20.864+03:00</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> level</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">INFO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> msg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;populated gardener project members&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> task_id</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">0afa4bc2-d8f1-48d3-b7a9-351fc627b168</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> task_queue</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> task_name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">g:task:collect-projects</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> count</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">2</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">time</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">2025-08-08T13:41:20.864+03:00</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> level</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">INFO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> msg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;task finished&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> task_id</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">0afa4bc2-d8f1-48d3-b7a9-351fc627b168</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> task_queue</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> task_name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">g:task:collect-projects</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> duration</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">213.589417ms</span></span></code></pre></div><p>In order to collect all shoots from all known projects, we can invoke the <code>g:task:collect-shoots</code> task, e.g.:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> inventory</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> task</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> submit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --task</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> g:task:collect-shoots</span></span></code></pre></div><p>Notice that we haven&#39;t specified any payload for this task. In this case, Inventory uses the already known Gardener projects and internally enqueues tasks for each of them.</p><p>This mechanism allows Inventory to perform dynamic task enqueuing based on already collected data, such as the project we&#39;ve collected in the previous step. In other words, already known top-level resources allow dynamic collection of other sub-resources, as is the case with the <code>shoots</code> from this example.</p><p>The same mechanism is used for other data sources. For example, collecting AWS regions enables the sub-sequent collection of all VPCs from these regions, which in turn enable collection of all EC2 instances, subnets, etc. from the discovered VPCs.</p><div class="note custom-block github-alert"><p class="custom-block-title">NOTE</p><p>The <code>inventory task submit</code> command is usually used for running ad-hoc tasks. In production environments, these tasks and their respective payloads will be enqueued by the Inventory Scheduler instead.</p></div><h2 id="monitoring-and-reporting" tabindex="-1">Monitoring and Reporting <a class="header-anchor" href="#monitoring-and-reporting" aria-label="Permalink to &quot;Monitoring and Reporting&quot;">​</a></h2><p>Querying collected data may be done either via SQL queries against the database or via the <code>inventory model query</code> sub-command.</p><p>This example shows how to generate a simple report of the collected AWS instances using a <a href="https://pkg.go.dev/text/template" target="_blank" rel="noreferrer">text/template</a> provided to the <code>inventory</code> CLI.</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> inventory</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> model</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> query</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    --model</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> aws:model:instance</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    --template</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;{{ range . }}{{ printf &quot;%s is %s\\n&quot; .Name .State}}{{end}}&#39;</span></span></code></pre></div><p>Example output:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">shoot--foo--worker-a-z1-996c4-rbwtz</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> running</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">shoot--bar--worker-hln3f-z2-6d5fb-mxv6d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> running</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">shoot--baz--worker-qlbgk-z1-b67b7-t56wt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> terminated</span></span></code></pre></div><p>The <code>inventory model query</code> command also understands relationships between resources, which allows us to generate more complex reports by loading resources, as well as any related to them resources.</p><p>This command, for example, can be used to generate a report of the collected Gardener <code>Project</code> resources, but also loads the <code>Shoot</code> and <code>Member</code> relationships, allowing us to report on related data.</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">inventory</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> model</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> query</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    --model</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> g:model:project</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    --relation</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Shoots</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    --relation</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Members</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    --template-file</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gardener-projects-report.tmpl</span></span></code></pre></div><p>Additional examples on how to query the data in Inventory by using SQL queries or the CLI can be found in the following documents:</p><ul><li><a href="https://github.com/gardener/inventory/blob/main/docs/db-queries.md" target="_blank" rel="noreferrer">Database Queries</a></li><li><a href="https://github.com/gardener/inventory/blob/main/docs/ops-guide.md#querying-models" target="_blank" rel="noreferrer">Querying Models</a></li></ul><p>The provided <a href="https://github.com/gardener/inventory/blob/main/docker-compose.yaml" target="_blank" rel="noreferrer">docker-compose.yaml</a> also comes with a <a href="https://www.pgadmin.org/" target="_blank" rel="noreferrer">pgadmin</a> service, which you can use to query and inspect the schema, which is handy when you need to familiarize yourself with the existing schema.</p><p><img src="`+r+'" alt="Inventory AWS Schema"></p><p>In order to get better insights of the data collected by Inventory, you can connect your Inventory database with <a href="https://www.metabase.com/" target="_blank" rel="noreferrer">Metabase</a>, <a href="https://grafana.com/" target="_blank" rel="noreferrer">Grafana</a> or <a href="https://superset.apache.org/" target="_blank" rel="noreferrer">Apache Superset</a>.</p><p>This would make it possible to create nice reports and provide various dashboards for your users, if needed.</p><p>Additionally, you may want to connect the Inventory database with your <a href="https://en.wikipedia.org/wiki/IT_service_management" target="_blank" rel="noreferrer">ITSM system</a>. That way Inventory can be used to enable various IT processes, if needed.</p><p>Besides the data collected from various data sources, Inventory exposes metrics about its inner workings, which can be scraped, for example, by <a href="https://prometheus.io/" target="_blank" rel="noreferrer">Prometheus</a> and can also be used for alerting.</p><p>The following screenshot shows a summary of some of the data collected from a Gardener landscape.</p><p><img src="'+p+'" alt="Gardener Resources Summary"></p><p>This screenshot here displays a map of resources identified by Inventory as being orphaned.</p><p><img src="'+k+'" alt="AWS leaked resources map"></p><p>And here we can see some of the <code>worker</code> metrics, showing us information about the AWS-related tasks.</p><p><img src="'+o+'" alt="Worker Metrics"></p><p>Hooking up Inventory with your alerting system allows for early notification of orphan resources as soon as they are being discovered. Here we can see Inventory posting an alert about orphan EC2 instances in Slack.</p><p><img src="'+d+'" alt="Slack Alert"></p><p>Ever since our team started using Inventory to track our hyperscaler resources, we have identified a significant number of virtual machines that have long been forgotten and unused, a.k.a orphaned VMs. Besides virtual machines, we&#39;ve discovered a big number of unaccounted for and no longer in use disks, so we&#39;ve cleaned those up and saved some space.</p><p>Reserved, but unused public IP addresses are also part of resources which we are actively tracking, and we&#39;ve discovered more than a hundred public IPs in one of our environments, which we&#39;ve cleaned up well.</p><p><img src="'+c+'" alt="Load Balancers and Public IPs"></p><p>Inventory helped with keeping our garden clean and cut some cloud costs.</p><h2 id="references" tabindex="-1">References <a class="header-anchor" href="#references" aria-label="Permalink to &quot;References&quot;">​</a></h2><p>Please refer to the following documents for more information about Inventory, how to use it and start tracking your cloud resources with it.</p><ul><li><a href="https://github.com/gardener/inventory" target="_blank" rel="noreferrer">gardener/inventory repository</a></li><li><a href="https://github.com/gardener/inventory/blob/main/docs/oidc-aws.md" target="_blank" rel="noreferrer">OIDC trust between Inventory and AWS</a></li><li><a href="https://github.com/gardener/inventory/blob/main/docs/oidc-gcp.md" target="_blank" rel="noreferrer">OIDC trust between Inventory and GCP</a></li><li><a href="https://github.com/gardener/inventory/blob/main/docs/oidc-azure.md" target="_blank" rel="noreferrer">OIDC trust between Inventory and Azure</a></li><li><a href="https://github.com/gardener/inventory/blob/main/docs/development.md" target="_blank" rel="noreferrer">Inventory Development Guide</a></li><li><a href="https://github.com/gardener/inventory/blob/main/docs/ops-guide.md" target="_blank" rel="noreferrer">Inventory Operations Guide</a></li><li><a href="https://github.com/gardener/inventory/blob/main/docs/db-queries.md" target="_blank" rel="noreferrer">Inventory Database Queries</a></li><li><a href="https://github.com/gardener/inventory/blob/main/deployment" target="_blank" rel="noreferrer">Inventory Kubernetes manifests</a></li></ul>',114)]))}const C=i(g,[["render",y]]);export{f as __pageData,C as default};
