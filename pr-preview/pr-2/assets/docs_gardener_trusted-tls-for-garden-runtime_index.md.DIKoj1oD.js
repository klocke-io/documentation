import{_ as s,c as a,o as i,a2 as t}from"./chunks/framework.Bfq10Vlj.js";const k=JSON.parse('{"title":"Trusted Tls For Garden Runtime","description":"","frontmatter":{"github_repo":"https://github.com/gardener/gardener","github_subdir":"docs/operations","params":{"github_branch":"master"},"path_base_for_github_subdir":{"from":"content/docs/gardener/trusted-tls-for-garden-runtime.md","to":"trusted-tls-for-garden-runtime.md"},"persona":"Operators","title":"Trusted Tls For Garden Runtime","prev":false,"next":false},"headers":[],"relativePath":"docs/gardener/trusted-tls-for-garden-runtime/index.md","filePath":"docs/gardener/trusted-tls-for-garden-runtime.md","lastUpdated":null}'),r={name:"docs/gardener/trusted-tls-for-garden-runtime/index.md"};function n(d,e,l,p,c,h){return i(),a("div",null,e[0]||(e[0]=[t(`<h1 id="trusted-tls-certificate-for-garden-runtime-cluster" tabindex="-1">Trusted TLS Certificate for Garden Runtime Cluster <a class="header-anchor" href="#trusted-tls-certificate-for-garden-runtime-cluster" aria-label="Permalink to &quot;Trusted TLS Certificate for Garden Runtime Cluster&quot;">​</a></h1><p>In Garden Runtime Cluster components are exposed via <code>Ingress</code> resources, which make them addressable under the HTTPS protocol.</p><p>Examples:</p><ul><li>Plutono</li></ul><p>Gardener generates the backing TLS certificates, which are signed by the garden runtime cluster&#39;s CA by default (self-signed).</p><p>Unlike with a self-contained Kubeconfig file, common internet browsers or operating systems don&#39;t trust a garden runtime&#39;s cluster CA and adding it as a trusted root is often undesired in enterprise environments.</p><p>Therefore, Gardener operators can predefine a trusted wildcard certificate under which the mentioned endpoints will be served instead.</p><h2 id="register-a-trusted-wildcard-certificate" tabindex="-1">Register a trusted wildcard certificate <a class="header-anchor" href="#register-a-trusted-wildcard-certificate" aria-label="Permalink to &quot;Register a trusted wildcard certificate&quot;">​</a></h2><p>Since Garden Runtime Cluster components are published under the ingress domain (<code>operator.gardener.cloud/v1alpha1.Garden.spec.runtimeCluster.ingress.domains</code>) a wildcard certificate is required.</p><p>For example:</p><ul><li>Garden Runtime cluster ingress domain: <code>dev.my-garden.example.com</code></li><li><code>CN</code> or <code>SAN</code> for a certificate: <code>*.dev.my-garden.example.com</code></li></ul><p>It must be deployed as part of your landscape setup as a Kubernetes <code>Secret</code> inside the <code>garden</code> namespace of the garden runtime cluster.</p><p>Please ensure that the secret has the <code>gardener.cloud/role</code> label shown below:</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">apiVersion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">v1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  ca.crt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">base64-encoded-ca.crt</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  tls.crt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">base64-encoded-tls.crt</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  tls.key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">base64-encoded-tls.key</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">kind</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Secret</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">metadata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  labels</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    gardener.cloud/role</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">garden-cert</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">garden-ingress-certificate</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  namespace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">garden</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Opaque</span></span></code></pre></div><p>In addition to the configured ingress domains, this wildcard certificate is considered for SNI domains (<code>operator.gardener.cloud/v1alpha1.Garden.spec.virtualCluster.kubernetes.kubeAPIServer.sni.domainPatterns</code>) if <code>secretName</code> is unspecified.</p><h2 id="best-practice" tabindex="-1">Best Practice <a class="header-anchor" href="#best-practice" aria-label="Permalink to &quot;Best Practice&quot;">​</a></h2><p>While it is possible to create the wildcard certificate manually and deploy it to the cluster, it is recommended to let certificate management components (e.g. <a href="https://github.com/gardener/cert-management/" target="_blank" rel="noreferrer">gardener/cert-management</a>) do this job.</p>`,17)]))}const u=s(r,[["render",n]]);export{k as __pageData,u as default};
