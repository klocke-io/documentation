import{_ as t,c as r,o as a,a2 as i}from"./chunks/framework.B8WFj13S.js";const p=JSON.parse('{"title":"Raising A Pr","description":"","frontmatter":{"github_repo":"https://github.com/gardener/etcd-druid","github_subdir":"docs/development","params":{"github_branch":"master"},"path_base_for_github_subdir":{"from":"content/docs/other-components/etcd-druid/raising-a-pr.md","to":"raising-a-pr.md"},"persona":"Developers","title":"Raising A Pr","prev":false,"next":false},"headers":[],"relativePath":"docs/other-components/etcd-druid/raising-a-pr/index.md","filePath":"docs/other-components/etcd-druid/raising-a-pr.md","lastUpdated":null}'),o={name:"docs/other-components/etcd-druid/raising-a-pr/index.md"};function n(s,e,l,d,c,u){return a(),r("div",null,e[0]||(e[0]=[i('<h1 id="raising-a-pull-request" tabindex="-1">Raising a Pull Request <a class="header-anchor" href="#raising-a-pull-request" aria-label="Permalink to &quot;Raising a Pull Request&quot;">​</a></h1><p>We welcome active contributions from the community. This document details out the things-to-be-done in order for us to consider a PR for review. Contributors should follow the guidelines mentioned in this document to minimize the time it takes to get the PR reviewed.</p><h2 id="_00-prerequisites" tabindex="-1">00-Prerequisites <a class="header-anchor" href="#_00-prerequisites" aria-label="Permalink to &quot;00-Prerequisites&quot;">​</a></h2><p>In order to make code contributions you must setup your development environment. Follow the <a href="/documentation/pr-preview/pr-2/docs/other-components/etcd-druid/prepare-dev-environment/">Prepare Dev Environment Guide</a> for detailed instructions.</p><h2 id="_01-raise-an-issue" tabindex="-1">01-Raise an Issue <a class="header-anchor" href="#_01-raise-an-issue" aria-label="Permalink to &quot;01-Raise an Issue&quot;">​</a></h2><p>For every pull-request, it is <em><strong>mandatory</strong></em> to raise an <a href="https://github.com/gardener/etcd-druid/issues" target="_blank" rel="noreferrer">Issue</a> which should describe the problem in detail. We have created a few categories, each having its own dedicated <a href="https://github.com/gardener/etcd-druid/tree/master/.github/ISSUE_TEMPLATE" target="_blank" rel="noreferrer">template</a>.</p><h2 id="_03-prepare-code-changes" tabindex="-1">03-Prepare Code Changes <a class="header-anchor" href="#_03-prepare-code-changes" aria-label="Permalink to &quot;03-Prepare Code Changes&quot;">​</a></h2><ul><li><p>It is <em><strong>not</strong></em> recommended to create a branch on the main repository for raising pull-requests. Instead you must fork the <code>etcd-druid</code> <a href="https://github.com/gardener/etcd-druid" target="_blank" rel="noreferrer">repository</a> and create a branch in the fork. You can follow the <a href="https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/working-with-forks/fork-a-repo" target="_blank" rel="noreferrer">detailed instructions</a> on how to fork a repository and set it up for contributions.</p></li><li><p>Ensure that you follow the <a href="https://google.github.io/styleguide/go/decisions" target="_blank" rel="noreferrer">coding guidelines</a> while introducing new code.</p></li><li><p>If you are making changes to the API then please read <a href="/documentation/pr-preview/pr-2/docs/other-components/etcd-druid/changing-api/">Changing-API documentation</a>.</p></li><li><p>If you are introducing new go mod dependencies then please read <a href="/documentation/pr-preview/pr-2/docs/other-components/etcd-druid/dependency-management/">Dependency Management documentation</a>.</p></li><li><p>If you are introducing a new <code>Etcd</code> cluster component then please read <a href="/documentation/pr-preview/pr-2/docs/other-components/etcd-druid/add-new-etcd-cluster-component/">Add new Cluster Component documentation</a>.</p></li><li><p>For guidance on testing, follow the detailed instructions <a href="/documentation/pr-preview/pr-2/docs/other-components/etcd-druid/testing/">here</a>.</p></li><li><p>Before you submit your PR, please ensure that the following is done:</p><ul><li><p>Run <code>make check</code> which will do the following:</p><ul><li>Runs <code>make format</code> - this target will ensure a common formatting of the code and ordering of imports across all source files.</li><li>Runs <code>make manifests</code> - this target will re-generate manifests if there are any changes in the API.</li><li>Only when the above targets have run without errorrs, then <code>make check</code> will be run linters against the code. The rules for the linter are configured <a href="https://github.com/gardener/etcd-druid/blob/3383e0219a6c21c6ef1d5610db964cc3524807c8/.golangci.yaml" target="_blank" rel="noreferrer">here</a>.</li></ul></li><li><p>Ensure that all the tests pass by running the following <code>make</code> targets:</p><ul><li><code>make test-unit</code> - this target will run all unit tests.</li><li><code>make test-integration</code> - this target will run all integration tests (controller level tests) using <code>envtest</code> framework.</li><li><code>make ci-e2e-kind</code> or any of its variants - these targets will run etcd-druid e2e tests.</li></ul><p>!!! warning Please ensure that after introduction of new code the code coverage does not reduce. An increase in code coverage is always welcome.</p></li></ul></li><li><p>If you add new features, make sure that you create relevant documentation under <code>/docs</code>.</p></li></ul><h2 id="_04-raise-a-pull-request" tabindex="-1">04-Raise a pull request <a class="header-anchor" href="#_04-raise-a-pull-request" aria-label="Permalink to &quot;04-Raise a pull request&quot;">​</a></h2><ul><li>Create <em>Work In Progress [WIP]</em> pull requests only if you need a clarification or an explicit review before you can continue your work item.</li><li>Ensure that you have rebased your fork&#39;s development branch with <code>upstream</code> main/master branch.</li><li>Squash all commits into a minimal number of commits.</li><li>Fill in the PR template with appropriate details and provide the link to the <code>Issue</code> for which a PR has been raised.</li><li>If your patch is not getting reviewed, or you need a specific person to review it, you can @-reply a reviewer asking for a review in the pull request or a comment.</li></ul><h2 id="_05-post-review" tabindex="-1">05-Post review <a class="header-anchor" href="#_05-post-review" aria-label="Permalink to &quot;05-Post review&quot;">​</a></h2><ul><li>If a reviewer requires you to change your commit(s), please test the changes again.</li><li>Amend the affected commit(s) and force push onto your branch.</li><li>Set respective comments in your GitHub review as resolved.</li><li>Create a general PR comment to notify the reviewers that your amendments are ready for another round of review.</li></ul><h2 id="_06-merging-a-pull-request" tabindex="-1">06-Merging a pull request <a class="header-anchor" href="#_06-merging-a-pull-request" aria-label="Permalink to &quot;06-Merging a pull request&quot;">​</a></h2><ul><li>Merge can only be done if the PR has approvals from atleast 2 reviewers.</li><li>Add an appropriate release note detailing what is introduced as part of this PR.</li><li>Before merging the PR, ensure that you squash and then merge.</li></ul>',14)]))}const m=t(o,[["render",n]]);export{p as __pageData,m as default};
