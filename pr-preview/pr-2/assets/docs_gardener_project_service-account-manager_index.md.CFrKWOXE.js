import{_ as a,c as s,o as t,a2 as i}from"./chunks/framework.B8WFj13S.js";const u=JSON.parse('{"title":"Service Account Manager","description":"The role that allows a user to manage ServiceAccounts in the project namespace","frontmatter":{"aliases":["/docs/gardener/service-account-manager/"],"description":"The role that allows a user to manage ServiceAccounts in the project namespace","github_repo":"https://github.com/gardener/gardener","github_subdir":"docs/usage/project","params":{"github_branch":"master"},"path_base_for_github_subdir":{"from":"content/docs/gardener/project/service-account-manager.md","to":"service-account-manager.md"},"persona":"Users","title":"Service Account Manager","prev":false,"next":false},"headers":[],"relativePath":"docs/gardener/project/service-account-manager/index.md","filePath":"docs/gardener/project/service-account-manager.md","lastUpdated":null}'),n={name:"docs/gardener/project/service-account-manager/index.md"};function o(c,e,r,l,h,d){return t(),s("div",null,e[0]||(e[0]=[i(`<h1 id="service-account-manager" tabindex="-1">Service Account Manager <a class="header-anchor" href="#service-account-manager" aria-label="Permalink to &quot;Service Account Manager&quot;">​</a></h1><h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">​</a></h2><p>With Gardener <code>v1.47</code>, a new role called <code>serviceaccountmanager</code> was introduced. This role allows to fully manage <code>ServiceAccount</code>&#39;s in the project namespace and request tokens for them. This is the preferred way of managing the access to a project namespace, as it aims to replace the usage of the default <code>ServiceAccount</code> secrets that will no longer be generated automatically.</p><h2 id="actions" tabindex="-1">Actions <a class="header-anchor" href="#actions" aria-label="Permalink to &quot;Actions&quot;">​</a></h2><p>Once assigned the <code>serviceaccountmanager</code> role, a user can create/update/delete <code>ServiceAccount</code>s in the project namespace.</p><h3 id="create-a-service-account" tabindex="-1">Create a Service Account <a class="header-anchor" href="#create-a-service-account" aria-label="Permalink to &quot;Create a Service Account&quot;">​</a></h3><p>In order to create a <code>ServiceAccount</code> named &quot;robot-user&quot;, run the following <code>kubectl</code> command:</p><div class="language-code vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">code</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> project-abc</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sa</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> robot-user</span></span></code></pre></div><h3 id="request-a-token-for-a-service-account" tabindex="-1">Request a Token for a Service Account <a class="header-anchor" href="#request-a-token-for-a-service-account" aria-label="Permalink to &quot;Request a Token for a Service Account&quot;">​</a></h3><p>A token for the &quot;robot-user&quot; <code>ServiceAccount</code> can be requested via the <a href="https://kubernetes.io/docs/reference/kubernetes-api/authentication-resources/token-request-v1/" target="_blank" rel="noreferrer">TokenRequest API</a> in several ways:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> project-abc</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> token</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> robot-user</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --duration=3600s</span></span></code></pre></div><ul><li>directly calling the Kubernetes HTTP API</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -X</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> POST</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://api.gardener/api/v1/namespaces/project-abc/serviceaccounts/robot-user/token</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    -H</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Authorization: Bearer &lt;auth-token&gt;&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    -H</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Content-Type: application/json&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;{</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;apiVersion&quot;: &quot;authentication.k8s.io/v1&quot;,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;kind&quot;: &quot;TokenRequest&quot;,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;spec&quot;: {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          &quot;expirationSeconds&quot;: 3600</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        }</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      }&#39;</span></span></code></pre></div><p>Mind that the returned token is not stored within the Kubernetes cluster, will be valid for <code>3600</code> seconds, and will be invalidated if the &quot;robot-user&quot; <code>ServiceAccount</code> is deleted. Although <code>expirationSeconds</code> can be modified depending on the needs, the returned token&#39;s validity will not exceed the configured <code>service-account-max-token-expiration</code> duration for the garden cluster. It is advised that the actual <code>expirationTimestamp</code> is verified so that expectations are met. This can be done by asserting the <code>expirationTimestamp</code> in the <code>TokenRequestStatus</code> or the <code>exp</code> claim in the token itself.</p><h3 id="delete-a-service-account" tabindex="-1">Delete a Service Account <a class="header-anchor" href="#delete-a-service-account" aria-label="Permalink to &quot;Delete a Service Account&quot;">​</a></h3><p>In order to delete the <code>ServiceAccount</code> named &quot;robot-user&quot;, run the following <code>kubectl</code> command:</p><div class="language-code vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">code</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> project-abc</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> delete</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sa</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> robot-user</span></span></code></pre></div><p>This will invalidate all existing tokens for the &quot;robot-user&quot; <code>ServiceAccount</code>.</p>`,18)]))}const k=a(n,[["render",o]]);export{u as __pageData,k as default};
