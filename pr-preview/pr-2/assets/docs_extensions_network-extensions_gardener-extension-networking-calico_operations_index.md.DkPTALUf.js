import{_ as i,c as n,o as a,a2 as t}from"./chunks/framework.B8WFj13S.js";const g=JSON.parse('{"title":"Operations","description":"","frontmatter":{"github_repo":"https://github.com/gardener/gardener-extension-networking-calico","github_subdir":"docs/operations","params":{"github_branch":"master"},"path_base_for_github_subdir":{"from":"content/docs/extensions/network-extensions/gardener-extension-networking-calico/operations.md","to":"operations.md"},"persona":"Operators","title":"Operations","prev":false,"next":false},"headers":[],"relativePath":"docs/extensions/network-extensions/gardener-extension-networking-calico/operations/index.md","filePath":"docs/extensions/network-extensions/gardener-extension-networking-calico/operations.md","lastUpdated":null}'),o={name:"docs/extensions/network-extensions/gardener-extension-networking-calico/operations/index.md"};function s(r,e,l,p,d,h){return a(),n("div",null,e[0]||(e[0]=[t(`<h1 id="using-the-calico-networking-extension-with-gardener-as-operator" tabindex="-1">Using the Calico networking extension with Gardener as operator <a class="header-anchor" href="#using-the-calico-networking-extension-with-gardener-as-operator" aria-label="Permalink to &quot;Using the Calico networking extension with Gardener as operator&quot;">​</a></h1><p>This document explains configuration options supported by the networking-calico extension.</p><h3 id="run-calico-node-in-non-privileged-and-non-root-mode" tabindex="-1">Run calico-node in non-privileged and non-root mode <a class="header-anchor" href="#run-calico-node-in-non-privileged-and-non-root-mode" aria-label="Permalink to &quot;Run calico-node in non-privileged and non-root mode&quot;">​</a></h3><p><strong>Feature State</strong>: <code>Alpha</code></p><h5 id="motivation" tabindex="-1">Motivation <a class="header-anchor" href="#motivation" aria-label="Permalink to &quot;Motivation&quot;">​</a></h5><p>Running containers in privileged mode is not recommended as privileged containers run with all <a href="https://man7.org/linux/man-pages/man7/capabilities.7.html" target="_blank" rel="noreferrer">linux capabilities</a> enabled and can access the host&#39;s resources. Running containers in privileged mode opens number of security threats such as breakout to underlying host OS.</p><h5 id="support-for-non-privileged-and-non-root-mode" tabindex="-1">Support for non-privileged and non-root mode <a class="header-anchor" href="#support-for-non-privileged-and-non-root-mode" aria-label="Permalink to &quot;Support for non-privileged and non-root mode&quot;">​</a></h5><p>The Calico project has a preliminary support for running the calico-node component in non-privileged mode (see <a href="https://projectcalico.docs.tigera.io/security/non-privileged" target="_blank" rel="noreferrer">this guide</a>). Similar to <a href="https://github.com/tigera/operator" target="_blank" rel="noreferrer">Tigera Calico operator</a> the networking-calico extension can also run calico-node in non-privileged and non-root mode. This feature is controller via feature gate named <code>NonPrivilegedCalicoNode</code>. The feature gates are configured in the <a href="https://github.com/gardener/gardener-extension-networking-calico/blob/master/example/00-componentconfig.yaml" target="_blank" rel="noreferrer">ControllerConfiguration</a> of networking-calico. The corresponding ControllerDeployment configuration that enables the <code>NonPrivilegedCalicoNode</code> would look like:</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">apiVersion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">core.gardener.cloud/v1beta1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">kind</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ControllerDeployment</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">metadata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">networking-calico</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">helm</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">providerConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  values</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    chart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&lt;omitted&gt;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      featureGates</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        NonPrivilegedCalicoNode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span></code></pre></div><h5 id="limitations" tabindex="-1">Limitations <a class="header-anchor" href="#limitations" aria-label="Permalink to &quot;Limitations&quot;">​</a></h5><ul><li>The support for the non-privileged mode in the Calico project is not ready for productive usage. The <a href="https://projectcalico.docs.tigera.io/security/non-privileged" target="_blank" rel="noreferrer">upstream documentation</a> states that in non-privileged mode the support for features added after Calico v3.21 is not guaranteed.</li><li>Calico in non-privileged mode does not support eBPF dataplane. That&#39;s why when eBPF dataplane is enabled, calico-node has to run in privileged mode (even when the <code>NonPrivilegedCalicoNode</code> feature gate is enabled).</li><li>(At the time of writing this guide) there is the following issue <a href="https://github.com/projectcalico/calico/issues/5348" target="_blank" rel="noreferrer">projectcalico/calico#5348</a> that is not addressed.</li><li>(At the time of writing this guide) the upstream adoptions seems to be low. The Calico charts and manifest in <a href="https://github.com/projectcalico/calico" target="_blank" rel="noreferrer">projectcalico/calico</a> run calico-node in privileged mode.</li></ul>`,11)]))}const k=i(o,[["render",s]]);export{g as __pageData,k as default};
