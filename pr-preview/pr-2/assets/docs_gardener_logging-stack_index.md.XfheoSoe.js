import{_ as s,c as n,o as a,a2 as o}from"./chunks/framework.Bfq10Vlj.js";const g=JSON.parse('{"title":"Logging Stack","description":"","frontmatter":{"github_repo":"https://github.com/gardener/gardener","github_subdir":"docs/development","params":{"github_branch":"master"},"path_base_for_github_subdir":{"from":"content/docs/gardener/logging-stack.md","to":"logging-stack.md"},"persona":"Developers","title":"Logging Stack","prev":false,"next":false},"headers":[],"relativePath":"docs/gardener/logging-stack/index.md","filePath":"docs/gardener/logging-stack.md","lastUpdated":null}'),i={name:"docs/gardener/logging-stack/index.md"};function t(l,e,p,c,r,d){return a(),n("div",null,e[0]||(e[0]=[o(`<h1 id="logging-stack" tabindex="-1">Logging Stack <a class="header-anchor" href="#logging-stack" aria-label="Permalink to &quot;Logging Stack&quot;">​</a></h1><p>This document contains logging stack related how-tos and configuration options for developers.</p><h2 id="expose-logs-for-component-to-user-plutono" tabindex="-1">Expose Logs for Component to User Plutono <a class="header-anchor" href="#expose-logs-for-component-to-user-plutono" aria-label="Permalink to &quot;Expose Logs for Component to User Plutono&quot;">​</a></h2><p>Exposing logs for a new component to the User&#39;s Plutono is described in the <a href="/docs/gardener/extensions/logging-and-monitoring/#how-to-expose-logs-to-the-users">How to Expose Logs to the Users</a> section.</p><h2 id="configuration" tabindex="-1">Configuration <a class="header-anchor" href="#configuration" aria-label="Permalink to &quot;Configuration&quot;">​</a></h2><h3 id="fluent-bit" tabindex="-1">Fluent-bit <a class="header-anchor" href="#fluent-bit" aria-label="Permalink to &quot;Fluent-bit&quot;">​</a></h3><p>The Fluent-bit configurations can be found on <code>pkg/component/observability/logging/fluentoperator/customresources</code> There are six different specifications:</p><ul><li>FluentBit: Defines the fluent-bit DaemonSet specifications</li><li>ClusterFluentBitConfig: Defines the labelselectors of the resources which fluent-bit will match</li><li>ClusterInput: Defines the location of the input stream of the logs</li><li>ClusterOutput: Defines the location of the output source (Vali for example)</li><li>ClusterFilter: Defines filters which match specific keys</li><li>ClusterParser: Defines parsers which are used by the filters</li></ul><h3 id="vali" tabindex="-1">Vali <a class="header-anchor" href="#vali" aria-label="Permalink to &quot;Vali&quot;">​</a></h3><p>The Vali configurations can be found on <code>charts/seed-bootstrap/charts/vali/templates/vali-configmap.yaml</code></p><p>The main specifications there are:</p><ul><li>Index configuration: Currently the following one is used:</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>    schema_config:</span></span>
<span class="line"><span>      configs:</span></span>
<span class="line"><span>      - from: 2018-04-15</span></span>
<span class="line"><span>        store: boltdb</span></span>
<span class="line"><span>        object_store: filesystem</span></span>
<span class="line"><span>        schema: v11</span></span>
<span class="line"><span>        index:</span></span>
<span class="line"><span>          prefix: index_</span></span>
<span class="line"><span>          period: 24h</span></span></code></pre></div><ul><li><code>from</code>: Is the date from which logs collection is started. Using a date in the past is okay.</li><li><code>store</code>: The DB used for storing the index.</li><li><code>object_store</code>: Where the data is stored.</li><li><code>schema</code>: Schema version which should be used (v11 is currently recommended).</li><li><code>index.prefix</code>: The prefix for the index.</li><li><code>index.period</code>: The period for updating the indices.</li></ul><p><strong>Adding a new index happens with new config block definition. The <code>from</code> field should start from the current day + previous <code>index.period</code> and should not overlap with the current index. The <code>prefix</code> also should be different.</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>    schema_config:</span></span>
<span class="line"><span>      configs:</span></span>
<span class="line"><span>      - from: 2018-04-15</span></span>
<span class="line"><span>        store: boltdb</span></span>
<span class="line"><span>        object_store: filesystem</span></span>
<span class="line"><span>        schema: v11</span></span>
<span class="line"><span>        index:</span></span>
<span class="line"><span>          prefix: index_</span></span>
<span class="line"><span>          period: 24h</span></span>
<span class="line"><span>      - from: 2020-06-18</span></span>
<span class="line"><span>        store: boltdb</span></span>
<span class="line"><span>        object_store: filesystem</span></span>
<span class="line"><span>        schema: v11</span></span>
<span class="line"><span>        index:</span></span>
<span class="line"><span>          prefix: index_new_</span></span>
<span class="line"><span>          period: 24h</span></span></code></pre></div><ul><li>chunk_store_config Configuration</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>    chunk_store_config:</span></span>
<span class="line"><span>      max_look_back_period: 336h</span></span></code></pre></div><p><strong><code>chunk_store_config.max_look_back_period</code> should be the same as the <code>retention_period</code></strong></p><ul><li>table_manager Configuration</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>    table_manager:</span></span>
<span class="line"><span>      retention_deletes_enabled: true</span></span>
<span class="line"><span>      retention_period: 336h</span></span></code></pre></div><p><code>table_manager.retention_period</code> is the living time for each log message. Vali will keep messages for (<code>table_manager.retention_period</code> - <code>index.period</code>) time due to specification in the Vali implementation.</p><h3 id="plutono" tabindex="-1">Plutono <a class="header-anchor" href="#plutono" aria-label="Permalink to &quot;Plutono&quot;">​</a></h3><p>This is the Vali configuration that Plutono uses:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>    - name: vali</span></span>
<span class="line"><span>      type: vali</span></span>
<span class="line"><span>      access: proxy</span></span>
<span class="line"><span>      url: http://logging.{{ .Release.Namespace }}.svc:3100</span></span>
<span class="line"><span>      jsonData:</span></span>
<span class="line"><span>        maxLines: 5000</span></span></code></pre></div><ul><li><code>name</code>: Is the name of the datasource.</li><li><code>type</code>: Is the type of the datasource.</li><li><code>access</code>: Should be set to proxy.</li><li><code>url</code>: Vali&#39;s url</li><li><code>svc</code>: Vali&#39;s port</li><li><code>jsonData.maxLines</code>: The limit of the log messages which Plutono will show to the users.</li></ul><p><strong>Decrease this value if the browser works slowly!</strong></p>`,27)]))}const u=s(i,[["render",t]]);export{g as __pageData,u as default};
