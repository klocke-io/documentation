import{_ as i,c as a,o as e,a2 as t}from"./chunks/framework.Bfq10Vlj.js";const n="/assets/logo_gardener_cli_large.BUHES50c.png",g=JSON.parse('{"title":"Gardenctl V2","description":"The command line interface to control your clusters","frontmatter":{"aliases":["/docs/gardenctl/"],"description":"The command line interface to control your clusters","github_repo":"https://github.com/gardener/gardenctl-v2","github_subdir":".","params":{"github_branch":"master"},"path_base_for_github_subdir":{"from":"content/docs/gardenctl-v2.md","to":"README.md"},"title":"Gardenctl V2","weight":70,"prev":false,"next":false},"headers":[],"relativePath":"docs/gardenctl-v2/index.md","filePath":"docs/gardenctl-v2.md","lastUpdated":null}'),l={name:"docs/gardenctl-v2/index.md"};function h(r,s,p,o,d,k){return e(),a("div",null,s[0]||(s[0]=[t('<h1 id="gardenctl-v2" tabindex="-1">gardenctl-v2 <a class="header-anchor" href="#gardenctl-v2" aria-label="Permalink to &quot;gardenctl-v2&quot;">​</a></h1><p><img src="'+n+`" alt=""></p><p><a href="https://github.com/gardener/gardenctl-v2/actions/workflows/non-release.yaml?query=branch%3Amaster" target="_blank" rel="noreferrer"><img src="https://github.com/gardener/gardenctl-v2/raw/workflows/non-release.yaml/badge.svg" alt="CI Build status"></a><a href="https://api.reuse.software/info/github.com/gardener/gardenctl-v2" target="_blank" rel="noreferrer"><img src="https://api.reuse.software/badge/github.com/gardener/gardenctl-v2" alt="REUSE status"></a><a href="https://goreportcard.com/report/github.com/gardener/gardenctl-v2" target="_blank" rel="noreferrer"><img src="https://goreportcard.com/badge/github.com/gardener/gardenctl-v2" alt="Go Report Card"></a><a href="https://badge.fury.io/gh/gardener%2Fgardenctl-v2" target="_blank" rel="noreferrer"><img src="https://badge.fury.io/gh/gardener%2Fgardenctl-v2.svg" alt="release"></a></p><h2 id="what-is-gardenctl" tabindex="-1">What is <code>gardenctl</code>? <a class="header-anchor" href="#what-is-gardenctl" aria-label="Permalink to &quot;What is \`gardenctl\`?&quot;">​</a></h2><p>gardenctl is a command-line client for the Gardener. It facilitates the administration of one or many garden, seed and shoot clusters. Use this tool to configure access to clusters and configure cloud provider CLI tools. It also provides support for accessing cluster nodes via ssh.</p><h2 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-label="Permalink to &quot;Installation&quot;">​</a></h2><p>Install the latest release from <a href="https://brew.sh/" target="_blank" rel="noreferrer">Homebrew</a>, <a href="https://chocolatey.org/packages/gardenctl-v2" target="_blank" rel="noreferrer">Chocolatey</a> or <a href="https://github.com/gardener/gardenctl-v2/releases" target="_blank" rel="noreferrer">GitHub Releases</a>.</p><h3 id="install-using-package-managers" tabindex="-1">Install using Package Managers <a class="header-anchor" href="#install-using-package-managers" aria-label="Permalink to &quot;Install using Package Managers&quot;">​</a></h3><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Homebrew (macOS and Linux)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gardener/tap/gardenctl-v2</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Chocolatey (Windows)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># default location C:\\ProgramData\\chocolatey\\bin\\gardenctl-v2.exe</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">choco</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gardenctl-v2</span></span></code></pre></div><p>Attention <code>brew</code> users: <code>gardenctl-v2</code> uses the same binary name as the legacy <code>gardenctl</code> (<code>gardener/gardenctl</code>) CLI. If you have an existing installation you should remove it with <code>brew uninstall gardenctl</code> before attempting to install <code>gardenctl-v2</code>. Alternatively, you can choose to link the binary using a different name. If you try to install without removing or relinking the old installation, brew will run into an error and provide instructions how to resolve it.</p><h3 id="install-from-github-release" tabindex="-1">Install from Github Release <a class="header-anchor" href="#install-from-github-release" aria-label="Permalink to &quot;Install from Github Release&quot;">​</a></h3><p>If you install via GitHub releases, you need to</p><ul><li>put the <code>gardenctl</code> binary on your path</li><li>and <a href="https://github.com/gardener/gardenlogin#installation" target="_blank" rel="noreferrer">install gardenlogin</a>.</li></ul><p>The other install methods do this for you.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Example for macOS</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># set operating system and architecture</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">os</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">darwin</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # choose between darwin, linux, windows</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">arch</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">amd64</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # choose between amd64, arm64</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Get latest version. Alternatively set your desired version</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">version</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://raw.githubusercontent.com/gardener/gardenctl-v2/master/LATEST</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Download gardenctl</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -LO</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;https://github.com/gardener/gardenctl-v2/releases/download/\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">version</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}/gardenctl_v2_\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">os</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}_\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">arch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Make the gardenctl binary executable</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;./gardenctl_v2_\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">os</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}_\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">arch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Move the binary in to your PATH</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mv</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;./gardenctl_v2_\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">os</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}_\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">arch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/local/bin/gardenctl</span></span></code></pre></div><h2 id="configuration" tabindex="-1">Configuration <a class="header-anchor" href="#configuration" aria-label="Permalink to &quot;Configuration&quot;">​</a></h2><p><code>gardenctl</code> requires a configuration file. The default location is in <code>~/.garden/gardenctl-v2.yaml</code>.</p><p>You can modify this file directly using the <code>gardenctl config</code> command. It allows adding, modifying and deleting gardens.</p><p>Example <code>config</code> command:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Adapt the path to your kubeconfig file for the garden cluster (not to be mistaken with your shoot cluster)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> KUBECONFIG</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=~</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/relative/path/to/kubeconfig.yaml</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Fetch cluster-identity of garden cluster from the configmap</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cluster_identity</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kube-system</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> configmap</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cluster-identity</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -ojsonpath=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.data.cluster-identity}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Configure garden cluster</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gardenctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set-garden</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $cluster_identity </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">--kubeconfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $KUBECONFIG</span></span></code></pre></div><p>This command will create or update a garden with the provided identity and kubeconfig path of your garden cluster.</p><h3 id="example-config" tabindex="-1">Example Config <a class="header-anchor" href="#example-config" aria-label="Permalink to &quot;Example Config&quot;">​</a></h3><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">gardens</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">identity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">landscape-dev</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # Unique identity of the garden cluster. See cluster-identity ConfigMap in kube-system namespace of the garden cluster</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    kubeconfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">~/relative/path/to/kubeconfig.yaml</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># name: my-name # An alternative, unique garden name for targeting</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># context: different-context # Overrides the current-context of the garden cluster kubeconfig</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># patterns: ~ # List of regex patterns for pattern targeting</span></span></code></pre></div><div class="note custom-block github-alert"><p class="custom-block-title">NOTE</p><p></p><ul><li>To use the kubeconfigs for <strong>shoot clusters</strong> provided by <code>gardenctl</code>, you need to have <a href="https://github.com/gardener/gardenlogin" target="_blank" rel="noreferrer">gardenlogin</a> installed as a <code>kubectl</code> auth plugin.</li><li>If your <strong>garden cluster</strong> kubeconfig uses OIDC authentication, ensure that you have the <a href="https://github.com/int128/kubelogin" target="_blank" rel="noreferrer">kubelogin</a> <code>kubectl</code> auth plugin installed.</li></ul></div><h3 id="config-path-overwrite" tabindex="-1">Config Path Overwrite <a class="header-anchor" href="#config-path-overwrite" aria-label="Permalink to &quot;Config Path Overwrite&quot;">​</a></h3><ul><li>The <code>gardenctl</code> config path can be overwritten with the environment variable <code>GCTL_HOME</code>.</li><li>The <code>gardenctl</code> config name can be overwritten with the environment variable <code>GCTL_CONFIG_NAME</code>.</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GCTL_HOME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/alternate/garden/config/dir</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GCTL_CONFIG_NAME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">myconfig </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># without extension!</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># config is expected to be under /alternate/garden/config/dir/myconfig.yaml</span></span></code></pre></div><h3 id="shell-session" tabindex="-1">Shell Session <a class="header-anchor" href="#shell-session" aria-label="Permalink to &quot;Shell Session&quot;">​</a></h3><p>The state of gardenctl is bound to a shell session and is not shared across windows, tabs or panes. A shell session is defined by the environment variable <code>GCTL_SESSION_ID</code>. If this is not defined, the value of the <code>TERM_SESSION_ID</code> environment variable is used instead. If both are not defined, this leads to an error and gardenctl cannot be executed. The <code>target.yaml</code> and temporary <code>kubeconfig.*.yaml</code> files are stored in the following directory <code>\${TMPDIR}/garden/\${GCTL_SESSION_ID}</code>.</p><p>You can make sure that <code>GCTL_SESSION_ID</code> or <code>TERM_SESSION_ID</code> is always present by adding the following code to your terminal profile <code>~/.profile</code>, <code>~/.bashrc</code> or comparable file.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bash</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> and</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> zsh:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [ </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">-n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$GCTL_SESSION_ID</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ||</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$TERM_SESSION_ID</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">||</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GCTL_SESSION_ID</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">uuidgen</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fish:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         [ </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">-n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$GCTL_SESSION_ID</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ||</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$TERM_SESSION_ID</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">||</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> set</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -gx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GCTL_SESSION_ID</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (uuidgen)</span></span></code></pre></div><div class="language-ps vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ps</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">powershell:   </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ( </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Test-Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Env:GCTL_SESSION_ID) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-and</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> !</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Test-Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Env:TERM_SESSION_ID) ) { $</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Env:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">GCTL_SESSION_ID </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">guid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]::NewGuid().ToString() }</span></span></code></pre></div><h3 id="completion" tabindex="-1">Completion <a class="header-anchor" href="#completion" aria-label="Permalink to &quot;Completion&quot;">​</a></h3><p>Gardenctl supports completion that will help you working with the CLI and save you typing effort. It will also help you find clusters by providing suggestions for gardener resources such as shoots or projects. Completion is supported for <code>bash</code>, <code>zsh</code>, <code>fish</code> and <code>powershell</code>. You will find more information on how to configure your shell completion for gardenctl by executing the help for your shell completion command. Example:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gardenctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> completion</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bash</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --help</span></span></code></pre></div><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h2><h3 id="targeting" tabindex="-1">Targeting <a class="header-anchor" href="#targeting" aria-label="Permalink to &quot;Targeting&quot;">​</a></h3><p>You can set a target to use it in subsequent commands. You can also overwrite the target for each command individually.</p><p>Note that this will not affect your KUBECONFIG env variable. To update the KUBECONFIG env for your current target see <a href="/docs/gardenctl-v2/#configure-kubeconfig-for-shoot-clusters">Configure KUBECONFIG</a> section</p><p>Example:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># target control plane</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gardenctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> target</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --garden</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> landscape-dev</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --project</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-project</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --shoot</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-shoot</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --control-plane</span></span></code></pre></div><p>Find more information in the <a href="https://github.com/gardener/gardenctl-v2/blob/master/docs/usage/targeting.md" target="_blank" rel="noreferrer">documentation</a>.</p><h3 id="configure-kubeconfig-for-shoot-clusters" tabindex="-1">Configure KUBECONFIG for Shoot Clusters <a class="header-anchor" href="#configure-kubeconfig-for-shoot-clusters" aria-label="Permalink to &quot;Configure KUBECONFIG for Shoot Clusters&quot;">​</a></h3><p>Generate a script that points KUBECONFIG to the targeted cluster for the specified shell. Use together with <code>eval</code> to configure your shell. Example for <code>bash</code>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">eval</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gardenctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kubectl-env bash)&quot;</span></span></code></pre></div><p>To load the kubectl configuration for each bash session add the command at the end of the <code>~/.bashrc</code> file.</p><h3 id="configure-cloud-provider-clis" tabindex="-1">Configure Cloud Provider CLIs <a class="header-anchor" href="#configure-cloud-provider-clis" aria-label="Permalink to &quot;Configure Cloud Provider CLIs&quot;">​</a></h3><p>Generate the cloud provider CLI configuration script for the specified shell. Use together with <code>eval</code> to configure your shell. Example for <code>bash</code>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">eval</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gardenctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> provider-env bash)&quot;</span></span></code></pre></div><h3 id="ssh" tabindex="-1">SSH <a class="header-anchor" href="#ssh" aria-label="Permalink to &quot;SSH&quot;">​</a></h3><p>Establish an SSH connection to a Shoot cluster&#39;s node.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gardenctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ssh</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-node</span></span></code></pre></div>`,53)]))}const u=i(l,[["render",h]]);export{g as __pageData,u as default};
