import{_ as t,c,o as r,a2 as i}from"./chunks/framework.B8WFj13S.js";const a="/documentation/pr-preview/pr-2/assets/tls-communication-lines.excalidraw.-iKRbZB5.png",f=JSON.parse('{"title":"Securing Etcd Clusters","description":"","frontmatter":{"github_repo":"https://github.com/gardener/etcd-druid","github_subdir":"docs/usage","params":{"github_branch":"master"},"path_base_for_github_subdir":{"from":"content/docs/other-components/etcd-druid/securing-etcd-clusters.md","to":"securing-etcd-clusters.md"},"persona":"Users","title":"Securing Etcd Clusters","prev":false,"next":false},"headers":[],"relativePath":"docs/other-components/etcd-druid/securing-etcd-clusters/index.md","filePath":"docs/other-components/etcd-druid/securing-etcd-clusters.md","lastUpdated":null}'),d={name:"docs/other-components/etcd-druid/securing-etcd-clusters/index.md"};function o(s,e,n,l,u,p){return r(),c("div",null,e[0]||(e[0]=[i('<h1 id="securing-etcd-cluster" tabindex="-1">Securing etcd cluster <a class="header-anchor" href="#securing-etcd-cluster" aria-label="Permalink to &quot;Securing etcd cluster&quot;">​</a></h1><p>This document will describe all the TLS artifacts that are typically generated for setting up etcd-druid and etcd clusters in Gardener clusters. You can take inspiration from this and decide which communication lines are essential to be TLS enabled.</p><h2 id="communication-lines" tabindex="-1">Communication lines <a class="header-anchor" href="#communication-lines" aria-label="Permalink to &quot;Communication lines&quot;">​</a></h2><p>In order to undertand all the TLS artifacts that are required to setup etcd-druid and one or more etcd-clusters, one must have a clear view of all the communication channels that needs to be protected via TLS. In the diagram below all communication lines in a typical 3-node etcd cluster along with <code>kube-apiserver</code> and <code>etcd-druid</code> is illustrated.</p><p>!!! info For <a href="https://github.com/gardener/gardener" target="_blank" rel="noreferrer">Gardener</a> setup all the communication lines are TLS enabled.</p><img src="'+a+'" alt="communication-lines" style="width:1200px;"><h2 id="tls-artifacts" tabindex="-1">TLS artifacts <a class="header-anchor" href="#tls-artifacts" aria-label="Permalink to &quot;TLS artifacts&quot;">​</a></h2><p>An etcd cluster setup by <code>etcd-druid</code> leverages the following TLS artifacts:</p><ul><li><p>Certificate Authority used to sign server and client certificate key-pair for <code>etcd-backup-restore</code> specified via <code>etcd.spec.backup.tls.tlsCASecretRef</code>.</p></li><li><p>Server certificate key-pair specified via <code>etcd.spec.backup.tls.serverTLSSecretRef</code> used by <code>etcd-backup-restore</code> HTTPS server.</p></li><li><p>Client certificate key-pair specified via <code>etcd.spec.backup.tls.clientTLSSecretRef</code> used by <code>etcd-wrapper</code> to securely communicate to the <code>etcd-backup-restore</code> HTTPS server.</p></li><li><p>Certificate Authority used to sign server and client certificate key-pair for <code>etcd</code> and <code>etcd-wrapper</code> specified via <code>etcd.spec.etcd.clientUrlTls.tlsCASecretRef</code> for etcd client communication.</p></li><li><p>Server certificate key-pair specified via <code>etcd.spec.etcd.clientUrlTls.serverTLSSecretRef</code> used by <code>etcd</code> and <code>etcd-wrapper</code> HTTPS servers.</p></li><li><p>Client certificate key-pair specified via <code>etcd.spec.etcd.clientUrlTls.clientTLSSecretRef</code> used by:</p><ul><li><code>etcd-wrapper</code> and <code>etcd-backup-restore</code> to securely communicate to the <code>etcd</code> HTTPS server.</li><li><code>etcd-backup-restore</code> to securely communicate to the <code>etcd-wrapper</code> HTTPS server.</li></ul></li><li><p>Certificate Authority used to sign server certificate key-pair for <code>etcd</code> peer communication specified via <code>etcd.spec.etcd.peerUrlTls.tlsCASecretRef</code>.</p></li><li><p>Server certificate key-pair specified via <code>etcd.spec.etcd.peerUrlTls.serverTLSSecretRef</code> used for <code>etcd</code> peer communication.</p></li></ul><p>!!! note TLS artifacts should be created prior to creating <code>Etcd</code> clusters. <code>etcd-druid</code> currently does not provide a convenience way to generate these TLS artifacts. <a href="https://etcd.io/docs/v3.4/op-guide/security/" target="_blank" rel="noreferrer">etcd</a> recommends to use <a href="https://github.com/cloudflare/cfssl" target="_blank" rel="noreferrer">cfssl</a> to generate certificates. However you can use any other tool as well. We do provide a convenience script for local development <a href="https://github.com/gardener/etcd-wrapper/blob/main/hack/local-dev/generate_pki.sh" target="_blank" rel="noreferrer">here</a> which can be used to generate TLS artifacts. Currently this script is part of <a href="https://github.com/gardener/etcd-wrapper" target="_blank" rel="noreferrer">etcd-wrapper</a> github repository but we will harmonize these scripts to be used across all github projects under the <code>etcd-druid</code> ecosystem.</p>',10)]))}const m=t(d,[["render",o]]);export{f as __pageData,m as default};
