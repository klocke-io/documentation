import{_ as i,c as a,o as e,a2 as n}from"./chunks/framework.B8WFj13S.js";const g=JSON.parse('{"title":"Profiling","description":"","frontmatter":{"github_repo":"https://github.com/gardener/gardener","github_subdir":"docs/monitoring","params":{"github_branch":"master"},"path_base_for_github_subdir":{"from":"content/docs/gardener/monitoring/profiling.md","to":"profiling.md"},"title":"Profiling","prev":false,"next":false},"headers":[],"relativePath":"docs/gardener/monitoring/profiling/index.md","filePath":"docs/gardener/monitoring/profiling.md","lastUpdated":null}'),t={name:"docs/gardener/monitoring/profiling/index.md"};function l(p,s,r,h,o,k){return e(),a("div",null,s[0]||(s[0]=[n(`<h1 id="profiling-gardener-components" tabindex="-1">Profiling Gardener Components <a class="header-anchor" href="#profiling-gardener-components" aria-label="Permalink to &quot;Profiling Gardener Components&quot;">​</a></h1><p>Similar to Kubernetes, Gardener components support profiling using <a href="https://golang.org/doc/diagnostics#profiling" target="_blank" rel="noreferrer">standard Go tools</a> for analyzing CPU and memory usage by different code sections and more. This document shows how to enable and use profiling handlers with Gardener components.</p><p>Enabling profiling handlers and the ports on which they are exposed differs between components. However, once the handlers are enabled, they provide profiles via the same HTTP endpoint paths, from which you can retrieve them via <code>curl</code>/<code>wget</code> or directly using <code>go tool pprof</code>. (You might need to use <code>kubectl port-forward</code> in order to access HTTP endpoints of Gardener components running in clusters.)</p><p>For example (gardener-controller-manager):</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> curl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://localhost:2718/debug/pprof/heap</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /tmp/heap-controller-manager</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tool</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pprof</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /tmp/heap-controller-manager</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Type:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> inuse_space</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Time:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Sep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 3,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2021</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> at</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 10:05am</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (CEST)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Entering</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> interactive</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (type </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;help&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commands,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;o&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> options</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pprof</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>or</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tool</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pprof</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://localhost:2718/debug/pprof/heap</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Fetching</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> profile</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> over</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> HTTP</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://localhost:2718/debug/pprof/heap</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Saved</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> profile</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> in</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /Users/timebertt/pprof/pprof.alloc_objects.alloc_space.inuse_objects.inuse_space.008.pb.gz</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Type:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> inuse_space</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Time:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Sep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 3,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2021</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> at</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 10:05am</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (CEST)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Entering</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> interactive</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (type </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;help&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commands,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;o&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> options</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pprof</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h2 id="gardener-apiserver" tabindex="-1">gardener-apiserver <a class="header-anchor" href="#gardener-apiserver" aria-label="Permalink to &quot;gardener-apiserver&quot;">​</a></h2><p><code>gardener-apiserver</code> provides the same flags as <code>kube-apiserver</code> for enabling profiling handlers (enabled by default):</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>--contention-profiling    Enable lock contention profiling, if profiling is enabled</span></span>
<span class="line"><span>--profiling               Enable profiling via web interface host:port/debug/pprof/ (default true)</span></span></code></pre></div><p>The handlers are served on the same port as the API endpoints (configured via <code>--secure-port</code>). This means that you will also have to authenticate against the API server according to the configured authentication and authorization policy.</p><h2 id="gardener-admission-controller-controller-manager-scheduler-resource-manager-gardenlet" tabindex="-1">gardener-{admission-controller,controller-manager,scheduler,resource-manager}, gardenlet <a class="header-anchor" href="#gardener-admission-controller-controller-manager-scheduler-resource-manager-gardenlet" aria-label="Permalink to &quot;gardener-{admission-controller,controller-manager,scheduler,resource-manager}, gardenlet&quot;">​</a></h2><p><code>gardener-controller-manager</code>, <code>gardener-admission-controller</code>, <code>gardener-scheduler</code>, <code>gardener-resource-manager</code> and <code>gardenlet</code> also allow enabling profiling handlers via their respective component configs (currently disabled by default). Here is an example for the <code>gardener-admission-controller</code>&#39;s configuration and how to enable it (it looks similar for the other components):</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">apiVersion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">admissioncontroller.config.gardener.cloud/v1alpha1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">kind</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">AdmissionControllerConfiguration</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ...</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">server</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  metrics</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2723</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">debugging</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  enableProfiling</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  enableContentionProfiling</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span></code></pre></div><p>However, the handlers are served on the same port as configured in <code>server.metrics.port</code> via HTTP.</p><p>For example (gardener-admission-controller):</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> curl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://localhost:2723/debug/pprof/heap</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /tmp/heap</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tool</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pprof</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /tmp/heap</span></span></code></pre></div>`,17)]))}const c=i(t,[["render",l]]);export{g as __pageData,c as default};
