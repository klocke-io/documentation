import{_ as e}from"./chunks/logo_gardener_dashboard.DGzbFNcn.js";import{_ as i,c as t,o as n,j as s,a2 as l,a as h}from"./chunks/framework.B8WFj13S.js";const b=JSON.parse('{"title":"Local Setup","description":"","frontmatter":{"github_repo":"https://github.com/gardener/dashboard","github_subdir":"docs/development","params":{"github_branch":"master"},"path_base_for_github_subdir":{"from":"content/docs/dashboard/local-setup.md","to":"local-setup.md"},"persona":"Developers","title":"Local Setup","prev":false,"next":false},"headers":[],"relativePath":"docs/dashboard/local-setup/index.md","filePath":"docs/dashboard/local-setup.md","lastUpdated":null}'),r={name:"docs/dashboard/local-setup/index.md"};function o(p,a,d,k,c,g){return n(),t("div",null,a[0]||(a[0]=[s("h1",{id:"local-development",tabindex:"-1"},[h("Local development "),s("a",{class:"header-anchor",href:"#local-development","aria-label":'Permalink to "Local development"'},"​")],-1),s("p",{float:"left"},[s("img",{width:"90",src:e}),s("img",{width:"200",src:"https://github.com/yarnpkg/assets/raw/master/yarn-kitten-full.png"})],-1),l(`<h2 id="purpose" tabindex="-1">Purpose <a class="header-anchor" href="#purpose" aria-label="Permalink to &quot;Purpose&quot;">​</a></h2><p>Develop new feature and fix bug on the Gardener Dashboard.</p><h2 id="requirements" tabindex="-1">Requirements <a class="header-anchor" href="#requirements" aria-label="Permalink to &quot;Requirements&quot;">​</a></h2><ul><li>Yarn. For the required version, refer to <code>.engines.yarn</code> in <a href="https://github.com/gardener/dashboard/blob/master/package.json" target="_blank" rel="noreferrer">package.json</a>.</li><li>Node.js. For the required version, refer to <code>.engines.node</code> in <a href="https://github.com/gardener/dashboard/blob/master/package.json" target="_blank" rel="noreferrer">package.json</a>.</li></ul><h2 id="git-hooks-with-husky" tabindex="-1">Git Hooks with Husky <a class="header-anchor" href="#git-hooks-with-husky" aria-label="Permalink to &quot;Git Hooks with Husky&quot;">​</a></h2><p>This repository uses a custom <a href="https://typicode.github.io/husky/" target="_blank" rel="noreferrer">Husky</a> setup to centrally manage Git hooks and ensure a consistent development workflow. Our Husky configuration is user-configurable and designed to help you by checking code quality and performing security checks before you commit or push changes.</p><h3 id="how-our-husky-setup-works" tabindex="-1">How Our Husky Setup Works <a class="header-anchor" href="#how-our-husky-setup-works" aria-label="Permalink to &quot;How Our Husky Setup Works&quot;">​</a></h3><ul><li>When you install dependencies with <code>yarn</code>, Husky is set up automatically, but the actual hooks are only activated after your first commit attempt.</li><li>On your first commit, a <code>.husky/user-config</code> file is automatically created for you if it does not exist. This file lets you opt in or out of optional checks, such as: <ul><li><strong>ggshield</strong>: Secret scanning (requires a GitGuardian account)</li><li><strong>REUSE</strong>: License compliance (requires <code>pipx</code> and the <code>reuse</code> tool)</li><li><strong>verify_on_push</strong>: Run the full verification script on every push (lint, tests, dependency checks)</li></ul></li><li>By default, Husky managed hooks are enabled, but optional checks are disabled. You can edit <code>.husky/user-config</code> at any time to change your preferences.</li><li>The actual hook logic is implemented in the <code>.husky/pre-commit</code> and <code>.husky/pre-push</code> scripts.</li></ul><h3 id="disabling-husky-managed-hooks" tabindex="-1">Disabling Husky Managed Hooks <a class="header-anchor" href="#disabling-husky-managed-hooks" aria-label="Permalink to &quot;Disabling Husky Managed Hooks&quot;">​</a></h3><p>If you want to disable Husky managed hooks and reset your Git hooks path to the default location, run:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> managed_hooks=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .husky/user-config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --local</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --unset</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> core.hooksPath</span></span></code></pre></div><p>For more information, see the <a href="https://typicode.github.io/husky/" target="_blank" rel="noreferrer">Husky documentation</a> and our <code>.husky/</code> directory for custom logic.</p><h2 id="steps" tabindex="-1">Steps <a class="header-anchor" href="#steps" aria-label="Permalink to &quot;Steps&quot;">​</a></h2><h3 id="_1-clone-repository" tabindex="-1">1. Clone repository <a class="header-anchor" href="#_1-clone-repository" aria-label="Permalink to &quot;1. Clone repository&quot;">​</a></h3><p>Clone the <a href="https://github.com/gardener/dashboard.git" target="_blank" rel="noreferrer">gardener/dashboard</a> repository</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git@github.com:gardener/dashboard.git</span></span></code></pre></div><h3 id="_2-install-dependencies" tabindex="-1">2. Install dependencies <a class="header-anchor" href="#_2-install-dependencies" aria-label="Permalink to &quot;2. Install dependencies&quot;">​</a></h3><p>Run <code>yarn</code> at the repository root to install all dependencies.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dashboard</span></span></code></pre></div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span></span></code></pre></div><p>And build all project internal dependencies.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> workspace</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gardener-dashboard</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> packages-build-all</span></span></code></pre></div><h3 id="_3-configuration" tabindex="-1">3. Configuration <a class="header-anchor" href="#_3-configuration" aria-label="Permalink to &quot;3. Configuration&quot;">​</a></h3><p>Place the Gardener Dashboard configuration under <code>\${HOME}/.gardener/config.yaml</code> or alternatively set the path to the configuration file using the <code>GARDENER_CONFIG</code> environment variable.</p><p>A local configuration example could look like follows:</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3030</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">logLevel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">debug</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">logFormat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">text</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">apiServerUrl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">https://my-local-cluster</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # garden cluster kube-apiserver url - kubectl config view --minify -ojsonpath=&#39;{.clusters[].cluster.server}&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">sessionSecret</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">c2VjcmV0</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                # symmetric key used for encryption</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">frontend</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  dashboardUrl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    pathname</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/api/v1/namespaces/kube-system/services/kubernetes-dashboard/proxy/</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  defaultHibernationSchedule</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    evaluation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">00 17 * * 1,2,3,4,5</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    development</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">00 17 * * 1,2,3,4,5</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">00 08 * * 1,2,3,4,5</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    production</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">~</span></span></code></pre></div><h3 id="_4-run-it-locally" tabindex="-1">4. Run it locally <a class="header-anchor" href="#_4-run-it-locally" aria-label="Permalink to &quot;4. Run it locally&quot;">​</a></h3><p>The Gardener Dashboard <a href="https://github.com/gardener/dashboard/tree/master/backend" target="_blank" rel="noreferrer"><code>backend</code></a> server requires a kubeconfig for the Garden cluster. You can set it e.g. by using the <code>KUBECONFIG</code> environment variable.</p><p>If you want to run the Garden cluster locally, follow the <a href="documentation/pr-preview/pr-2/docs/gardener/getting_started_locally/">getting started locally</a> documentation. Gardener Dashboard supports the <code>local</code> infrastructure provider that comes with the local Gardener cluster setup. See <a href="documentation/pr-preview/pr-2/docs/dashboard/local-setup/#5-login-to-the-dashboard">5. Login to the dashboard</a> for more information on how to use the Dashboard with a local gardener or any other Gardener landscape.</p><p>Start the <code>backend</code> server (<code>http://localhost:3030</code>).</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> backend</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> KUBECONFIG</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/path/to/garden/cluster/kubeconfig.yaml</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> serve</span></span></code></pre></div><p>To start the frontend server, you have two options for handling the server certificate:</p><ol><li><p><strong>Recommended Method</strong>: Run <code>yarn setup</code> in the frontend directory to generate a new self-signed CA and TLS server certificate before starting the frontend server for the first time. The CA is automatically added to the keychain on macOS. If you prefer not to add it to the keychain, you can use the <code>--skip-keychain</code> flag. For other operating systems, you will need to manually add the generated certificates to the local trust store.</p></li><li><p><strong>Alternative Method</strong>: If you prefer not to run <code>yarn setup</code>, a temporary self-signed certificate will be generated automatically. This certificate will not be added to the keychain. Note that you will need to click through the insecure warning in your browser to access the dashboard.</p></li></ol><p>We need to start a TLS dev server because we use cookie names with <code>__Host-</code> prefix. This requires the secure attribute to be set. For more information, see <a href="https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes#host-prefix" target="_blank" rel="noreferrer">OWASP Host Prefix</a>.</p><p>Start the <a href="https://github.com/gardener/dashboard/tree/master/frontend" target="_blank" rel="noreferrer"><code>frontend</code></a> dev server (<code>https://localhost:8443</code>) with https and hot reload enabled.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> frontend</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># yarn setup</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> serve</span></span></code></pre></div><p>You can now access the UI on <a href="https://localhost:8443/" target="_blank" rel="noreferrer">https://localhost:8443/</a></p><h3 id="_5-login-to-the-dashboard" tabindex="-1">5. Login to the dashboard <a class="header-anchor" href="#_5-login-to-the-dashboard" aria-label="Permalink to &quot;5. Login to the dashboard&quot;">​</a></h3><p>To login to the dashboard you can either configure <code>oidc</code>, or alternatively login using a token:</p><p>To login using a token, first create a service account.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> garden</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> serviceaccount</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dashboard-user</span></span></code></pre></div><p>Assign it a role, e.g. cluster-admin.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> subject</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clusterrolebinding</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cluster-admin</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --serviceaccount=garden:dashboard-user</span></span></code></pre></div><p>Get the token of the service account.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> garden</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> token</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dashboard-user</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --duration</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 24h</span></span></code></pre></div><p>Copy the token and login to the dashboard.</p><h2 id="build" tabindex="-1">Build <a class="header-anchor" href="#build" aria-label="Permalink to &quot;Build&quot;">​</a></h2><p>Build docker image locally.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span></code></pre></div><h2 id="push" tabindex="-1">Push <a class="header-anchor" href="#push" aria-label="Permalink to &quot;Push&quot;">​</a></h2><p>Push docker image to Google Container Registry.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span></span></code></pre></div><p>This command expects a valid gcloud configuration named <code>gardener</code>.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gcloud</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> configurations</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> describe</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gardener</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">is_active:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">name:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gardener</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">properties:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  core:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    account:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> john.doe@example.org</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    project:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> johndoe-1008</span></span></code></pre></div>`,54)]))}const F=i(r,[["render",o]]);export{b as __pageData,F as default};
