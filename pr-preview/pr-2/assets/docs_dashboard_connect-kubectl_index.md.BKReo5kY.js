import{_ as a,c as t,o,a2 as s}from"./chunks/framework.Bfq10Vlj.js";const i="/assets/download-garden-cluster-kubeconfig.CC7jB1qF.png",n="/assets/03-gardenlogin-info.CALIcG6d.png",r="/assets/copy-target-cluster-command.D2YPhEeq.png",l="/assets/01-select-cluster.CPJK6yT2.png",d="/assets/01-access-1.Cxi-XkiI.png",c="/assets/02-download.DHhTuv1T.png",m=JSON.parse('{"title":"Connect Kubectl","description":"","frontmatter":{"github_repo":"https://github.com/gardener/dashboard","github_subdir":"docs/usage","params":{"github_branch":"master"},"path_base_for_github_subdir":{"from":"content/docs/dashboard/connect-kubectl.md","to":"connect-kubectl.md"},"persona":"Users","title":"Connect Kubectl","prev":false,"next":false},"headers":[],"relativePath":"docs/dashboard/connect-kubectl/index.md","filePath":"docs/dashboard/connect-kubectl.md","lastUpdated":null}'),h={name:"docs/dashboard/connect-kubectl/index.md"};function p(g,e,u,k,b,f){return o(),t("div",null,e[0]||(e[0]=[s('<h1 id="connect-kubectl" tabindex="-1">Connect Kubectl <a class="header-anchor" href="#connect-kubectl" aria-label="Permalink to &quot;Connect Kubectl&quot;">​</a></h1><p>In Kubernetes, the configuration for accessing your cluster is in a format known as <code>kubeconfig</code>, which is stored as a file. It contains details such as cluster API server addresses and access credentials or a command to obtain access credentials from a <code>kubectl</code> credential plugin. In general, treat a <code>kubeconfig</code> as sensitive data. Tools like <code>kubectl</code> use the <code>kubeconfig</code> to connect and authenticate to a cluster and perform operations on it. Learn more about <a href="https://kubernetes.io/docs/concepts/configuration/organize-cluster-access-kubeconfig/" target="_blank" rel="noreferrer">kubeconfig</a> and <a href="https://kubernetes.io/docs/reference/kubectl/" target="_blank" rel="noreferrer">kubectl</a> on <a href="https://kubernetes.io" target="_blank" rel="noreferrer">kubernetes.io</a>.</p><h2 id="tools" tabindex="-1">Tools <a class="header-anchor" href="#tools" aria-label="Permalink to &quot;Tools&quot;">​</a></h2><p>In this guide, we reference the following tools:</p><ul><li><a href="https://kubernetes.io/docs/reference/kubectl/" target="_blank" rel="noreferrer">kubectl</a>: Command-line tool for running commands against Kubernetes clusters. It allows you to control various aspects of your cluster, such as creating or modifying resources, viewing resource status, and debugging your applications.</li><li><a href="https://github.com/int128/kubelogin" target="_blank" rel="noreferrer">kubelogin</a>: <code>kubectl</code> credential plugin used for OIDC authentication, which is required for the (OIDC) <code>Garden</code> cluster kubeconfig</li><li><a href="https://github.com/gardener/gardenlogin" target="_blank" rel="noreferrer">gardenlogin</a>: <code>kubectl</code> credential plugin used for <code>Shoot</code> authentication as <code>system:masters</code>, which is required for the (<code>gardenlogin</code>) <code>Shoot</code> cluster kubeconfig</li><li><a href="https://github.com/gardener/gardenctl-v2" target="_blank" rel="noreferrer">gardenctl</a>: Optional. Command-line tool to administrate one or many <code>Garden</code>, <code>Seed</code> and <code>Shoot</code> clusters. Use this tool to setup <code>gardenlogin</code> and <code>gardenctl</code> itself, configure access to clusters and configure cloud provider CLI tools.</li></ul><h2 id="connect-kubectl-to-a-shoot-cluster" tabindex="-1">Connect Kubectl to a Shoot Cluster <a class="header-anchor" href="#connect-kubectl-to-a-shoot-cluster" aria-label="Permalink to &quot;Connect Kubectl to a Shoot Cluster&quot;">​</a></h2><p>In order to connect to a <code>Shoot</code> cluster, you first have to <a href="https://github.com/gardener/gardenlogin/blob/master/README.md#installation" target="_blank" rel="noreferrer">install</a> and <a href="/docs/dashboard/connect-kubectl/#setup-gardenlogin">setup</a> <code>gardenlogin</code>.</p><p>You can obtain the kubeconfig for the <code>Shoot</code> cluster either by <a href="/docs/dashboard/connect-kubectl/#download-from-dashboard">downloading</a> it from the Gardener dashboard or by <a href="/docs/dashboard/connect-kubectl/#copy-and-run-gardenctl-target-command">copying</a> the <code>gardenctl target</code> command from the dashboard and executing it.</p><h3 id="setup-gardenlogin" tabindex="-1">Setup Gardenlogin <a class="header-anchor" href="#setup-gardenlogin" aria-label="Permalink to &quot;Setup Gardenlogin&quot;">​</a></h3><h5 id="prerequisites" tabindex="-1">Prerequisites <a class="header-anchor" href="#prerequisites" aria-label="Permalink to &quot;Prerequisites&quot;">​</a></h5><ul><li>You are logged on to the Gardener dashboard.</li><li>The dashboard admin has configured OIDC for the dashboard.</li><li>You have installed <a href="https://github.com/int128/kubelogin/blob/master/README.md#setup" target="_blank" rel="noreferrer">kubelogin</a></li><li>You have installed <a href="https://github.com/gardener/gardenlogin/blob/master/README.md#installation" target="_blank" rel="noreferrer">gardenlogin</a></li></ul><p>To setup <code>gardenlogin</code>, you need to:</p><ul><li><a href="/docs/dashboard/connect-kubectl/#download-kubeconfig-for-the-garden-cluster">Download the kubeconfig for the <code>Garden</code> cluster</a></li><li><a href="/docs/dashboard/connect-kubectl/#configure-gardenlogin">Configure gardenlogin</a></li></ul><h5 id="download-kubeconfig-for-the-garden-cluster" tabindex="-1">Download Kubeconfig for the <code>Garden</code> Cluster <a class="header-anchor" href="#download-kubeconfig-for-the-garden-cluster" aria-label="Permalink to &quot;Download Kubeconfig for the `Garden` Cluster&quot;">​</a></h5><ol><li>Navigate to the <code>MY ACCOUNT</code> page on the dashboard by clicking on the user avatar -&gt; <code>MY ACCOUNT</code>.</li><li>Under the <code>Access</code> section, download the kubeconfig. <img width="700" src="'+i+'"></li></ol><h5 id="configure-gardenlogin" tabindex="-1">Configure Gardenlogin <a class="header-anchor" href="#configure-gardenlogin" aria-label="Permalink to &quot;Configure Gardenlogin&quot;">​</a></h5><p>Configure gardenlogin by following the installation instruction on the dashboard:</p><ol><li>Select your project from the dropdown on the left</li><li>Choose <code>CLUSTERS</code> and select your cluster in the list.</li><li>Choose the <code>Show information about gardenlogin</code> info icon and follow the configuration hints.</li></ol><div class="important custom-block github-alert"><p class="custom-block-title">IMPORTANT</p><p>Use the <a href="/docs/dashboard/connect-kubectl/#download-kubeconfig-for-the-garden-cluster">previously downloaded</a> kubeconfig for the <code>Garden</code> cluster as the kubeconfig path. Do not use the <code>gardenlogin</code> <code>Shoot</code> cluster kubeconfig here.</p></div><img width="700" src="'+n+'"><h3 id="download-and-setup-kubeconfig-for-a-shoot-cluster" tabindex="-1">Download and Setup Kubeconfig for a <code>Shoot</code> Cluster <a class="header-anchor" href="#download-and-setup-kubeconfig-for-a-shoot-cluster" aria-label="Permalink to &quot;Download and Setup Kubeconfig for a `Shoot` Cluster&quot;">​</a></h3><p>The <code>gardenlogin</code> kubeconfig for the <code>Shoot</code> cluster can be obtained in various ways:</p><ul><li><a href="/docs/dashboard/connect-kubectl/#copy-and-run-gardenctl-target-command">Copy and run</a> the <code>gardenctl target</code> command from the dashboard</li><li><a href="/docs/dashboard/connect-kubectl/#download-from-dashboard">Download</a> from the Gardener dashboard</li></ul><h4 id="copy-and-run-gardenctl-target-command" tabindex="-1">Copy and Run <code>gardenctl target</code> Command <a class="header-anchor" href="#copy-and-run-gardenctl-target-command" aria-label="Permalink to &quot;Copy and Run `gardenctl target` Command&quot;">​</a></h4><p>Using the <code>gardenctl target</code> command you can quickly set or switch between clusters. The command sets the scope for the next operation, e.g., it ensures that the <code>KUBECONFIG</code> env variable always points to the current targeted cluster.</p><p>To target a <code>Shoot</code> cluster:</p><ol><li><p>Copy the <code>gardenctl target</code> command from the dashboard</p><img width="1000" src="'+r+'"></li><li><p>Paste and run the command in the terminal application, for example:</p></li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gardenctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> target</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --garden</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> landscape-dev</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --project</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> core</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --shoot</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mycluster</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Successfully</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> targeted</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> shoot</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;mycluster&quot;</span></span></code></pre></div><p>Your <code>KUBECONFIG</code> env variable is now pointing to the current target (also visible with <code>gardenctl target view -o yaml</code>). You can now run <code>kubectl</code> commands against your <code>Shoot</code> cluster.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> namespaces</span></span></code></pre></div><p>The command connects to the cluster and list its namespaces.</p><h5 id="kubeconfig-env-var-not-setup-correctly" tabindex="-1">KUBECONFIG Env Var not Setup Correctly <a class="header-anchor" href="#kubeconfig-env-var-not-setup-correctly" aria-label="Permalink to &quot;KUBECONFIG Env Var not Setup Correctly&quot;">​</a></h5><p>If your <code>KUBECONFIG</code> env variable does not point to the current target, you will see the following message after running the <code>gardenctl target</code> command:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">WARN</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> The</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> KUBECONFIG</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> environment</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> variable</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> does</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> not</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> point</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> current</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> target</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> of</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gardenctl.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> `</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gardenctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kubectl-env </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">--help</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> on</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> how</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> configure</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> KUBECONFIG</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> environment</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> variable</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> accordingly</span></span></code></pre></div><p>In this case you would need to run the following command (assuming <code>bash</code> as your current shell). For other shells, consult the <a href="https://github.com/gardener/gardenctl-v2/blob/master/docs/help/gardenctl_kubectl-env.md" target="_blank" rel="noreferrer">gardenctl kubectl-env --help</a> documentation.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> eval</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gardenctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kubectl-env bash)&quot;</span></span></code></pre></div><h4 id="download-from-dashboard" tabindex="-1">Download from Dashboard <a class="header-anchor" href="#download-from-dashboard" aria-label="Permalink to &quot;Download from Dashboard&quot;">​</a></h4><ol><li><p>Select your project from the dropdown on the left, then choose <code>CLUSTERS</code> and locate your cluster in the list. Choose the <em>key</em> icon to bring up a dialog with the access options.</p><img width="1000" src="'+l+'"><p>In the <code>Kubeconfig - Gardenlogin</code> section the options are to <em>show gardenlogin info</em>, <em>download</em>, <em>copy</em> or <em>view</em> the <code>kubeconfig</code> for the cluster.</p><p>The same options are available also in the <code>Access</code> section in the cluster details screen. To find it, choose a cluster from the list.</p><img width="1000" src="'+d+'"></li><li><p>Choose the download icon to download the <code>kubeconfig</code> as file on your local system.</p><img width="400" src="'+c+'"></li></ol><h5 id="connecting-to-the-cluster" tabindex="-1">Connecting to the Cluster <a class="header-anchor" href="#connecting-to-the-cluster" aria-label="Permalink to &quot;Connecting to the Cluster&quot;">​</a></h5><p>In the following command, change <code>&lt;path-to-gardenlogin-kubeconfig&gt;</code> with the actual path to the file where you stored the <code>kubeconfig</code> downloaded in the previous step 2.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kubectl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --kubeconfig=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">path-to-gardenlogin-kubeconfig</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> namespaces</span></span></code></pre></div><p>The command connects to the cluster and list its namespaces.</p><h5 id="exporting-kubeconfig-environment-variable" tabindex="-1">Exporting KUBECONFIG environment variable <a class="header-anchor" href="#exporting-kubeconfig-environment-variable" aria-label="Permalink to &quot;Exporting KUBECONFIG environment variable&quot;">​</a></h5><p>Since many <code>kubectl</code> commands will be used, it’s a good idea to take advantage of every opportunity to shorten the expressions. The <code>kubectl</code> tool has a fallback strategy for looking up a kubeconfig to work with. For example, it looks for the <code>KUBECONFIG</code> environment variable with value that is the path to the <code>kubeconfig</code> file meant to be used. Export the variable:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> export</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> KUBECONFIG=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">path-to-gardenlogin-kubeconfi</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">g</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>Again, replace <code>&lt;path-to-gardenlogin-kubeconfig&gt;</code> with the actual path to the kubeconfig for the cluster you want to connect to.</p><br><br><h2 id="what-s-next" tabindex="-1">What&#39;s next? <a class="header-anchor" href="#what-s-next" aria-label="Permalink to &quot;What&#39;s next?&quot;">​</a></h2><ul><li><a href="/docs/dashboard/using-terminal/">Using Dashboard Terminal</a></li></ul>',50)]))}const C=a(h,[["render",p]]);export{m as __pageData,C as default};
