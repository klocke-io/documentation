import{_ as a,c as s,o as t,a2 as i}from"./chunks/framework.B8WFj13S.js";const u=JSON.parse('{"title":"Contribution","description":"","frontmatter":{"github_repo":"https://github.com/gardener/dependency-watchdog","github_subdir":"docs/development","params":{"github_branch":"master"},"path_base_for_github_subdir":{"from":"content/docs/other-components/dependency-watchdog/contribution.md","to":"contribution.md"},"persona":"Developers","title":"Contribution","prev":false,"next":false},"headers":[],"relativePath":"docs/other-components/dependency-watchdog/contribution/index.md","filePath":"docs/other-components/dependency-watchdog/contribution.md","lastUpdated":null}'),n={name:"docs/other-components/dependency-watchdog/contribution/index.md"};function l(o,e,h,r,p,d){return t(),s("div",null,e[0]||(e[0]=[i(`<h1 id="how-to-contribute" tabindex="-1">How to contribute? <a class="header-anchor" href="#how-to-contribute" aria-label="Permalink to &quot;How to contribute?&quot;">​</a></h1><p>Contributions are always welcome!</p><p>In order to contribute ensure that you have the development environment setup and you familiarize yourself with required steps to build, verify-quality and test.</p><h2 id="setting-up-development-environment" tabindex="-1">Setting up development environment <a class="header-anchor" href="#setting-up-development-environment" aria-label="Permalink to &quot;Setting up development environment&quot;">​</a></h2><h3 id="installing-go" tabindex="-1">Installing Go <a class="header-anchor" href="#installing-go" aria-label="Permalink to &quot;Installing Go&quot;">​</a></h3><p>Minimum Golang version required: <code>1.18</code>. On MacOS run:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> go</span></span></code></pre></div><p>For other OS, follow the <a href="https://go.dev/doc/install" target="_blank" rel="noreferrer">installation instructions</a>.</p><h3 id="installing-git" tabindex="-1">Installing Git <a class="header-anchor" href="#installing-git" aria-label="Permalink to &quot;Installing Git&quot;">​</a></h3><p>Git is used as version control for dependency-watchdog. On MacOS run:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git</span></span></code></pre></div><p>If you do not have git installed already then please follow the <a href="https://git-scm.com/downloads" target="_blank" rel="noreferrer">installation instructions</a>.</p><h3 id="installing-docker" tabindex="-1">Installing Docker <a class="header-anchor" href="#installing-docker" aria-label="Permalink to &quot;Installing Docker&quot;">​</a></h3><p>In order to test dependency-watchdog containers you will need a local kubernetes setup. Easiest way is to first install Docker. This becomes a pre-requisite to setting up either a vanilla KIND/minikube cluster or a local Gardener cluster.</p><p>On MacOS run:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -cash</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker</span></span></code></pre></div><p>For other OS, follow the <a href="https://docs.docker.com/get-docker/" target="_blank" rel="noreferrer">installation instructions</a>.</p><h3 id="installing-kubectl" tabindex="-1">Installing Kubectl <a class="header-anchor" href="#installing-kubectl" aria-label="Permalink to &quot;Installing Kubectl&quot;">​</a></h3><p>To interact with the local Kubernetes cluster you will need kubectl. On MacOS run:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kubernetes-cli</span></span></code></pre></div><p>For other IS, follow the <a href="https://kubernetes.io/docs/tasks/tools/install-kubectl/" target="_blank" rel="noreferrer">installation instructions</a>.</p><h2 id="get-the-sources" tabindex="-1">Get the sources <a class="header-anchor" href="#get-the-sources" aria-label="Permalink to &quot;Get the sources&quot;">​</a></h2><p>Clone the repository from Github:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/gardener/dependency-watchdog.git</span></span></code></pre></div><h2 id="using-makefile" tabindex="-1">Using Makefile <a class="header-anchor" href="#using-makefile" aria-label="Permalink to &quot;Using Makefile&quot;">​</a></h2><p>For every change following make targets are recommended to run.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># build the code changes</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> make build</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ensure that all required checks pass</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> make verify </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># this will check formatting, linting and will run unit tests</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># if you do not wish to run tests then you can use the following make target.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> make check</span></span></code></pre></div><p>All tests should be run and the test coverage should ideally not reduce. Please ensure that you have read <a href="/documentation/pr-preview/pr-2/docs/other-components/dependency-watchdog/testing/">testing guidelines</a>.</p><p>Before raising a pull request ensure that if you are introducing any new file then you must add licesence header to all new files. To add license header you can run this make target:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> make add-license-headers</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># This will add license headers to any file which does not already have it.</span></span></code></pre></div><blockquote><p>NOTE: Also have a look at the Makefile as it has other targets that are not mentioned here.</p></blockquote><h2 id="raising-a-pull-request" tabindex="-1">Raising a Pull Request <a class="header-anchor" href="#raising-a-pull-request" aria-label="Permalink to &quot;Raising a Pull Request&quot;">​</a></h2><p>To raise a pull request do the following:</p><ol><li>Create a fork of <a href="https://github.com/gardener/dependency-watchdog" target="_blank" rel="noreferrer">dependency-watchdog</a></li><li>Add <a href="https://github.com/gardener/dependency-watchdog" target="_blank" rel="noreferrer">dependency-watchdog</a> as upstream remote via</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remote</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> upstream</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/gardener/dependency-watchdog</span></span></code></pre></div><ol start="3"><li>It is recommended that you create a git branch and push all your changes for the pull-request.</li><li>Ensure that while you work on your pull-request, you continue to rebase the changes from upstream to your branch. To do that execute the following command:</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pull</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --rebase</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> upstream</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> master</span></span></code></pre></div><ol start="5"><li>We prefer clean commits. If you have multiple commits in the pull-request, then squash the commits to a single commit. You can do this via <code>interactive git rebase</code> command. For example if your PR branch is ahead of remote origin HEAD by 5 commits then you can execute the following command and pick the first commit and squash the remaining commits.</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rebase</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> HEAD~5</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> #actual number from the head will depend upon how many commits your branch is ahead of remote origin master</span></span></code></pre></div>`,39)]))}const g=a(n,[["render",l]]);export{u as __pageData,g as default};
